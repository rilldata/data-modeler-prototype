syntax = "proto3";
package rill.runtime.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "rill/runtime/v1/catalog.proto";
import "rill/runtime/v1/schema.proto";
import "validate/validate.proto";

service QueryService {
  // Queries

  // Query runs a SQL query against the instance's OLAP datastore.
  rpc Query(QueryRequest) returns (QueryResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/query",
      body: "*"
    };
  }

  // Explore APIs

  // MetricsViewToplist returns the top dimension values of a metrics view sorted by one or more measures.
  // It's a convenience API for querying a metrics view.
  rpc MetricsViewToplist(MetricsViewToplistRequest) returns (MetricsViewToplistResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/metrics-views/{metrics_view_name}/toplist",
      body: "*"
    };
  }

  // MetricsViewTimeSeries returns time series for the measures in the metrics view.
  // It's a convenience API for querying a metrics view.
  rpc MetricsViewTimeSeries(MetricsViewTimeSeriesRequest) returns (MetricsViewTimeSeriesResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/metrics-views/{metrics_view_name}/timeseries",
      body: "*"
    };
  }

  // MetricsViewTotals returns totals over a time period for the measures in a metrics view.
  // It's a convenience API for querying a metrics view.
  rpc MetricsViewTotals(MetricsViewTotalsRequest) returns (MetricsViewTotalsResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/metrics-views/{metrics_view_name}/totals",
      body: "*"
    };
  }

  // Profiling APIs

  // EstimateRollupInterval (TODO: add description)
  rpc EstimateRollupInterval(EstimateRollupIntervalRequest) returns (EstimateRollupIntervalResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/queries/rollup-interval/tables/{table_name}",
      body: "*"
    };
  }

  // Get TopK elements from a table for a column given an agg function
  // agg function and k are optional, defaults are count(*) and 50 respectively
  rpc GetTopK(GetTopKRequest) returns (GetTopKResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/queries/topk/tables/{table_name}",
      body: "*"
    };
  }

  // Get the number of nulls in a column
  rpc GetNullCount(GetNullCountRequest) returns (GetNullCountResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/null-count/tables/{table_name}"};
  }

  // Get basic stats for a numeric column like min, max, mean, stddev, etc
  rpc GetDescriptiveStatistics(GetDescriptiveStatisticsRequest) returns (GetDescriptiveStatisticsResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/descriptive-statistics/tables/{table_name}"};
  }

  // Estimates the smallest time grain present in the column
  rpc EstimateSmallestTimeGrain(EstimateSmallestTimeGrainRequest) returns (EstimateSmallestTimeGrainResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/smallest-time-grain/tables/{table_name}"};
  }

  // Get the histogram for values in a column
  rpc GetNumericHistogram(GetNumericHistogramRequest) returns (GetNumericHistogramResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/numeric-histogram/tables/{table_name}"};
  }

  // Get outliers for a numeric column
  rpc GetRugHistogram(GetRugHistogramRequest) returns (GetRugHistogramResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/rug-histogram/tables/{table_name}"};
  }

  // Get the time range summaries (min, max) for a column
  rpc GetTimeRangeSummary(GetTimeRangeSummaryRequest) returns (GetTimeRangeSummaryResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/time-range-summary/tables/{table_name}"};
  }

  // Get cardinality for a column
  rpc GetCardinalityOfColumn(GetCardinalityOfColumnRequest) returns (GetCardinalityOfColumnResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/column-cardinality/tables/{table_name}"};
  }

  // Generate time series
  rpc GenerateTimeSeries(GenerateTimeSeriesRequest) returns (GenerateTimeSeriesResponse) {
    option (google.api.http) = {
      post: "/v1/instances/{instance_id}/queries/timeseries/tables/{table_name}",
      body: "*"
    };
  }

  // Tablewide profiling APIs

  // TableCardinality (TODO: add description)
  rpc GetTableCardinality(GetTableCardinalityRequest) returns (GetTableCardinalityResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/table-cardinality/tables/{table_name}"};
  }

  // ProfileColumns (TODO: add description)
  rpc ProfileColumns(ProfileColumnsRequest) returns (ProfileColumnsResponse) {
    option (google.api.http) = {post: "/v1/instances/{instance_id}/queries/columns-profile/tables/{table_name}"};
  }

  // TableRows (TODO: add description)
  rpc GetTableRows(GetTableRowsRequest) returns (GetTableRowsResponse) {
    option (google.api.http) = {get: "/v1/instances/{instance_id}/queries/rows/tables/{table_name}"};
  }
}

// **********
// Queries
// **********

// Request message for RuntimeService.Query
message QueryRequest {
  // Instance to query
  string instance_id = 1 [(validate.rules).string = {pattern: "^[_\\-a-zA-Z0-9]+$"}];
  // SELECT statement
  string sql = 2;
  // Args to interpolate into the statement
  repeated google.protobuf.Value args = 3;
  // Query priority (not supported by all backends)
  int32 priority = 4;
  // If true, will only validate the query, not execute it
  bool dry_run = 5;
}

// Response message for RuntimeService.Query
message QueryResponse {
  // Schema of result data
  StructType meta = 1;
  // Result data
  repeated google.protobuf.Struct data = 2;
}

// **********
// Explore APIs
// **********

// Request message for RuntimeService.MetricsViewToplist
message MetricsViewToplistRequest {
  string instance_id = 1;
  string metrics_view_name = 2;
  string dimension_name = 3;
  repeated string measure_names = 4;
  google.protobuf.Timestamp time_start = 5;
  google.protobuf.Timestamp time_end = 6;
  int64 limit = 7;
  int64 offset = 8;
  repeated MetricsViewSort sort = 9;
  MetricsViewFilter filter = 10;
  int32 priority = 11;
}

// Response message for RuntimeService.MetricsViewToplist
message MetricsViewToplistResponse {
  repeated MetricsViewColumn meta = 1;
  repeated google.protobuf.Struct data = 2;
}

// Request message for RuntimeService.MetricsViewTimeSeries
message MetricsViewTimeSeriesRequest {
  string instance_id = 1;
  string metrics_view_name = 2;
  repeated string measure_names = 3;
  google.protobuf.Timestamp time_start = 4;
  google.protobuf.Timestamp time_end = 5;
  TimeGrain time_granularity = 6;
  MetricsViewFilter filter = 7;
  int32 priority = 8;
}

// Response message for RuntimeService.MetricsViewTimeSeries
message MetricsViewTimeSeriesResponse {
  repeated MetricsViewColumn meta = 1;
  repeated TimeSeriesValue data = 2;
}

// Request message for RuntimeService.MetricsViewTotals
message MetricsViewTotalsRequest {
  string instance_id = 1;
  string metrics_view_name = 2;
  repeated string measure_names = 3;
  google.protobuf.Timestamp time_start = 4;
  google.protobuf.Timestamp time_end = 5;
  MetricsViewFilter filter = 7;
  int32 priority = 8;
}

// Response message for RuntimeService.MetricsViewTotals
message MetricsViewTotalsResponse {
  repeated MetricsViewColumn meta = 1;
  google.protobuf.Struct data = 2;
}

// Sort clause for metrics view requests
message MetricsViewSort {
  string name = 1;
  bool ascending = 2;
}

// Filter clause for metrics view requests
message MetricsViewFilter {
  message Cond {
    string name = 1;
    repeated google.protobuf.Value in = 2;
    repeated string like = 3;
  }
  repeated Cond include = 2;
  repeated Cond exclude = 3;
}

// MetricsViewColumn represents a column in a metrics view
message MetricsViewColumn {
  string name = 1;
  string type = 2;
  bool nullable = 3;
}

// **********
// Profiling APIs
// **********

message EstimateRollupIntervalRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

message EstimateRollupIntervalResponse {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp end = 2;
  TimeGrain interval = 3;
}

message ProfileColumnSummary {
  oneof case {
    CategoricalSummary categorical_summary = 1;
    NumericSummary numeric_summary = 2;
    TimeRangeSummary time_range_summary = 3;
  }
}

// Response for RuntimeService.GetTopK and RuntimeService.GetCardinalityOfColumn. Message will have either topK or cardinality set.
message CategoricalSummary {
  oneof case {
    TopK top_k = 1;
    double cardinality = 2;
  }
}

message GetCardinalityOfColumnResponse {
  CategoricalSummary categorical_summary = 1;
}

message GetTopKResponse {
  CategoricalSummary categorical_summary = 1;
}

// Response for RuntimeService.GetNumericHistogram, RuntimeService.GetDescriptiveStatistics and RuntimeService.GetCardinalityOfColumn.
// Message will have either numericHistogramBins, numericStatistics or numericOutliers set.
message NumericSummary {
  oneof case {
    NumericHistogramBins numeric_histogram_bins = 1;
    NumericStatistics numeric_statistics = 2;
    NumericOutliers numeric_outliers = 3;
  }
}

message GetRugHistogramResponse {
  NumericSummary numeric_summary = 1;
}

message GetNumericHistogramResponse {
  NumericSummary numeric_summary = 1;
}

message GetDescriptiveStatisticsResponse {
  NumericSummary numeric_summary = 1;
}

message GetTimeRangeSummaryResponse {
  TimeRangeSummary time_range_summary = 1;
}

message TimeRangeSummary {
  google.protobuf.Timestamp min = 1;
  google.protobuf.Timestamp max = 2;
  message Interval {
    int32 months = 1;
    int32 days = 2;
    int64 micros = 3;
  }
  Interval interval = 3;
}

message NumericOutliers {
  message Outlier {
    int32 bucket = 1;
    double low = 2;
    double high = 3;
    bool present = 4;
    int32 count = 5;
  }
  repeated Outlier outliers = 1;
}

// Request for RuntimeService.GetTopK. Returns the top K values for a given column using agg function for table table_name.
message GetTopKRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  string agg = 4; // default is count(*)
  int32 k = 5; // default is 50
  int32 priority = 6;
}

message TopK {
  repeated Entry entries = 1;
  message Entry {
    google.protobuf.Value value = 1;
    double count = 2;
  }
}

// Request for RuntimeService.GetNullCount. Returns the null count for a given column for table table_name
message GetNullCountRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

// Response for RuntimeService.GetNullCount
message GetNullCountResponse {
  double count = 1;
}

// Request for RuntimeService.GetGetDescriptiveStatisticsRequest. Returns the stats for a given column for table table_name
message GetDescriptiveStatisticsRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

// Response for RuntimeService.GetDescriptiveStatistics
message NumericStatistics {
  double min = 1;
  double max = 2;
  double mean = 3;
  double q25 = 4;
  double q50 = 5;
  double q75 = 6;
  double sd = 7;
}

// Request for RuntimeService.EstimateSmallestTimeGrainRequest
message EstimateSmallestTimeGrainRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

enum TimeGrain {
  TIME_GRAIN_UNSPECIFIED = 0;
  TIME_GRAIN_MILLISECOND = 1;
  TIME_GRAIN_SECOND = 2;
  TIME_GRAIN_MINUTE = 3;
  TIME_GRAIN_HOUR = 4;
  TIME_GRAIN_DAY = 5;
  TIME_GRAIN_WEEK = 6;
  TIME_GRAIN_MONTH = 7;
  TIME_GRAIN_YEAR = 8;
}

// Response for RuntimeService.EstimateSmallestTimeGrain
message EstimateSmallestTimeGrainResponse {
  TimeGrain time_grain = 1;
}

enum HistogramMethod {
  HISTOGRAM_METHOD_UNSPECIFIED = 0;
  HISTOGRAM_METHOD_FD = 1;
  HISTOGRAM_METHOD_DIAGNOSTIC = 2;
}

// Request for RuntimeService.GetNumericHistogram. Returns the histogram for a given column for table table_name
message GetNumericHistogramRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  HistogramMethod histogram_method = 4;
  int32 priority = 5;
}

// Response for RuntimeService.GetNumericHistogram
message NumericHistogramBins {
  message Bin {
    int32 bucket = 1;
    double low = 2;
    double midpoint = 3;
    double high = 4;
    double count = 5;
  }
  repeated Bin bins = 1;
}

// Request for RuntimeService.GetRugHistogram
message GetRugHistogramRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

// Request for RuntimeService.GetTimeRangeSummary
message GetTimeRangeSummaryRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

// Request for RuntimeService.GetCardinalityOfColumn. Returns the cardinality for a given column for table table_name
message GetCardinalityOfColumnRequest {
  string instance_id = 1;
  string table_name = 2;
  string column_name = 3;
  int32 priority = 4;
}

message GenerateTimeSeriesRequest {
  string instance_id = 1;
  string table_name = 2;
  repeated BasicMeasure measures = 3;
  string timestamp_column_name = 4;
  TimeSeriesTimeRange time_range = 5;
  MetricsViewFilter filters = 6;
  int32 pixels = 7;
  int32 sample_size = 8;
  int32 priority = 9;
  message BasicMeasure {
    string id = 1;
    // mandatory user defined metadata
    string expression = 2;
    // optional user defined metadata
    string sql_name = 3;
  }
}

message TimeSeriesTimeRange {
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  TimeGrain interval = 4 [(validate.rules).enum.defined_only = true];
}

enum TimeRangeName {
  TIME_RANGE_NAME_UNSPECIFIED = 0;
  TIME_RANGE_NAME_LAST_HOUR = 1;
  TIME_RANGE_NAME_LAST_6_HOUR = 2;
  TIME_RANGE_NAME_LAST_DAY = 3;
  TIME_RANGE_NAME_LAST_2_DAYS = 4;
  TIME_RANGE_NAME_LAST_5_DAYS = 5;
  TIME_RANGE_NAME_LAST_WEEK = 6;
  TIME_RANGE_NAME_LAST_2_WEEKS = 7;
  TIME_RANGE_NAME_LAST_30_DAYS = 8;
  TIME_RANGE_NAME_LAST_60_DAYS = 9;
  TIME_RANGE_NAME_ALL_TIME = 10;
  // Today
  // MonthToDate
  // CustomRange
}

message TimeSeriesResponse {
  repeated TimeSeriesValue results = 1;
  repeated TimeSeriesValue spark = 2;
  TimeSeriesTimeRange time_range = 3;
  int32 sample_size = 4;
}

message GenerateTimeSeriesResponse {
  TimeSeriesResponse rollup = 1;
}

message TimeSeriesValue {
  google.protobuf.Timestamp ts = 1;
  double bin = 2;
  google.protobuf.Struct records = 3;
}

// **********
// Tablewide profiling API
// **********

enum DatabaseObjectType {
  DATABASE_OBJECT_TYPE_UNSPECIFIED = 0;
  DATABASE_OBJECT_TYPE_TABLE = 1;
  DATABASE_OBJECT_TYPE_VIEW = 2;
  DATABASE_OBJECT_TYPE_FUNCTION = 3;
}

message GetTableCardinalityRequest {
  string instance_id = 1;
  string table_name = 2;
  int32 priority = 3;
}

message GetTableCardinalityResponse {
  int64 cardinality = 1;
}

message ProfileColumnsRequest {
  string instance_id = 1;
  string table_name = 2;
  int32 priority = 3;
}

message ProfileColumnsResponse {
  repeated ProfileColumn profile_columns = 1;
}

message ProfileColumn {
  string name = 1;
  string type = 2;
  int32 largest_string_length = 3;
}

message GetTableRowsRequest {
  string instance_id = 1;
  string table_name = 2;
  int32 limit = 3;
  int32 priority = 4;
}

message GetTableRowsResponse {
  repeated google.protobuf.Struct data = 1;
}
