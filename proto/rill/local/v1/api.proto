syntax = "proto3";
package rill.local.v1;

import "google/protobuf/timestamp.proto";
import "rill/admin/v1/api.proto";

service LocalService {
  // Ping returns the current time.
  rpc Ping(PingRequest) returns (PingResponse) {}

  // GetMetadata returns information about the local Rill instance.
  rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {}

  // GetVersion returns details about the current and latest available Rill versions.
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse) {}

  // DeployValidation validates a deploy request.
  rpc DeployValidation(DeployValidationRequest) returns (DeployValidationResponse) {}

  // PushToGithub create a Git repo from local project and pushed to users git account.
  rpc PushToGithub(PushToGithubRequest) returns (PushToGithubResponse) {}

  // Deploy deploys the local project to the Rill cloud.
  rpc Deploy(DeployRequest) returns (DeployResponse) {}
}

message PingRequest {}

message PingResponse {
  google.protobuf.Timestamp time = 1;
}

message GetMetadataRequest {}

message GetMetadataResponse {
  string instance_id = 1;
  string project_path = 2;
  string install_id = 3;
  string user_id = 4;
  string version = 5;
  string build_commit = 6;
  string build_time = 7;
  bool is_dev = 8;
  bool analytics_enabled = 9;
  bool readonly = 10;
  int32 grpc_port = 11;
}

message GetVersionRequest {}

message GetVersionResponse {
  string current = 1;
  string latest = 2;
}

message DeployValidationRequest {}

message DeployValidationResponse {
  bool is_authenticated = 1; // if true below fields are relevant after login
  bool is_github_connected = 2; // if true below fields are relevant after github install
  string github_grant_access_url = 3; // redirect to this if is_github_connected or is_github_repo_access_granted is false
  string github_user_name = 4;
  rill.admin.v1.GithubPermission github_app_user_permission = 5; // if unspecified then github app not installed on user account
  map<string, rill.admin.v1.GithubPermission> github_organization_installation_permissions = 6;
  bool is_github_repo = 7;
  bool is_github_remote_found = 8; // only applicable when is_github_repo is true
  bool is_github_repo_access_granted = 9; // relevant only when is_github_repo is true and remote found, if false redirect to github_grant_access_url
  string github_url = 10; // only applicable when is_github_repo is true and remote found
  optional bool has_uncommitted_changes = 11; // only applicable when is_github_repo is true and remote found
  bool rill_org_exists_as_github_user_name = 12; // only applicable when user does not have any orgs
  repeated string rill_user_orgs = 13;
  string local_project_name = 14;
}

message PushToGithubRequest {
  string org = 1;
  string repo = 2;
}

message PushToGithubResponse {
  string github_url = 1;
}

message DeployRequest {
  string org = 1;
  string project_name = 2;
}

message DeployResponse {
  string deploy_id = 1;
  string org = 2;
  string project = 3;
  string frontend_url = 4;
}