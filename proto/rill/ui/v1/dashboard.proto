syntax = "proto3";
package rill.ui.v1;

import "google/protobuf/timestamp.proto";
import "rill/runtime/v1/time_grain.proto";
import "rill/runtime/v1/queries.proto";
import "rill/runtime/v1/expression.proto";

// DashboardState represents the dashboard as seen by the user
message DashboardState {
  enum LeaderboardContextColumn {
    LEADERBOARD_CONTEXT_COLUMN_UNSPECIFIED=0;
    LEADERBOARD_CONTEXT_COLUMN_PERCENT = 1;
    LEADERBOARD_CONTEXT_COLUMN_DELTA_PERCENT = 2;
    LEADERBOARD_CONTEXT_COLUMN_DELTA_ABSOLUTE = 3;
    LEADERBOARD_CONTEXT_COLUMN_HIDDEN = 4;
  }

  enum LeaderboardSortDirection {
    LEADERBOARD_SORT_DIRECTION_UNSPECIFIED = 0;
    LEADERBOARD_SORT_DIRECTION_ASCENDING = 1;
    LEADERBOARD_SORT_DIRECTION_DESCENDING = 2;
  }

  /**
   * SortType is used to determine how to sort the leaderboard
   * and dimension detail table, as well as where to place the
   * sort arrow.
   *
   * By default, the leaderboards+table will be sorted by VALUE,
   * using the value of the currently selected dashboard measure.
   *
   * If DELTA_ABSOLUTE or DELTA_PERCENT is selected, the
   * leaderboards+table will be sorted by the absolute or percentage
   * delta change of the currently selected dashboard measure.
   *
   * If PERCENT is selected, the table will be sorted by the value
   * of the currently selected dashboard measure, which will return
   * the same ordering as the percent-of-total sort for measures
   * with valid percent-of-total. However, the sort arrow will be
   * placed next to the percent-of-total icon.
   *
   * As of 2023-08, DIMENSION is not implemented, but at that time
   * the plan was to only apply DIMENSTION sort to the dimension
   * detail table, and not the leaderboards.
   */
  enum LeaderboardSortType {
    LEADERBOARD_SORT_TYPE_UNSPECIFIED = 0;
    LEADERBOARD_SORT_TYPE_VALUE = 1;
    LEADERBOARD_SORT_TYPE_DIMENSION = 2;
    LEADERBOARD_SORT_TYPE_PERCENT = 3;
    LEADERBOARD_SORT_TYPE_DELTA_PERCENT = 4;
    LEADERBOARD_SORT_TYPE_DELTA_ABSOLUTE = 5;
  }

  // Selected time range
  DashboardTimeRange time_range = 1;
  // Dimension filters applied
  rill.runtime.v1.MetricsViewFilter filters = 2;
  // Expression format for dimension filters
  rill.runtime.v1.Expression where = 20;
  // Expression format for measure filters
  repeated DashboardDimensionFilter having = 21;
  // Selected time granularity
  rill.runtime.v1.TimeGrain time_grain = 3;

  DashboardTimeRange compare_time_range = 4;

  // Selected measure for the leaderboard
  optional string leaderboard_measure = 5;
  // Focused dimension
  optional string selected_dimension = 6;

  optional bool show_time_comparison = 7;

  // Selected measures and dimensions to be shown
  repeated string visible_measures = 8;
  optional bool all_measures_visible = 9;
  repeated string visible_dimensions = 10;
  optional bool all_dimensions_visible = 11;

  optional LeaderboardContextColumn leaderboard_context_column = 12;

  // Selected timezone for the dashboard
  optional string selected_timezone = 13;

  // Scrub time range
  optional DashboardTimeRange scrub_range = 14;

  optional LeaderboardSortDirection leaderboard_sort_direction = 15;
  optional LeaderboardSortType leaderboard_sort_type = 16;

  optional string comparison_dimension = 17;

  // Expanded measure for TDD view
  optional string expanded_measure = 18;

  optional int32 pin_index = 19;
}

message DashboardTimeRange {
  optional string name = 1;
  optional google.protobuf.Timestamp time_start = 2;
  optional google.protobuf.Timestamp time_end = 3;
}

message DashboardDimensionFilter {
  string name = 1;
  rill.runtime.v1.Expression filter = 2;
}
