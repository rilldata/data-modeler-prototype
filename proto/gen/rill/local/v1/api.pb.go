// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: rill/local/v1/api.proto

package localv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UncommittedChanges int32

const (
	UncommittedChanges_UNCOMMITTED_CHANGES_UNSPECIFIED UncommittedChanges = 0
	UncommittedChanges_UNCOMMITTED_CHANGES_YES         UncommittedChanges = 1
	UncommittedChanges_UNCOMMITTED_CHANGES_NO          UncommittedChanges = 2
)

// Enum value maps for UncommittedChanges.
var (
	UncommittedChanges_name = map[int32]string{
		0: "UNCOMMITTED_CHANGES_UNSPECIFIED",
		1: "UNCOMMITTED_CHANGES_YES",
		2: "UNCOMMITTED_CHANGES_NO",
	}
	UncommittedChanges_value = map[string]int32{
		"UNCOMMITTED_CHANGES_UNSPECIFIED": 0,
		"UNCOMMITTED_CHANGES_YES":         1,
		"UNCOMMITTED_CHANGES_NO":          2,
	}
)

func (x UncommittedChanges) Enum() *UncommittedChanges {
	p := new(UncommittedChanges)
	*p = x
	return p
}

func (x UncommittedChanges) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UncommittedChanges) Descriptor() protoreflect.EnumDescriptor {
	return file_rill_local_v1_api_proto_enumTypes[0].Descriptor()
}

func (UncommittedChanges) Type() protoreflect.EnumType {
	return &file_rill_local_v1_api_proto_enumTypes[0]
}

func (x UncommittedChanges) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UncommittedChanges.Descriptor instead.
func (UncommittedChanges) EnumDescriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{0}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type GetMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{2}
}

type GetMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ProjectPath      string `protobuf:"bytes,2,opt,name=project_path,json=projectPath,proto3" json:"project_path,omitempty"`
	InstallId        string `protobuf:"bytes,3,opt,name=install_id,json=installId,proto3" json:"install_id,omitempty"`
	UserId           string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version          string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	BuildCommit      string `protobuf:"bytes,6,opt,name=build_commit,json=buildCommit,proto3" json:"build_commit,omitempty"`
	BuildTime        string `protobuf:"bytes,7,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	IsDev            bool   `protobuf:"varint,8,opt,name=is_dev,json=isDev,proto3" json:"is_dev,omitempty"`
	AnalyticsEnabled bool   `protobuf:"varint,9,opt,name=analytics_enabled,json=analyticsEnabled,proto3" json:"analytics_enabled,omitempty"`
	Readonly         bool   `protobuf:"varint,10,opt,name=readonly,proto3" json:"readonly,omitempty"`
	GrpcPort         int32  `protobuf:"varint,11,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetMetadataResponse) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetMetadataResponse) GetProjectPath() string {
	if x != nil {
		return x.ProjectPath
	}
	return ""
}

func (x *GetMetadataResponse) GetInstallId() string {
	if x != nil {
		return x.InstallId
	}
	return ""
}

func (x *GetMetadataResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMetadataResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetMetadataResponse) GetBuildCommit() string {
	if x != nil {
		return x.BuildCommit
	}
	return ""
}

func (x *GetMetadataResponse) GetBuildTime() string {
	if x != nil {
		return x.BuildTime
	}
	return ""
}

func (x *GetMetadataResponse) GetIsDev() bool {
	if x != nil {
		return x.IsDev
	}
	return false
}

func (x *GetMetadataResponse) GetAnalyticsEnabled() bool {
	if x != nil {
		return x.AnalyticsEnabled
	}
	return false
}

func (x *GetMetadataResponse) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *GetMetadataResponse) GetGrpcPort() int32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{4}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current string `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Latest  string `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetVersionResponse) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *GetVersionResponse) GetLatest() string {
	if x != nil {
		return x.Latest
	}
	return ""
}

type DeployValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployValidationRequest) Reset() {
	*x = DeployValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployValidationRequest) ProtoMessage() {}

func (x *DeployValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployValidationRequest.ProtoReflect.Descriptor instead.
func (*DeployValidationRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{6}
}

type DeployValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAuthenticated            bool                   `protobuf:"varint,1,opt,name=is_authenticated,json=isAuthenticated,proto3" json:"is_authenticated,omitempty"`          // if true below fields are relevant after login
	IsGithubConnected          bool                   `protobuf:"varint,2,opt,name=is_github_connected,json=isGithubConnected,proto3" json:"is_github_connected,omitempty"`  // if true below fields are relevant after git install
	GitGrantAccessUrl          string                 `protobuf:"bytes,3,opt,name=git_grant_access_url,json=gitGrantAccessUrl,proto3" json:"git_grant_access_url,omitempty"` // redirect to this if is_github_connected or is_repo_access_granted is false
	GitUserName                string                 `protobuf:"bytes,4,opt,name=git_user_name,json=gitUserName,proto3" json:"git_user_name,omitempty"`
	IsUserAppInstalled         bool                   `protobuf:"varint,5,opt,name=is_user_app_installed,json=isUserAppInstalled,proto3" json:"is_user_app_installed,omitempty"` // if rill git app is installed on user account
	UserAppPermission          string                 `protobuf:"bytes,6,opt,name=user_app_permission,json=userAppPermission,proto3" json:"user_app_permission,omitempty"`
	GitUserOrgs                []string               `protobuf:"bytes,7,rep,name=git_user_orgs,json=gitUserOrgs,proto3" json:"git_user_orgs,omitempty"`
	IsGitRepo                  bool                   `protobuf:"varint,8,opt,name=is_git_repo,json=isGitRepo,proto3" json:"is_git_repo,omitempty"`
	GitRemoteFound             bool                   `protobuf:"varint,9,opt,name=git_remote_found,json=gitRemoteFound,proto3" json:"git_remote_found,omitempty"`                                                  // only applicable when is_git_repo is true
	IsRepoAccessGranted        bool                   `protobuf:"varint,10,opt,name=is_repo_access_granted,json=isRepoAccessGranted,proto3" json:"is_repo_access_granted,omitempty"`                                // relevant only when is_git_repo is true and remote found, if false redirect to git_grant_access_url
	GitUrl                     string                 `protobuf:"bytes,11,opt,name=git_url,json=gitUrl,proto3" json:"git_url,omitempty"`                                                                            // only applicable when is_git_repo is true and remote found
	UncommittedChanges         UncommittedChanges     `protobuf:"varint,12,opt,name=uncommitted_changes,json=uncommittedChanges,proto3,enum=rill.local.v1.UncommittedChanges" json:"uncommitted_changes,omitempty"` // only applicable when is_git_repo is true and remote found
	RillOrgExistsAsGitUserName bool                   `protobuf:"varint,13,opt,name=rill_org_exists_as_git_user_name,json=rillOrgExistsAsGitUserName,proto3" json:"rill_org_exists_as_git_user_name,omitempty"`     // only applicable when user does not have any orgs
	RillUserOrgs               []string               `protobuf:"bytes,14,rep,name=rill_user_orgs,json=rillUserOrgs,proto3" json:"rill_user_orgs,omitempty"`
	LocalProjectName           string                 `protobuf:"bytes,15,opt,name=local_project_name,json=localProjectName,proto3" json:"local_project_name,omitempty"`
	OrganizationsWithApp       []*OrganizationWithApp `protobuf:"bytes,16,rep,name=organizations_with_app,json=organizationsWithApp,proto3" json:"organizations_with_app,omitempty"`
}

func (x *DeployValidationResponse) Reset() {
	*x = DeployValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployValidationResponse) ProtoMessage() {}

func (x *DeployValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployValidationResponse.ProtoReflect.Descriptor instead.
func (*DeployValidationResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeployValidationResponse) GetIsAuthenticated() bool {
	if x != nil {
		return x.IsAuthenticated
	}
	return false
}

func (x *DeployValidationResponse) GetIsGithubConnected() bool {
	if x != nil {
		return x.IsGithubConnected
	}
	return false
}

func (x *DeployValidationResponse) GetGitGrantAccessUrl() string {
	if x != nil {
		return x.GitGrantAccessUrl
	}
	return ""
}

func (x *DeployValidationResponse) GetGitUserName() string {
	if x != nil {
		return x.GitUserName
	}
	return ""
}

func (x *DeployValidationResponse) GetIsUserAppInstalled() bool {
	if x != nil {
		return x.IsUserAppInstalled
	}
	return false
}

func (x *DeployValidationResponse) GetUserAppPermission() string {
	if x != nil {
		return x.UserAppPermission
	}
	return ""
}

func (x *DeployValidationResponse) GetGitUserOrgs() []string {
	if x != nil {
		return x.GitUserOrgs
	}
	return nil
}

func (x *DeployValidationResponse) GetIsGitRepo() bool {
	if x != nil {
		return x.IsGitRepo
	}
	return false
}

func (x *DeployValidationResponse) GetGitRemoteFound() bool {
	if x != nil {
		return x.GitRemoteFound
	}
	return false
}

func (x *DeployValidationResponse) GetIsRepoAccessGranted() bool {
	if x != nil {
		return x.IsRepoAccessGranted
	}
	return false
}

func (x *DeployValidationResponse) GetGitUrl() string {
	if x != nil {
		return x.GitUrl
	}
	return ""
}

func (x *DeployValidationResponse) GetUncommittedChanges() UncommittedChanges {
	if x != nil {
		return x.UncommittedChanges
	}
	return UncommittedChanges_UNCOMMITTED_CHANGES_UNSPECIFIED
}

func (x *DeployValidationResponse) GetRillOrgExistsAsGitUserName() bool {
	if x != nil {
		return x.RillOrgExistsAsGitUserName
	}
	return false
}

func (x *DeployValidationResponse) GetRillUserOrgs() []string {
	if x != nil {
		return x.RillUserOrgs
	}
	return nil
}

func (x *DeployValidationResponse) GetLocalProjectName() string {
	if x != nil {
		return x.LocalProjectName
	}
	return ""
}

func (x *DeployValidationResponse) GetOrganizationsWithApp() []*OrganizationWithApp {
	if x != nil {
		return x.OrganizationsWithApp
	}
	return nil
}

type OrganizationWithApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org        string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *OrganizationWithApp) Reset() {
	*x = OrganizationWithApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganizationWithApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationWithApp) ProtoMessage() {}

func (x *OrganizationWithApp) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationWithApp.ProtoReflect.Descriptor instead.
func (*OrganizationWithApp) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *OrganizationWithApp) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *OrganizationWithApp) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type PushToGitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org  string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Repo string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *PushToGitRequest) Reset() {
	*x = PushToGitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToGitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToGitRequest) ProtoMessage() {}

func (x *PushToGitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToGitRequest.ProtoReflect.Descriptor instead.
func (*PushToGitRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *PushToGitRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *PushToGitRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type PushToGitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GitUrl string `protobuf:"bytes,1,opt,name=git_url,json=gitUrl,proto3" json:"git_url,omitempty"`
}

func (x *PushToGitResponse) Reset() {
	*x = PushToGitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToGitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToGitResponse) ProtoMessage() {}

func (x *PushToGitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToGitResponse.ProtoReflect.Descriptor instead.
func (*PushToGitResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *PushToGitResponse) GetGitUrl() string {
	if x != nil {
		return x.GitUrl
	}
	return ""
}

type DeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RillOrg         string `protobuf:"bytes,1,opt,name=rill_org,json=rillOrg,proto3" json:"rill_org,omitempty"`                           // creates the org if does not exists, no validation
	RillProjectName string `protobuf:"bytes,2,opt,name=rill_project_name,json=rillProjectName,proto3" json:"rill_project_name,omitempty"` // no validation, assuming user provided correct name as per the prompts
}

func (x *DeployRequest) Reset() {
	*x = DeployRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployRequest) ProtoMessage() {}

func (x *DeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployRequest.ProtoReflect.Descriptor instead.
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *DeployRequest) GetRillOrg() string {
	if x != nil {
		return x.RillOrg
	}
	return ""
}

func (x *DeployRequest) GetRillProjectName() string {
	if x != nil {
		return x.RillProjectName
	}
	return ""
}

type DeployResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployId    string `protobuf:"bytes,1,opt,name=deploy_id,json=deployId,proto3" json:"deploy_id,omitempty"`
	Org         string `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
	Project     string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	FrontendUrl string `protobuf:"bytes,4,opt,name=frontend_url,json=frontendUrl,proto3" json:"frontend_url,omitempty"`
}

func (x *DeployResponse) Reset() {
	*x = DeployResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_local_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployResponse) ProtoMessage() {}

func (x *DeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_local_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployResponse.ProtoReflect.Descriptor instead.
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return file_rill_local_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *DeployResponse) GetDeployId() string {
	if x != nil {
		return x.DeployId
	}
	return ""
}

func (x *DeployResponse) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *DeployResponse) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *DeployResponse) GetFrontendUrl() string {
	if x != nil {
		return x.FrontendUrl
	}
	return ""
}

var File_rill_local_v1_api_proto protoreflect.FileDescriptor

var file_rill_local_v1_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xea,
	0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x44, 0x65, 0x76, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xb1, 0x06, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69,
	0x73, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x67,
	0x69, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x69, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d,
	0x67, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x67, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x74, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x52, 0x0a, 0x13, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x12, 0x75, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x20, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x67, 0x5f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x61, 0x73, 0x5f, 0x67, 0x69, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72,
	0x69, 0x6c, 0x6c, 0x4f, 0x72, 0x67, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x41, 0x73, 0x47, 0x69,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x69, 0x6c,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a,
	0x16, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70,
	0x70, 0x52, 0x14, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x22, 0x47, 0x0a, 0x13, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x38, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x47, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x22, 0x2c, 0x0a, 0x11, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x6f, 0x47, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x56, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x6c,
	0x6c, 0x5f, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x6c,
	0x6c, 0x4f, 0x72, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x7c, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x2a, 0x72,
	0x0a, 0x12, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54,
	0x54, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x43,
	0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53,
	0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f,
	0x10, 0x02, 0x32, 0x80, 0x04, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x6f, 0x47, 0x69, 0x74, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x47,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x1c, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xad, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x69, 0x6c,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x69, 0x6c, 0x6c,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x52, 0x4c, 0x58, 0xaa, 0x02, 0x0d, 0x52, 0x69, 0x6c, 0x6c, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x52, 0x69, 0x6c, 0x6c, 0x3a, 0x3a, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rill_local_v1_api_proto_rawDescOnce sync.Once
	file_rill_local_v1_api_proto_rawDescData = file_rill_local_v1_api_proto_rawDesc
)

func file_rill_local_v1_api_proto_rawDescGZIP() []byte {
	file_rill_local_v1_api_proto_rawDescOnce.Do(func() {
		file_rill_local_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_rill_local_v1_api_proto_rawDescData)
	})
	return file_rill_local_v1_api_proto_rawDescData
}

var file_rill_local_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rill_local_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_rill_local_v1_api_proto_goTypes = []interface{}{
	(UncommittedChanges)(0),          // 0: rill.local.v1.UncommittedChanges
	(*PingRequest)(nil),              // 1: rill.local.v1.PingRequest
	(*PingResponse)(nil),             // 2: rill.local.v1.PingResponse
	(*GetMetadataRequest)(nil),       // 3: rill.local.v1.GetMetadataRequest
	(*GetMetadataResponse)(nil),      // 4: rill.local.v1.GetMetadataResponse
	(*GetVersionRequest)(nil),        // 5: rill.local.v1.GetVersionRequest
	(*GetVersionResponse)(nil),       // 6: rill.local.v1.GetVersionResponse
	(*DeployValidationRequest)(nil),  // 7: rill.local.v1.DeployValidationRequest
	(*DeployValidationResponse)(nil), // 8: rill.local.v1.DeployValidationResponse
	(*OrganizationWithApp)(nil),      // 9: rill.local.v1.OrganizationWithApp
	(*PushToGitRequest)(nil),         // 10: rill.local.v1.PushToGitRequest
	(*PushToGitResponse)(nil),        // 11: rill.local.v1.PushToGitResponse
	(*DeployRequest)(nil),            // 12: rill.local.v1.DeployRequest
	(*DeployResponse)(nil),           // 13: rill.local.v1.DeployResponse
	(*timestamppb.Timestamp)(nil),    // 14: google.protobuf.Timestamp
}
var file_rill_local_v1_api_proto_depIdxs = []int32{
	14, // 0: rill.local.v1.PingResponse.time:type_name -> google.protobuf.Timestamp
	0,  // 1: rill.local.v1.DeployValidationResponse.uncommitted_changes:type_name -> rill.local.v1.UncommittedChanges
	9,  // 2: rill.local.v1.DeployValidationResponse.organizations_with_app:type_name -> rill.local.v1.OrganizationWithApp
	1,  // 3: rill.local.v1.LocalService.Ping:input_type -> rill.local.v1.PingRequest
	3,  // 4: rill.local.v1.LocalService.GetMetadata:input_type -> rill.local.v1.GetMetadataRequest
	5,  // 5: rill.local.v1.LocalService.GetVersion:input_type -> rill.local.v1.GetVersionRequest
	7,  // 6: rill.local.v1.LocalService.DeployValidation:input_type -> rill.local.v1.DeployValidationRequest
	10, // 7: rill.local.v1.LocalService.PushToGit:input_type -> rill.local.v1.PushToGitRequest
	12, // 8: rill.local.v1.LocalService.Deploy:input_type -> rill.local.v1.DeployRequest
	2,  // 9: rill.local.v1.LocalService.Ping:output_type -> rill.local.v1.PingResponse
	4,  // 10: rill.local.v1.LocalService.GetMetadata:output_type -> rill.local.v1.GetMetadataResponse
	6,  // 11: rill.local.v1.LocalService.GetVersion:output_type -> rill.local.v1.GetVersionResponse
	8,  // 12: rill.local.v1.LocalService.DeployValidation:output_type -> rill.local.v1.DeployValidationResponse
	11, // 13: rill.local.v1.LocalService.PushToGit:output_type -> rill.local.v1.PushToGitResponse
	13, // 14: rill.local.v1.LocalService.Deploy:output_type -> rill.local.v1.DeployResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_rill_local_v1_api_proto_init() }
func file_rill_local_v1_api_proto_init() {
	if File_rill_local_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rill_local_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganizationWithApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToGitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToGitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_local_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rill_local_v1_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rill_local_v1_api_proto_goTypes,
		DependencyIndexes: file_rill_local_v1_api_proto_depIdxs,
		EnumInfos:         file_rill_local_v1_api_proto_enumTypes,
		MessageInfos:      file_rill_local_v1_api_proto_msgTypes,
	}.Build()
	File_rill_local_v1_api_proto = out.File
	file_rill_local_v1_api_proto_rawDesc = nil
	file_rill_local_v1_api_proto_goTypes = nil
	file_rill_local_v1_api_proto_depIdxs = nil
}
