// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: rill/runtime/v1/resources.proto

package runtimev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BucketExtractPolicy_Strategy int32

const (
	BucketExtractPolicy_STRATEGY_UNSPECIFIED BucketExtractPolicy_Strategy = 0
	BucketExtractPolicy_STRATEGY_HEAD        BucketExtractPolicy_Strategy = 1
	BucketExtractPolicy_STRATEGY_TAIL        BucketExtractPolicy_Strategy = 2
)

// Enum value maps for BucketExtractPolicy_Strategy.
var (
	BucketExtractPolicy_Strategy_name = map[int32]string{
		0: "STRATEGY_UNSPECIFIED",
		1: "STRATEGY_HEAD",
		2: "STRATEGY_TAIL",
	}
	BucketExtractPolicy_Strategy_value = map[string]int32{
		"STRATEGY_UNSPECIFIED": 0,
		"STRATEGY_HEAD":        1,
		"STRATEGY_TAIL":        2,
	}
)

func (x BucketExtractPolicy_Strategy) Enum() *BucketExtractPolicy_Strategy {
	p := new(BucketExtractPolicy_Strategy)
	*p = x
	return p
}

func (x BucketExtractPolicy_Strategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BucketExtractPolicy_Strategy) Descriptor() protoreflect.EnumDescriptor {
	return file_rill_runtime_v1_resources_proto_enumTypes[0].Descriptor()
}

func (BucketExtractPolicy_Strategy) Type() protoreflect.EnumType {
	return &file_rill_runtime_v1_resources_proto_enumTypes[0]
}

func (x BucketExtractPolicy_Strategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BucketExtractPolicy_Strategy.Descriptor instead.
func (BucketExtractPolicy_Strategy) EnumDescriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{27, 0}
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *ResourceMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are assignable to Resource:
	//
	//	*Resource_ProjectParser
	//	*Resource_Source
	//	*Resource_Model
	//	*Resource_MetricsView
	//	*Resource_PullTrigger
	//	*Resource_RefreshTrigger
	//	*Resource_BucketPlanner
	Resource isResource_Resource `protobuf_oneof:"resource"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetMeta() *ResourceMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (m *Resource) GetResource() isResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *Resource) GetProjectParser() *ProjectParser {
	if x, ok := x.GetResource().(*Resource_ProjectParser); ok {
		return x.ProjectParser
	}
	return nil
}

func (x *Resource) GetSource() *SourceV2 {
	if x, ok := x.GetResource().(*Resource_Source); ok {
		return x.Source
	}
	return nil
}

func (x *Resource) GetModel() *ModelV2 {
	if x, ok := x.GetResource().(*Resource_Model); ok {
		return x.Model
	}
	return nil
}

func (x *Resource) GetMetricsView() *MetricsViewV2 {
	if x, ok := x.GetResource().(*Resource_MetricsView); ok {
		return x.MetricsView
	}
	return nil
}

func (x *Resource) GetPullTrigger() *PullTrigger {
	if x, ok := x.GetResource().(*Resource_PullTrigger); ok {
		return x.PullTrigger
	}
	return nil
}

func (x *Resource) GetRefreshTrigger() *RefreshTrigger {
	if x, ok := x.GetResource().(*Resource_RefreshTrigger); ok {
		return x.RefreshTrigger
	}
	return nil
}

func (x *Resource) GetBucketPlanner() *BucketPlanner {
	if x, ok := x.GetResource().(*Resource_BucketPlanner); ok {
		return x.BucketPlanner
	}
	return nil
}

type isResource_Resource interface {
	isResource_Resource()
}

type Resource_ProjectParser struct {
	// Well-known types only, for now. If required, we can add support for a google.protobuf.Any later.
	ProjectParser *ProjectParser `protobuf:"bytes,2,opt,name=project_parser,json=projectParser,proto3,oneof"`
}

type Resource_Source struct {
	Source *SourceV2 `protobuf:"bytes,3,opt,name=source,proto3,oneof"`
}

type Resource_Model struct {
	Model *ModelV2 `protobuf:"bytes,4,opt,name=model,proto3,oneof"`
}

type Resource_MetricsView struct {
	MetricsView *MetricsViewV2 `protobuf:"bytes,5,opt,name=metrics_view,json=metricsView,proto3,oneof"`
}

type Resource_PullTrigger struct {
	PullTrigger *PullTrigger `protobuf:"bytes,6,opt,name=pull_trigger,json=pullTrigger,proto3,oneof"`
}

type Resource_RefreshTrigger struct {
	RefreshTrigger *RefreshTrigger `protobuf:"bytes,7,opt,name=refresh_trigger,json=refreshTrigger,proto3,oneof"`
}

type Resource_BucketPlanner struct {
	BucketPlanner *BucketPlanner `protobuf:"bytes,8,opt,name=bucket_planner,json=bucketPlanner,proto3,oneof"`
}

func (*Resource_ProjectParser) isResource_Resource() {}

func (*Resource_Source) isResource_Resource() {}

func (*Resource_Model) isResource_Resource() {}

func (*Resource_MetricsView) isResource_Resource() {}

func (*Resource_PullTrigger) isResource_Resource() {}

func (*Resource_RefreshTrigger) isResource_Resource() {}

func (*Resource_BucketPlanner) isResource_Resource() {}

type ResourceMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *ResourceName          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Refs           []*ResourceName        `protobuf:"bytes,2,rep,name=refs,proto3" json:"refs,omitempty"`
	Annotations    map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SpecVersion    int64                  `protobuf:"varint,5,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	StateVersion   int64                  `protobuf:"varint,6,opt,name=state_version,json=stateVersion,proto3" json:"state_version,omitempty"`
	Deleted        bool                   `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`
	ReconcileError string                 `protobuf:"bytes,8,opt,name=reconcile_error,json=reconcileError,proto3" json:"reconcile_error,omitempty"`
	CreatedOn      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	SpecUpdatedOn  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=spec_updated_on,json=specUpdatedOn,proto3" json:"spec_updated_on,omitempty"`
	StateUpdatedOn *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=state_updated_on,json=stateUpdatedOn,proto3" json:"state_updated_on,omitempty"`
	DeletedOn      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleted_on,json=deletedOn,proto3,oneof" json:"deleted_on,omitempty"`
}

func (x *ResourceMeta) Reset() {
	*x = ResourceMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMeta) ProtoMessage() {}

func (x *ResourceMeta) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMeta.ProtoReflect.Descriptor instead.
func (*ResourceMeta) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceMeta) GetName() *ResourceName {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ResourceMeta) GetRefs() []*ResourceName {
	if x != nil {
		return x.Refs
	}
	return nil
}

func (x *ResourceMeta) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ResourceMeta) GetSpecVersion() int64 {
	if x != nil {
		return x.SpecVersion
	}
	return 0
}

func (x *ResourceMeta) GetStateVersion() int64 {
	if x != nil {
		return x.StateVersion
	}
	return 0
}

func (x *ResourceMeta) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *ResourceMeta) GetReconcileError() string {
	if x != nil {
		return x.ReconcileError
	}
	return ""
}

func (x *ResourceMeta) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *ResourceMeta) GetSpecUpdatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.SpecUpdatedOn
	}
	return nil
}

func (x *ResourceMeta) GetStateUpdatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.StateUpdatedOn
	}
	return nil
}

func (x *ResourceMeta) GetDeletedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedOn
	}
	return nil
}

type ResourceName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResourceName) Reset() {
	*x = ResourceName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceName) ProtoMessage() {}

func (x *ResourceName) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceName.ProtoReflect.Descriptor instead.
func (*ResourceName) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceName) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProjectParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *ProjectParserSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *ProjectParserState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ProjectParser) Reset() {
	*x = ProjectParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectParser) ProtoMessage() {}

func (x *ProjectParser) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectParser.ProtoReflect.Descriptor instead.
func (*ProjectParser) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectParser) GetSpec() *ProjectParserSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ProjectParser) GetState() *ProjectParserState {
	if x != nil {
		return x.State
	}
	return nil
}

type ProjectParserSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// compiler identifies the project parser to use
	Compiler string `protobuf:"bytes,1,opt,name=compiler,proto3" json:"compiler,omitempty"`
	// watch makes the project parser watch for and incrementally parse changed files
	Watch bool `protobuf:"varint,2,opt,name=watch,proto3" json:"watch,omitempty"`
	// atomic makes the project parser stage all changes before committing them
	Atomic bool `protobuf:"varint,3,opt,name=atomic,proto3" json:"atomic,omitempty"`
	// materialize_model_default sets a default for whether or not to materialize a model, if not explicitly set in the model
	MaterializeModelDefault bool `protobuf:"varint,4,opt,name=materialize_model_default,json=materializeModelDefault,proto3" json:"materialize_model_default,omitempty"`
	// materialize_model_delay_seconds makes the project parser delay materialization of updated models
	MaterializeModelDelaySeconds uint32 `protobuf:"varint,5,opt,name=materialize_model_delay_seconds,json=materializeModelDelaySeconds,proto3" json:"materialize_model_delay_seconds,omitempty"` // bool simulate_streaming_ingestion = 6;
}

func (x *ProjectParserSpec) Reset() {
	*x = ProjectParserSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectParserSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectParserSpec) ProtoMessage() {}

func (x *ProjectParserSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectParserSpec.ProtoReflect.Descriptor instead.
func (*ProjectParserSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectParserSpec) GetCompiler() string {
	if x != nil {
		return x.Compiler
	}
	return ""
}

func (x *ProjectParserSpec) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

func (x *ProjectParserSpec) GetAtomic() bool {
	if x != nil {
		return x.Atomic
	}
	return false
}

func (x *ProjectParserSpec) GetMaterializeModelDefault() bool {
	if x != nil {
		return x.MaterializeModelDefault
	}
	return false
}

func (x *ProjectParserSpec) GetMaterializeModelDelaySeconds() uint32 {
	if x != nil {
		return x.MaterializeModelDelaySeconds
	}
	return 0
}

type ProjectParserState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParseErrors      []*ParseError `protobuf:"bytes,1,rep,name=parse_errors,json=parseErrors,proto3" json:"parse_errors,omitempty"`
	CurrentCommitSha string        `protobuf:"bytes,2,opt,name=current_commit_sha,json=currentCommitSha,proto3" json:"current_commit_sha,omitempty"`
	ChangedPaths     []string      `protobuf:"bytes,3,rep,name=changed_paths,json=changedPaths,proto3" json:"changed_paths,omitempty"`
}

func (x *ProjectParserState) Reset() {
	*x = ProjectParserState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectParserState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectParserState) ProtoMessage() {}

func (x *ProjectParserState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectParserState.ProtoReflect.Descriptor instead.
func (*ProjectParserState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectParserState) GetParseErrors() []*ParseError {
	if x != nil {
		return x.ParseErrors
	}
	return nil
}

func (x *ProjectParserState) GetCurrentCommitSha() string {
	if x != nil {
		return x.CurrentCommitSha
	}
	return ""
}

func (x *ProjectParserState) GetChangedPaths() []string {
	if x != nil {
		return x.ChangedPaths
	}
	return nil
}

type SourceV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *SourceSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *SourceState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SourceV2) Reset() {
	*x = SourceV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceV2) ProtoMessage() {}

func (x *SourceV2) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceV2.ProtoReflect.Descriptor instead.
func (*SourceV2) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{6}
}

func (x *SourceV2) GetSpec() *SourceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *SourceV2) GetState() *SourceState {
	if x != nil {
		return x.State
	}
	return nil
}

type SourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceConnector string           `protobuf:"bytes,1,opt,name=source_connector,json=sourceConnector,proto3" json:"source_connector,omitempty"`
	SinkConnector   string           `protobuf:"bytes,2,opt,name=sink_connector,json=sinkConnector,proto3" json:"sink_connector,omitempty"`
	Properties      *structpb.Struct `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	RefreshSchedule *Schedule        `protobuf:"bytes,5,opt,name=refresh_schedule,json=refreshSchedule,proto3" json:"refresh_schedule,omitempty"`
	TimeoutSeconds  uint32           `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
}

func (x *SourceSpec) Reset() {
	*x = SourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceSpec) ProtoMessage() {}

func (x *SourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceSpec.ProtoReflect.Descriptor instead.
func (*SourceSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{7}
}

func (x *SourceSpec) GetSourceConnector() string {
	if x != nil {
		return x.SourceConnector
	}
	return ""
}

func (x *SourceSpec) GetSinkConnector() string {
	if x != nil {
		return x.SinkConnector
	}
	return ""
}

func (x *SourceSpec) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SourceSpec) GetRefreshSchedule() *Schedule {
	if x != nil {
		return x.RefreshSchedule
	}
	return nil
}

func (x *SourceSpec) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type SourceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName       string           `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	StageTableName  string           `protobuf:"bytes,2,opt,name=stage_table_name,json=stageTableName,proto3" json:"stage_table_name,omitempty"`
	ValidationError *ValidationError `protobuf:"bytes,3,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
	ExecutionError  *ExecutionError  `protobuf:"bytes,4,opt,name=execution_error,json=executionError,proto3" json:"execution_error,omitempty"`
}

func (x *SourceState) Reset() {
	*x = SourceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceState) ProtoMessage() {}

func (x *SourceState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceState.ProtoReflect.Descriptor instead.
func (*SourceState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{8}
}

func (x *SourceState) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *SourceState) GetStageTableName() string {
	if x != nil {
		return x.StageTableName
	}
	return ""
}

func (x *SourceState) GetValidationError() *ValidationError {
	if x != nil {
		return x.ValidationError
	}
	return nil
}

func (x *SourceState) GetExecutionError() *ExecutionError {
	if x != nil {
		return x.ExecutionError
	}
	return nil
}

type ModelV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *ModelSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *ModelState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ModelV2) Reset() {
	*x = ModelV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelV2) ProtoMessage() {}

func (x *ModelV2) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelV2.ProtoReflect.Descriptor instead.
func (*ModelV2) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{9}
}

func (x *ModelV2) GetSpec() *ModelSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ModelV2) GetState() *ModelState {
	if x != nil {
		return x.State
	}
	return nil
}

type ModelSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connector         string    `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
	Sql               string    `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	DeriveMetricsView bool      `protobuf:"varint,3,opt,name=derive_metrics_view,json=deriveMetricsView,proto3" json:"derive_metrics_view,omitempty"`
	RefreshSchedule   *Schedule `protobuf:"bytes,4,opt,name=refresh_schedule,json=refreshSchedule,proto3" json:"refresh_schedule,omitempty"`
	TimeoutSeconds    uint32    `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Materialize       *bool     `protobuf:"varint,7,opt,name=materialize,proto3,oneof" json:"materialize,omitempty"`
	UsesTemplating    bool      `protobuf:"varint,8,opt,name=uses_templating,json=usesTemplating,proto3" json:"uses_templating,omitempty"`
}

func (x *ModelSpec) Reset() {
	*x = ModelSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelSpec) ProtoMessage() {}

func (x *ModelSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelSpec.ProtoReflect.Descriptor instead.
func (*ModelSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{10}
}

func (x *ModelSpec) GetConnector() string {
	if x != nil {
		return x.Connector
	}
	return ""
}

func (x *ModelSpec) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ModelSpec) GetDeriveMetricsView() bool {
	if x != nil {
		return x.DeriveMetricsView
	}
	return false
}

func (x *ModelSpec) GetRefreshSchedule() *Schedule {
	if x != nil {
		return x.RefreshSchedule
	}
	return nil
}

func (x *ModelSpec) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ModelSpec) GetMaterialize() bool {
	if x != nil && x.Materialize != nil {
		return *x.Materialize
	}
	return false
}

func (x *ModelSpec) GetUsesTemplating() bool {
	if x != nil {
		return x.UsesTemplating
	}
	return false
}

type ModelState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName       string           `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	StageTableName  string           `protobuf:"bytes,2,opt,name=stage_table_name,json=stageTableName,proto3" json:"stage_table_name,omitempty"`
	ValidationError *ValidationError `protobuf:"bytes,3,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
	ExecutionError  *ExecutionError  `protobuf:"bytes,4,opt,name=execution_error,json=executionError,proto3" json:"execution_error,omitempty"`
	DependencyError *DependencyError `protobuf:"bytes,5,opt,name=dependency_error,json=dependencyError,proto3" json:"dependency_error,omitempty"`
}

func (x *ModelState) Reset() {
	*x = ModelState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelState) ProtoMessage() {}

func (x *ModelState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelState.ProtoReflect.Descriptor instead.
func (*ModelState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{11}
}

func (x *ModelState) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ModelState) GetStageTableName() string {
	if x != nil {
		return x.StageTableName
	}
	return ""
}

func (x *ModelState) GetValidationError() *ValidationError {
	if x != nil {
		return x.ValidationError
	}
	return nil
}

func (x *ModelState) GetExecutionError() *ExecutionError {
	if x != nil {
		return x.ExecutionError
	}
	return nil
}

func (x *ModelState) GetDependencyError() *DependencyError {
	if x != nil {
		return x.DependencyError
	}
	return nil
}

type MetricsViewV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *MetricsViewSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *MetricsViewState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MetricsViewV2) Reset() {
	*x = MetricsViewV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsViewV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsViewV2) ProtoMessage() {}

func (x *MetricsViewV2) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsViewV2.ProtoReflect.Descriptor instead.
func (*MetricsViewV2) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{12}
}

func (x *MetricsViewV2) GetSpec() *MetricsViewSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *MetricsViewV2) GetState() *MetricsViewState {
	if x != nil {
		return x.State
	}
	return nil
}

type MetricsViewSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User friendly label for the dashboard
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description of the dashboard
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Name of the source or model that the metrics view is based on
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	// Name of the primary time dimension, used for rendering time series
	TimeDimension string `protobuf:"bytes,4,opt,name=time_dimension,json=timeDimension,proto3" json:"time_dimension,omitempty"`
	// Dimensions in the metrics view
	Dimensions []*MetricsViewSpec_DimensionV2 `protobuf:"bytes,5,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	// Measures in the metrics view
	Measures []*MetricsViewSpec_MeasureV2 `protobuf:"bytes,6,rep,name=measures,proto3" json:"measures,omitempty"`
	// Smallest time grain to show in the dashboard
	SmallestTimeGrain TimeGrain `protobuf:"varint,7,opt,name=smallest_time_grain,json=smallestTimeGrain,proto3,enum=rill.runtime.v1.TimeGrain" json:"smallest_time_grain,omitempty"`
	// Default time range for the dashboard. It should be a valid ISO 8601 duration string.
	DefaultTimeRange string `protobuf:"bytes,8,opt,name=default_time_range,json=defaultTimeRange,proto3" json:"default_time_range,omitempty"`
	// Available time zones list preferred time zones using IANA location identifiers
	AvailableTimeZones []string `protobuf:"bytes,9,rep,name=available_time_zones,json=availableTimeZones,proto3" json:"available_time_zones,omitempty"`
}

func (x *MetricsViewSpec) Reset() {
	*x = MetricsViewSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsViewSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsViewSpec) ProtoMessage() {}

func (x *MetricsViewSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsViewSpec.ProtoReflect.Descriptor instead.
func (*MetricsViewSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{13}
}

func (x *MetricsViewSpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MetricsViewSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricsViewSpec) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MetricsViewSpec) GetTimeDimension() string {
	if x != nil {
		return x.TimeDimension
	}
	return ""
}

func (x *MetricsViewSpec) GetDimensions() []*MetricsViewSpec_DimensionV2 {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *MetricsViewSpec) GetMeasures() []*MetricsViewSpec_MeasureV2 {
	if x != nil {
		return x.Measures
	}
	return nil
}

func (x *MetricsViewSpec) GetSmallestTimeGrain() TimeGrain {
	if x != nil {
		return x.SmallestTimeGrain
	}
	return TimeGrain_TIME_GRAIN_UNSPECIFIED
}

func (x *MetricsViewSpec) GetDefaultTimeRange() string {
	if x != nil {
		return x.DefaultTimeRange
	}
	return ""
}

func (x *MetricsViewSpec) GetAvailableTimeZones() []string {
	if x != nil {
		return x.AvailableTimeZones
	}
	return nil
}

type MetricsViewState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidationError *ValidationError `protobuf:"bytes,1,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
	DependencyError *DependencyError `protobuf:"bytes,2,opt,name=dependency_error,json=dependencyError,proto3" json:"dependency_error,omitempty"`
}

func (x *MetricsViewState) Reset() {
	*x = MetricsViewState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsViewState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsViewState) ProtoMessage() {}

func (x *MetricsViewState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsViewState.ProtoReflect.Descriptor instead.
func (*MetricsViewState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{14}
}

func (x *MetricsViewState) GetValidationError() *ValidationError {
	if x != nil {
		return x.ValidationError
	}
	return nil
}

func (x *MetricsViewState) GetDependencyError() *DependencyError {
	if x != nil {
		return x.DependencyError
	}
	return nil
}

type Migration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *MigrationSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *MigrationState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Migration) Reset() {
	*x = Migration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Migration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Migration) ProtoMessage() {}

func (x *Migration) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Migration.ProtoReflect.Descriptor instead.
func (*Migration) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{15}
}

func (x *Migration) GetSpec() *MigrationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Migration) GetState() *MigrationState {
	if x != nil {
		return x.State
	}
	return nil
}

type MigrationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connector string `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
	Sql       string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Version   uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MigrationSpec) Reset() {
	*x = MigrationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationSpec) ProtoMessage() {}

func (x *MigrationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationSpec.ProtoReflect.Descriptor instead.
func (*MigrationSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{16}
}

func (x *MigrationSpec) GetConnector() string {
	if x != nil {
		return x.Connector
	}
	return ""
}

func (x *MigrationSpec) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *MigrationSpec) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type MigrationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MigrationState) Reset() {
	*x = MigrationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationState) ProtoMessage() {}

func (x *MigrationState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationState.ProtoReflect.Descriptor instead.
func (*MigrationState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{17}
}

func (x *MigrationState) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type PullTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *PullTriggerSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *PullTriggerState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *PullTrigger) Reset() {
	*x = PullTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTrigger) ProtoMessage() {}

func (x *PullTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTrigger.ProtoReflect.Descriptor instead.
func (*PullTrigger) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{18}
}

func (x *PullTrigger) GetSpec() *PullTriggerSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *PullTrigger) GetState() *PullTriggerState {
	if x != nil {
		return x.State
	}
	return nil
}

type PullTriggerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyPaths      []string `protobuf:"bytes,1,rep,name=only_paths,json=onlyPaths,proto3" json:"only_paths,omitempty"`
	RefreshSources bool     `protobuf:"varint,2,opt,name=refresh_sources,json=refreshSources,proto3" json:"refresh_sources,omitempty"`
}

func (x *PullTriggerSpec) Reset() {
	*x = PullTriggerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTriggerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTriggerSpec) ProtoMessage() {}

func (x *PullTriggerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTriggerSpec.ProtoReflect.Descriptor instead.
func (*PullTriggerSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{19}
}

func (x *PullTriggerSpec) GetOnlyPaths() []string {
	if x != nil {
		return x.OnlyPaths
	}
	return nil
}

func (x *PullTriggerSpec) GetRefreshSources() bool {
	if x != nil {
		return x.RefreshSources
	}
	return false
}

type PullTriggerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PullTriggerState) Reset() {
	*x = PullTriggerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTriggerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTriggerState) ProtoMessage() {}

func (x *PullTriggerState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTriggerState.ProtoReflect.Descriptor instead.
func (*PullTriggerState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{20}
}

type RefreshTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *RefreshTriggerSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *RefreshTriggerState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RefreshTrigger) Reset() {
	*x = RefreshTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTrigger) ProtoMessage() {}

func (x *RefreshTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTrigger.ProtoReflect.Descriptor instead.
func (*RefreshTrigger) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{21}
}

func (x *RefreshTrigger) GetSpec() *RefreshTriggerSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *RefreshTrigger) GetState() *RefreshTriggerState {
	if x != nil {
		return x.State
	}
	return nil
}

type RefreshTriggerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyNames       string `protobuf:"bytes,1,opt,name=only_names,json=onlyNames,proto3" json:"only_names,omitempty"`
	ResetIncrements bool   `protobuf:"varint,2,opt,name=reset_increments,json=resetIncrements,proto3" json:"reset_increments,omitempty"`
}

func (x *RefreshTriggerSpec) Reset() {
	*x = RefreshTriggerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTriggerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTriggerSpec) ProtoMessage() {}

func (x *RefreshTriggerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTriggerSpec.ProtoReflect.Descriptor instead.
func (*RefreshTriggerSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{22}
}

func (x *RefreshTriggerSpec) GetOnlyNames() string {
	if x != nil {
		return x.OnlyNames
	}
	return ""
}

func (x *RefreshTriggerSpec) GetResetIncrements() bool {
	if x != nil {
		return x.ResetIncrements
	}
	return false
}

type RefreshTriggerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshTriggerState) Reset() {
	*x = RefreshTriggerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTriggerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTriggerState) ProtoMessage() {}

func (x *RefreshTriggerState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTriggerState.ProtoReflect.Descriptor instead.
func (*RefreshTriggerState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{23}
}

type BucketPlanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec  *BucketPlannerSpec  `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	State *BucketPlannerState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *BucketPlanner) Reset() {
	*x = BucketPlanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketPlanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketPlanner) ProtoMessage() {}

func (x *BucketPlanner) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketPlanner.ProtoReflect.Descriptor instead.
func (*BucketPlanner) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{24}
}

func (x *BucketPlanner) GetSpec() *BucketPlannerSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *BucketPlanner) GetState() *BucketPlannerState {
	if x != nil {
		return x.State
	}
	return nil
}

type BucketPlannerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtractPolicy *BucketExtractPolicy `protobuf:"bytes,1,opt,name=extract_policy,json=extractPolicy,proto3" json:"extract_policy,omitempty"`
}

func (x *BucketPlannerSpec) Reset() {
	*x = BucketPlannerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketPlannerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketPlannerSpec) ProtoMessage() {}

func (x *BucketPlannerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketPlannerSpec.ProtoReflect.Descriptor instead.
func (*BucketPlannerSpec) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{25}
}

func (x *BucketPlannerSpec) GetExtractPolicy() *BucketExtractPolicy {
	if x != nil {
		return x.ExtractPolicy
	}
	return nil
}

type BucketPlannerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *BucketPlannerState) Reset() {
	*x = BucketPlannerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketPlannerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketPlannerState) ProtoMessage() {}

func (x *BucketPlannerState) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketPlannerState.ProtoReflect.Descriptor instead.
func (*BucketPlannerState) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{26}
}

func (x *BucketPlannerState) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type BucketExtractPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsStrategy   BucketExtractPolicy_Strategy `protobuf:"varint,1,opt,name=rows_strategy,json=rowsStrategy,proto3,enum=rill.runtime.v1.BucketExtractPolicy_Strategy" json:"rows_strategy,omitempty"`
	RowsLimitBytes uint64                       `protobuf:"varint,2,opt,name=rows_limit_bytes,json=rowsLimitBytes,proto3" json:"rows_limit_bytes,omitempty"`
	FilesStrategy  BucketExtractPolicy_Strategy `protobuf:"varint,3,opt,name=files_strategy,json=filesStrategy,proto3,enum=rill.runtime.v1.BucketExtractPolicy_Strategy" json:"files_strategy,omitempty"`
	FilesLimit     uint64                       `protobuf:"varint,4,opt,name=files_limit,json=filesLimit,proto3" json:"files_limit,omitempty"`
}

func (x *BucketExtractPolicy) Reset() {
	*x = BucketExtractPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketExtractPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketExtractPolicy) ProtoMessage() {}

func (x *BucketExtractPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketExtractPolicy.ProtoReflect.Descriptor instead.
func (*BucketExtractPolicy) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{27}
}

func (x *BucketExtractPolicy) GetRowsStrategy() BucketExtractPolicy_Strategy {
	if x != nil {
		return x.RowsStrategy
	}
	return BucketExtractPolicy_STRATEGY_UNSPECIFIED
}

func (x *BucketExtractPolicy) GetRowsLimitBytes() uint64 {
	if x != nil {
		return x.RowsLimitBytes
	}
	return 0
}

func (x *BucketExtractPolicy) GetFilesStrategy() BucketExtractPolicy_Strategy {
	if x != nil {
		return x.FilesStrategy
	}
	return BucketExtractPolicy_STRATEGY_UNSPECIFIED
}

func (x *BucketExtractPolicy) GetFilesLimit() uint64 {
	if x != nil {
		return x.FilesLimit
	}
	return 0
}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron          string `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
	TickerSeconds uint32 `protobuf:"varint,2,opt,name=ticker_seconds,json=tickerSeconds,proto3" json:"ticker_seconds,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{28}
}

func (x *Schedule) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *Schedule) GetTickerSeconds() uint32 {
	if x != nil {
		return x.TickerSeconds
	}
	return 0
}

type ParseError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string        `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FilePath      string        `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	StartLocation *CharLocation `protobuf:"bytes,3,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
}

func (x *ParseError) Reset() {
	*x = ParseError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseError) ProtoMessage() {}

func (x *ParseError) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseError.ProtoReflect.Descriptor instead.
func (*ParseError) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{29}
}

func (x *ParseError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ParseError) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ParseError) GetStartLocation() *CharLocation {
	if x != nil {
		return x.StartLocation
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	PropertyPath []string `protobuf:"bytes,2,rep,name=property_path,json=propertyPath,proto3" json:"property_path,omitempty"`
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{30}
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetPropertyPath() []string {
	if x != nil {
		return x.PropertyPath
	}
	return nil
}

type DependencyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Dependency string `protobuf:"bytes,2,opt,name=dependency,proto3" json:"dependency,omitempty"`
}

func (x *DependencyError) Reset() {
	*x = DependencyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DependencyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DependencyError) ProtoMessage() {}

func (x *DependencyError) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DependencyError.ProtoReflect.Descriptor instead.
func (*DependencyError) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{31}
}

func (x *DependencyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DependencyError) GetDependency() string {
	if x != nil {
		return x.Dependency
	}
	return ""
}

type ExecutionError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExecutionError) Reset() {
	*x = ExecutionError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionError) ProtoMessage() {}

func (x *ExecutionError) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionError.ProtoReflect.Descriptor instead.
func (*ExecutionError) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{32}
}

func (x *ExecutionError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CharLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line uint32 `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *CharLocation) Reset() {
	*x = CharLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharLocation) ProtoMessage() {}

func (x *CharLocation) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharLocation.ProtoReflect.Descriptor instead.
func (*CharLocation) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{33}
}

func (x *CharLocation) GetLine() uint32 {
	if x != nil {
		return x.Line
	}
	return 0
}

// Dimensions are columns to filter and group by
type MetricsViewSpec_DimensionV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Column      string `protobuf:"bytes,2,opt,name=column,proto3" json:"column,omitempty"`
	Label       string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MetricsViewSpec_DimensionV2) Reset() {
	*x = MetricsViewSpec_DimensionV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsViewSpec_DimensionV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsViewSpec_DimensionV2) ProtoMessage() {}

func (x *MetricsViewSpec_DimensionV2) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsViewSpec_DimensionV2.ProtoReflect.Descriptor instead.
func (*MetricsViewSpec_DimensionV2) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{13, 0}
}

func (x *MetricsViewSpec_DimensionV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricsViewSpec_DimensionV2) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *MetricsViewSpec_DimensionV2) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MetricsViewSpec_DimensionV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Measures are aggregated computed values
type MetricsViewSpec_MeasureV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expression          string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	Label               string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Description         string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Format              string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	ValidPercentOfTotal bool   `protobuf:"varint,6,opt,name=valid_percent_of_total,json=validPercentOfTotal,proto3" json:"valid_percent_of_total,omitempty"`
}

func (x *MetricsViewSpec_MeasureV2) Reset() {
	*x = MetricsViewSpec_MeasureV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_resources_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsViewSpec_MeasureV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsViewSpec_MeasureV2) ProtoMessage() {}

func (x *MetricsViewSpec_MeasureV2) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_resources_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsViewSpec_MeasureV2.ProtoReflect.Descriptor instead.
func (*MetricsViewSpec_MeasureV2) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_resources_proto_rawDescGZIP(), []int{13, 1}
}

func (x *MetricsViewSpec_MeasureV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricsViewSpec_MeasureV2) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *MetricsViewSpec_MeasureV2) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MetricsViewSpec_MeasureV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricsViewSpec_MeasureV2) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *MetricsViewSpec_MeasureV2) GetValidPercentOfTotal() bool {
	if x != nil {
		return x.ValidPercentOfTotal
	}
	return false
}

var File_rill_runtime_v1_resources_proto protoreflect.FileDescriptor

var file_rill_runtime_v1_resources_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x96, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x32, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x32, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x43, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x69, 0x6c, 0x6c,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x75, 0x6c, 0x6c,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x70, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa5, 0x05, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x72,
	0x65, 0x66, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x65,
	0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x42, 0x0a, 0x0f, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12,
	0x44, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x4f, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x74, 0x6f, 0x6d, 0x69,
	0x63, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a,
	0x1f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x6f,
	0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x32, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x6c,
	0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x86, 0x02, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0f,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x4b, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48,
	0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x32, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x71, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x7e, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32,
	0x12, 0x34, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x82, 0x06, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x56, 0x69, 0x65, 0x77, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x56, 0x32, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x13, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x67, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x11, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0x71, 0x0a, 0x0b, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc4, 0x01,
	0x0a, 0x09, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x33, 0x0a, 0x16, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x09, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x59, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x50,
	0x75, 0x6c, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x85, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3a, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x69, 0x6c,
	0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x82,
	0x01, 0x0a, 0x0d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x36, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x11, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x4b, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x2c, 0x0a, 0x12, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0xd6, 0x02, 0x0a, 0x13, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x52, 0x0a, 0x0d, 0x72,
	0x6f, 0x77, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x6f, 0x77, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x4a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45,
	0x47, 0x59, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x22, 0x45, 0x0a, 0x08,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x50, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x4b, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x2a,
	0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x68,
	0x61, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0xb7,
	0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x69,
	0x6c, 0x6c, 0x2f, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52,
	0x52, 0x58, 0xaa, 0x02, 0x0f, 0x52, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x52, 0x69, 0x6c, 0x6c, 0x3a, 0x3a, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rill_runtime_v1_resources_proto_rawDescOnce sync.Once
	file_rill_runtime_v1_resources_proto_rawDescData = file_rill_runtime_v1_resources_proto_rawDesc
)

func file_rill_runtime_v1_resources_proto_rawDescGZIP() []byte {
	file_rill_runtime_v1_resources_proto_rawDescOnce.Do(func() {
		file_rill_runtime_v1_resources_proto_rawDescData = protoimpl.X.CompressGZIP(file_rill_runtime_v1_resources_proto_rawDescData)
	})
	return file_rill_runtime_v1_resources_proto_rawDescData
}

var file_rill_runtime_v1_resources_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rill_runtime_v1_resources_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_rill_runtime_v1_resources_proto_goTypes = []interface{}{
	(BucketExtractPolicy_Strategy)(0),   // 0: rill.runtime.v1.BucketExtractPolicy.Strategy
	(*Resource)(nil),                    // 1: rill.runtime.v1.Resource
	(*ResourceMeta)(nil),                // 2: rill.runtime.v1.ResourceMeta
	(*ResourceName)(nil),                // 3: rill.runtime.v1.ResourceName
	(*ProjectParser)(nil),               // 4: rill.runtime.v1.ProjectParser
	(*ProjectParserSpec)(nil),           // 5: rill.runtime.v1.ProjectParserSpec
	(*ProjectParserState)(nil),          // 6: rill.runtime.v1.ProjectParserState
	(*SourceV2)(nil),                    // 7: rill.runtime.v1.SourceV2
	(*SourceSpec)(nil),                  // 8: rill.runtime.v1.SourceSpec
	(*SourceState)(nil),                 // 9: rill.runtime.v1.SourceState
	(*ModelV2)(nil),                     // 10: rill.runtime.v1.ModelV2
	(*ModelSpec)(nil),                   // 11: rill.runtime.v1.ModelSpec
	(*ModelState)(nil),                  // 12: rill.runtime.v1.ModelState
	(*MetricsViewV2)(nil),               // 13: rill.runtime.v1.MetricsViewV2
	(*MetricsViewSpec)(nil),             // 14: rill.runtime.v1.MetricsViewSpec
	(*MetricsViewState)(nil),            // 15: rill.runtime.v1.MetricsViewState
	(*Migration)(nil),                   // 16: rill.runtime.v1.Migration
	(*MigrationSpec)(nil),               // 17: rill.runtime.v1.MigrationSpec
	(*MigrationState)(nil),              // 18: rill.runtime.v1.MigrationState
	(*PullTrigger)(nil),                 // 19: rill.runtime.v1.PullTrigger
	(*PullTriggerSpec)(nil),             // 20: rill.runtime.v1.PullTriggerSpec
	(*PullTriggerState)(nil),            // 21: rill.runtime.v1.PullTriggerState
	(*RefreshTrigger)(nil),              // 22: rill.runtime.v1.RefreshTrigger
	(*RefreshTriggerSpec)(nil),          // 23: rill.runtime.v1.RefreshTriggerSpec
	(*RefreshTriggerState)(nil),         // 24: rill.runtime.v1.RefreshTriggerState
	(*BucketPlanner)(nil),               // 25: rill.runtime.v1.BucketPlanner
	(*BucketPlannerSpec)(nil),           // 26: rill.runtime.v1.BucketPlannerSpec
	(*BucketPlannerState)(nil),          // 27: rill.runtime.v1.BucketPlannerState
	(*BucketExtractPolicy)(nil),         // 28: rill.runtime.v1.BucketExtractPolicy
	(*Schedule)(nil),                    // 29: rill.runtime.v1.Schedule
	(*ParseError)(nil),                  // 30: rill.runtime.v1.ParseError
	(*ValidationError)(nil),             // 31: rill.runtime.v1.ValidationError
	(*DependencyError)(nil),             // 32: rill.runtime.v1.DependencyError
	(*ExecutionError)(nil),              // 33: rill.runtime.v1.ExecutionError
	(*CharLocation)(nil),                // 34: rill.runtime.v1.CharLocation
	nil,                                 // 35: rill.runtime.v1.ResourceMeta.AnnotationsEntry
	(*MetricsViewSpec_DimensionV2)(nil), // 36: rill.runtime.v1.MetricsViewSpec.DimensionV2
	(*MetricsViewSpec_MeasureV2)(nil),   // 37: rill.runtime.v1.MetricsViewSpec.MeasureV2
	(*timestamppb.Timestamp)(nil),       // 38: google.protobuf.Timestamp
	(*structpb.Struct)(nil),             // 39: google.protobuf.Struct
	(TimeGrain)(0),                      // 40: rill.runtime.v1.TimeGrain
}
var file_rill_runtime_v1_resources_proto_depIdxs = []int32{
	2,  // 0: rill.runtime.v1.Resource.meta:type_name -> rill.runtime.v1.ResourceMeta
	4,  // 1: rill.runtime.v1.Resource.project_parser:type_name -> rill.runtime.v1.ProjectParser
	7,  // 2: rill.runtime.v1.Resource.source:type_name -> rill.runtime.v1.SourceV2
	10, // 3: rill.runtime.v1.Resource.model:type_name -> rill.runtime.v1.ModelV2
	13, // 4: rill.runtime.v1.Resource.metrics_view:type_name -> rill.runtime.v1.MetricsViewV2
	19, // 5: rill.runtime.v1.Resource.pull_trigger:type_name -> rill.runtime.v1.PullTrigger
	22, // 6: rill.runtime.v1.Resource.refresh_trigger:type_name -> rill.runtime.v1.RefreshTrigger
	25, // 7: rill.runtime.v1.Resource.bucket_planner:type_name -> rill.runtime.v1.BucketPlanner
	3,  // 8: rill.runtime.v1.ResourceMeta.name:type_name -> rill.runtime.v1.ResourceName
	3,  // 9: rill.runtime.v1.ResourceMeta.refs:type_name -> rill.runtime.v1.ResourceName
	35, // 10: rill.runtime.v1.ResourceMeta.annotations:type_name -> rill.runtime.v1.ResourceMeta.AnnotationsEntry
	38, // 11: rill.runtime.v1.ResourceMeta.created_on:type_name -> google.protobuf.Timestamp
	38, // 12: rill.runtime.v1.ResourceMeta.spec_updated_on:type_name -> google.protobuf.Timestamp
	38, // 13: rill.runtime.v1.ResourceMeta.state_updated_on:type_name -> google.protobuf.Timestamp
	38, // 14: rill.runtime.v1.ResourceMeta.deleted_on:type_name -> google.protobuf.Timestamp
	5,  // 15: rill.runtime.v1.ProjectParser.spec:type_name -> rill.runtime.v1.ProjectParserSpec
	6,  // 16: rill.runtime.v1.ProjectParser.state:type_name -> rill.runtime.v1.ProjectParserState
	30, // 17: rill.runtime.v1.ProjectParserState.parse_errors:type_name -> rill.runtime.v1.ParseError
	8,  // 18: rill.runtime.v1.SourceV2.spec:type_name -> rill.runtime.v1.SourceSpec
	9,  // 19: rill.runtime.v1.SourceV2.state:type_name -> rill.runtime.v1.SourceState
	39, // 20: rill.runtime.v1.SourceSpec.properties:type_name -> google.protobuf.Struct
	29, // 21: rill.runtime.v1.SourceSpec.refresh_schedule:type_name -> rill.runtime.v1.Schedule
	31, // 22: rill.runtime.v1.SourceState.validation_error:type_name -> rill.runtime.v1.ValidationError
	33, // 23: rill.runtime.v1.SourceState.execution_error:type_name -> rill.runtime.v1.ExecutionError
	11, // 24: rill.runtime.v1.ModelV2.spec:type_name -> rill.runtime.v1.ModelSpec
	12, // 25: rill.runtime.v1.ModelV2.state:type_name -> rill.runtime.v1.ModelState
	29, // 26: rill.runtime.v1.ModelSpec.refresh_schedule:type_name -> rill.runtime.v1.Schedule
	31, // 27: rill.runtime.v1.ModelState.validation_error:type_name -> rill.runtime.v1.ValidationError
	33, // 28: rill.runtime.v1.ModelState.execution_error:type_name -> rill.runtime.v1.ExecutionError
	32, // 29: rill.runtime.v1.ModelState.dependency_error:type_name -> rill.runtime.v1.DependencyError
	14, // 30: rill.runtime.v1.MetricsViewV2.spec:type_name -> rill.runtime.v1.MetricsViewSpec
	15, // 31: rill.runtime.v1.MetricsViewV2.state:type_name -> rill.runtime.v1.MetricsViewState
	36, // 32: rill.runtime.v1.MetricsViewSpec.dimensions:type_name -> rill.runtime.v1.MetricsViewSpec.DimensionV2
	37, // 33: rill.runtime.v1.MetricsViewSpec.measures:type_name -> rill.runtime.v1.MetricsViewSpec.MeasureV2
	40, // 34: rill.runtime.v1.MetricsViewSpec.smallest_time_grain:type_name -> rill.runtime.v1.TimeGrain
	31, // 35: rill.runtime.v1.MetricsViewState.validation_error:type_name -> rill.runtime.v1.ValidationError
	32, // 36: rill.runtime.v1.MetricsViewState.dependency_error:type_name -> rill.runtime.v1.DependencyError
	17, // 37: rill.runtime.v1.Migration.spec:type_name -> rill.runtime.v1.MigrationSpec
	18, // 38: rill.runtime.v1.Migration.state:type_name -> rill.runtime.v1.MigrationState
	20, // 39: rill.runtime.v1.PullTrigger.spec:type_name -> rill.runtime.v1.PullTriggerSpec
	21, // 40: rill.runtime.v1.PullTrigger.state:type_name -> rill.runtime.v1.PullTriggerState
	23, // 41: rill.runtime.v1.RefreshTrigger.spec:type_name -> rill.runtime.v1.RefreshTriggerSpec
	24, // 42: rill.runtime.v1.RefreshTrigger.state:type_name -> rill.runtime.v1.RefreshTriggerState
	26, // 43: rill.runtime.v1.BucketPlanner.spec:type_name -> rill.runtime.v1.BucketPlannerSpec
	27, // 44: rill.runtime.v1.BucketPlanner.state:type_name -> rill.runtime.v1.BucketPlannerState
	28, // 45: rill.runtime.v1.BucketPlannerSpec.extract_policy:type_name -> rill.runtime.v1.BucketExtractPolicy
	0,  // 46: rill.runtime.v1.BucketExtractPolicy.rows_strategy:type_name -> rill.runtime.v1.BucketExtractPolicy.Strategy
	0,  // 47: rill.runtime.v1.BucketExtractPolicy.files_strategy:type_name -> rill.runtime.v1.BucketExtractPolicy.Strategy
	34, // 48: rill.runtime.v1.ParseError.start_location:type_name -> rill.runtime.v1.CharLocation
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_rill_runtime_v1_resources_proto_init() }
func file_rill_runtime_v1_resources_proto_init() {
	if File_rill_runtime_v1_resources_proto != nil {
		return
	}
	file_rill_runtime_v1_time_grain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rill_runtime_v1_resources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectParserSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectParserState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsViewV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsViewSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsViewState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Migration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTriggerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTriggerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTriggerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTriggerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketPlanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketPlannerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketPlannerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketExtractPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DependencyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsViewSpec_DimensionV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_resources_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsViewSpec_MeasureV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rill_runtime_v1_resources_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Resource_ProjectParser)(nil),
		(*Resource_Source)(nil),
		(*Resource_Model)(nil),
		(*Resource_MetricsView)(nil),
		(*Resource_PullTrigger)(nil),
		(*Resource_RefreshTrigger)(nil),
		(*Resource_BucketPlanner)(nil),
	}
	file_rill_runtime_v1_resources_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_rill_runtime_v1_resources_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rill_runtime_v1_resources_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rill_runtime_v1_resources_proto_goTypes,
		DependencyIndexes: file_rill_runtime_v1_resources_proto_depIdxs,
		EnumInfos:         file_rill_runtime_v1_resources_proto_enumTypes,
		MessageInfos:      file_rill_runtime_v1_resources_proto_msgTypes,
	}.Build()
	File_rill_runtime_v1_resources_proto = out.File
	file_rill_runtime_v1_resources_proto_rawDesc = nil
	file_rill_runtime_v1_resources_proto_goTypes = nil
	file_rill_runtime_v1_resources_proto_depIdxs = nil
}
