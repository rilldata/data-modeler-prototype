// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: rill/runtime/v1/connectors.proto

package runtimev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type S3Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModifiedOn *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=modified_on,json=modifiedOn,proto3" json:"modified_on,omitempty"`
	Size       int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	IsDir      bool                   `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *S3Object) Reset() {
	*x = S3Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Object) ProtoMessage() {}

func (x *S3Object) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Object.ProtoReflect.Descriptor instead.
func (*S3Object) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{0}
}

func (x *S3Object) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *S3Object) GetModifiedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedOn
	}
	return nil
}

func (x *S3Object) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *S3Object) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type S3ListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *S3ListBucketsRequest) Reset() {
	*x = S3ListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3ListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3ListBucketsRequest) ProtoMessage() {}

func (x *S3ListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3ListBucketsRequest.ProtoReflect.Descriptor instead.
func (*S3ListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{1}
}

func (x *S3ListBucketsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *S3ListBucketsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type S3ListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string   `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Buckets       []string `protobuf:"bytes,2,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *S3ListBucketsResponse) Reset() {
	*x = S3ListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3ListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3ListBucketsResponse) ProtoMessage() {}

func (x *S3ListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3ListBucketsResponse.ProtoReflect.Descriptor instead.
func (*S3ListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{2}
}

func (x *S3ListBucketsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *S3ListBucketsResponse) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type S3ListObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize   uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken  string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Bucket     string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Prefix     string `protobuf:"bytes,5,opt,name=prefix,proto3" json:"prefix,omitempty"`
	StartAfter string `protobuf:"bytes,6,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
	Delimiter  string `protobuf:"bytes,7,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
}

func (x *S3ListObjectsRequest) Reset() {
	*x = S3ListObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3ListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3ListObjectsRequest) ProtoMessage() {}

func (x *S3ListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3ListObjectsRequest.ProtoReflect.Descriptor instead.
func (*S3ListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{3}
}

func (x *S3ListObjectsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *S3ListObjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *S3ListObjectsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3ListObjectsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *S3ListObjectsRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *S3ListObjectsRequest) GetStartAfter() string {
	if x != nil {
		return x.StartAfter
	}
	return ""
}

func (x *S3ListObjectsRequest) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

type S3ListObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string      `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Objects       []*S3Object `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *S3ListObjectsResponse) Reset() {
	*x = S3ListObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3ListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3ListObjectsResponse) ProtoMessage() {}

func (x *S3ListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3ListObjectsResponse.ProtoReflect.Descriptor instead.
func (*S3ListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{4}
}

func (x *S3ListObjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *S3ListObjectsResponse) GetObjects() []*S3Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

type S3GetBucketMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *S3GetBucketMetadataRequest) Reset() {
	*x = S3GetBucketMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3GetBucketMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3GetBucketMetadataRequest) ProtoMessage() {}

func (x *S3GetBucketMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3GetBucketMetadataRequest.ProtoReflect.Descriptor instead.
func (*S3GetBucketMetadataRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{5}
}

func (x *S3GetBucketMetadataRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type S3GetBucketMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *S3GetBucketMetadataResponse) Reset() {
	*x = S3GetBucketMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3GetBucketMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3GetBucketMetadataResponse) ProtoMessage() {}

func (x *S3GetBucketMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3GetBucketMetadataResponse.ProtoReflect.Descriptor instead.
func (*S3GetBucketMetadataResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{6}
}

func (x *S3GetBucketMetadataResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type S3GetCredentialsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *S3GetCredentialsInfoRequest) Reset() {
	*x = S3GetCredentialsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3GetCredentialsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3GetCredentialsInfoRequest) ProtoMessage() {}

func (x *S3GetCredentialsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3GetCredentialsInfoRequest.ProtoReflect.Descriptor instead.
func (*S3GetCredentialsInfoRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{7}
}

type S3GetCredentialsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist    bool   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *S3GetCredentialsInfoResponse) Reset() {
	*x = S3GetCredentialsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3GetCredentialsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3GetCredentialsInfoResponse) ProtoMessage() {}

func (x *S3GetCredentialsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3GetCredentialsInfoResponse.ProtoReflect.Descriptor instead.
func (*S3GetCredentialsInfoResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{8}
}

func (x *S3GetCredentialsInfoResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *S3GetCredentialsInfoResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type GCSObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ModifiedOn *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=modified_on,json=modifiedOn,proto3" json:"modified_on,omitempty"`
	Size       int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	IsDir      bool                   `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *GCSObject) Reset() {
	*x = GCSObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSObject) ProtoMessage() {}

func (x *GCSObject) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSObject.ProtoReflect.Descriptor instead.
func (*GCSObject) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{9}
}

func (x *GCSObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GCSObject) GetModifiedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedOn
	}
	return nil
}

func (x *GCSObject) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GCSObject) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type GCSListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *GCSListBucketsRequest) Reset() {
	*x = GCSListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSListBucketsRequest) ProtoMessage() {}

func (x *GCSListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSListBucketsRequest.ProtoReflect.Descriptor instead.
func (*GCSListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{10}
}

func (x *GCSListBucketsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GCSListBucketsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type GCSListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string   `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Buckets       []string `protobuf:"bytes,2,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *GCSListBucketsResponse) Reset() {
	*x = GCSListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSListBucketsResponse) ProtoMessage() {}

func (x *GCSListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSListBucketsResponse.ProtoReflect.Descriptor instead.
func (*GCSListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{11}
}

func (x *GCSListBucketsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GCSListBucketsResponse) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type GCSListObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    uint32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken   string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Bucket      string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Prefix      string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	StartOffset string `protobuf:"bytes,5,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset   string `protobuf:"bytes,6,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	Delimiter   string `protobuf:"bytes,7,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
}

func (x *GCSListObjectsRequest) Reset() {
	*x = GCSListObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSListObjectsRequest) ProtoMessage() {}

func (x *GCSListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSListObjectsRequest.ProtoReflect.Descriptor instead.
func (*GCSListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{12}
}

func (x *GCSListObjectsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GCSListObjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GCSListObjectsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GCSListObjectsRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *GCSListObjectsRequest) GetStartOffset() string {
	if x != nil {
		return x.StartOffset
	}
	return ""
}

func (x *GCSListObjectsRequest) GetEndOffset() string {
	if x != nil {
		return x.EndOffset
	}
	return ""
}

func (x *GCSListObjectsRequest) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

type GCSListObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string       `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Objects       []*GCSObject `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *GCSListObjectsResponse) Reset() {
	*x = GCSListObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSListObjectsResponse) ProtoMessage() {}

func (x *GCSListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSListObjectsResponse.ProtoReflect.Descriptor instead.
func (*GCSListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{13}
}

func (x *GCSListObjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GCSListObjectsResponse) GetObjects() []*GCSObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

type GCSGetCredentialsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GCSGetCredentialsInfoRequest) Reset() {
	*x = GCSGetCredentialsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSGetCredentialsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSGetCredentialsInfoRequest) ProtoMessage() {}

func (x *GCSGetCredentialsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSGetCredentialsInfoRequest.ProtoReflect.Descriptor instead.
func (*GCSGetCredentialsInfoRequest) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{14}
}

type GCSGetCredentialsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist     bool   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GCSGetCredentialsInfoResponse) Reset() {
	*x = GCSGetCredentialsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rill_runtime_v1_connectors_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCSGetCredentialsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCSGetCredentialsInfoResponse) ProtoMessage() {}

func (x *GCSGetCredentialsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rill_runtime_v1_connectors_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCSGetCredentialsInfoResponse.ProtoReflect.Descriptor instead.
func (*GCSGetCredentialsInfoResponse) Descriptor() ([]byte, []int) {
	return file_rill_runtime_v1_connectors_proto_rawDescGZIP(), []int{15}
}

func (x *GCSGetCredentialsInfoResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *GCSGetCredentialsInfoResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

var File_rill_runtime_v1_connectors_proto protoreflect.FileDescriptor

var file_rill_runtime_v1_connectors_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x08,
	0x53, 0x33, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x44, 0x69, 0x72, 0x22, 0x52, 0x0a, 0x14, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x15, 0x53, 0x33, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x14, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x64, 0x40, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x15, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x1a, 0x53, 0x33, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x53, 0x33, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22,
	0x1d, 0x0a, 0x1b, 0x53, 0x33, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50,
	0x0a, 0x1c, 0x53, 0x33, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0x87, 0x01, 0x0a, 0x09, 0x47, 0x43, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x22, 0x5e, 0x0a, 0x15, 0x47, 0x43,
	0x53, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x64, 0x40,
	0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x43,
	0x53, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x15, 0x47, 0x43, 0x53, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x64, 0x40, 0x01, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72,
	0x22, 0x76, 0x0a, 0x16, 0x47, 0x43, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x43, 0x53, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1d, 0x47, 0x43, 0x53, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32, 0xea,
	0x07, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x69,
	0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x33, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x0d,
	0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x25, 0x2e,
	0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x33, 0x2f, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x13, 0x53, 0x33, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x72,
	0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x33, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x69, 0x6c, 0x6c,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x33, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x7b,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x94, 0x01, 0x0a, 0x14, 0x53, 0x33, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x2e, 0x72, 0x69, 0x6c, 0x6c,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x33, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x33, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7a, 0x0a, 0x0e, 0x47, 0x43, 0x53, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x72, 0x69, 0x6c, 0x6c,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x63, 0x73, 0x2f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0e, 0x47, 0x43, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x43, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x63, 0x73, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f,
	0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x98, 0x01, 0x0a, 0x15, 0x47, 0x43, 0x53, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x2e, 0x72, 0x69, 0x6c,
	0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x69, 0x6c, 0x6c,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x43, 0x53, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x63, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0xb8, 0x01, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x69, 0x6c, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x42, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x6c, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x69, 0x6c, 0x6c,
	0x2f, 0x72, 0x69, 0x6c, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x52, 0x58,
	0xaa, 0x02, 0x0f, 0x52, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0f, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x52, 0x69, 0x6c, 0x6c, 0x5c, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x11, 0x52, 0x69, 0x6c, 0x6c, 0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rill_runtime_v1_connectors_proto_rawDescOnce sync.Once
	file_rill_runtime_v1_connectors_proto_rawDescData = file_rill_runtime_v1_connectors_proto_rawDesc
)

func file_rill_runtime_v1_connectors_proto_rawDescGZIP() []byte {
	file_rill_runtime_v1_connectors_proto_rawDescOnce.Do(func() {
		file_rill_runtime_v1_connectors_proto_rawDescData = protoimpl.X.CompressGZIP(file_rill_runtime_v1_connectors_proto_rawDescData)
	})
	return file_rill_runtime_v1_connectors_proto_rawDescData
}

var file_rill_runtime_v1_connectors_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_rill_runtime_v1_connectors_proto_goTypes = []interface{}{
	(*S3Object)(nil),                      // 0: rill.runtime.v1.S3Object
	(*S3ListBucketsRequest)(nil),          // 1: rill.runtime.v1.S3ListBucketsRequest
	(*S3ListBucketsResponse)(nil),         // 2: rill.runtime.v1.S3ListBucketsResponse
	(*S3ListObjectsRequest)(nil),          // 3: rill.runtime.v1.S3ListObjectsRequest
	(*S3ListObjectsResponse)(nil),         // 4: rill.runtime.v1.S3ListObjectsResponse
	(*S3GetBucketMetadataRequest)(nil),    // 5: rill.runtime.v1.S3GetBucketMetadataRequest
	(*S3GetBucketMetadataResponse)(nil),   // 6: rill.runtime.v1.S3GetBucketMetadataResponse
	(*S3GetCredentialsInfoRequest)(nil),   // 7: rill.runtime.v1.S3GetCredentialsInfoRequest
	(*S3GetCredentialsInfoResponse)(nil),  // 8: rill.runtime.v1.S3GetCredentialsInfoResponse
	(*GCSObject)(nil),                     // 9: rill.runtime.v1.GCSObject
	(*GCSListBucketsRequest)(nil),         // 10: rill.runtime.v1.GCSListBucketsRequest
	(*GCSListBucketsResponse)(nil),        // 11: rill.runtime.v1.GCSListBucketsResponse
	(*GCSListObjectsRequest)(nil),         // 12: rill.runtime.v1.GCSListObjectsRequest
	(*GCSListObjectsResponse)(nil),        // 13: rill.runtime.v1.GCSListObjectsResponse
	(*GCSGetCredentialsInfoRequest)(nil),  // 14: rill.runtime.v1.GCSGetCredentialsInfoRequest
	(*GCSGetCredentialsInfoResponse)(nil), // 15: rill.runtime.v1.GCSGetCredentialsInfoResponse
	(*timestamppb.Timestamp)(nil),         // 16: google.protobuf.Timestamp
}
var file_rill_runtime_v1_connectors_proto_depIdxs = []int32{
	16, // 0: rill.runtime.v1.S3Object.modified_on:type_name -> google.protobuf.Timestamp
	0,  // 1: rill.runtime.v1.S3ListObjectsResponse.objects:type_name -> rill.runtime.v1.S3Object
	16, // 2: rill.runtime.v1.GCSObject.modified_on:type_name -> google.protobuf.Timestamp
	9,  // 3: rill.runtime.v1.GCSListObjectsResponse.objects:type_name -> rill.runtime.v1.GCSObject
	1,  // 4: rill.runtime.v1.ConnectorService.S3ListBuckets:input_type -> rill.runtime.v1.S3ListBucketsRequest
	3,  // 5: rill.runtime.v1.ConnectorService.S3ListObjects:input_type -> rill.runtime.v1.S3ListObjectsRequest
	5,  // 6: rill.runtime.v1.ConnectorService.S3GetBucketMetadata:input_type -> rill.runtime.v1.S3GetBucketMetadataRequest
	7,  // 7: rill.runtime.v1.ConnectorService.S3GetCredentialsInfo:input_type -> rill.runtime.v1.S3GetCredentialsInfoRequest
	10, // 8: rill.runtime.v1.ConnectorService.GCSListBuckets:input_type -> rill.runtime.v1.GCSListBucketsRequest
	12, // 9: rill.runtime.v1.ConnectorService.GCSListObjects:input_type -> rill.runtime.v1.GCSListObjectsRequest
	14, // 10: rill.runtime.v1.ConnectorService.GCSGetCredentialsInfo:input_type -> rill.runtime.v1.GCSGetCredentialsInfoRequest
	2,  // 11: rill.runtime.v1.ConnectorService.S3ListBuckets:output_type -> rill.runtime.v1.S3ListBucketsResponse
	4,  // 12: rill.runtime.v1.ConnectorService.S3ListObjects:output_type -> rill.runtime.v1.S3ListObjectsResponse
	6,  // 13: rill.runtime.v1.ConnectorService.S3GetBucketMetadata:output_type -> rill.runtime.v1.S3GetBucketMetadataResponse
	8,  // 14: rill.runtime.v1.ConnectorService.S3GetCredentialsInfo:output_type -> rill.runtime.v1.S3GetCredentialsInfoResponse
	11, // 15: rill.runtime.v1.ConnectorService.GCSListBuckets:output_type -> rill.runtime.v1.GCSListBucketsResponse
	13, // 16: rill.runtime.v1.ConnectorService.GCSListObjects:output_type -> rill.runtime.v1.GCSListObjectsResponse
	15, // 17: rill.runtime.v1.ConnectorService.GCSGetCredentialsInfo:output_type -> rill.runtime.v1.GCSGetCredentialsInfoResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_rill_runtime_v1_connectors_proto_init() }
func file_rill_runtime_v1_connectors_proto_init() {
	if File_rill_runtime_v1_connectors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rill_runtime_v1_connectors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3ListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3ListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3ListObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3ListObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3GetBucketMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3GetBucketMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3GetCredentialsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3GetCredentialsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSListObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSListObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSGetCredentialsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rill_runtime_v1_connectors_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCSGetCredentialsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rill_runtime_v1_connectors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rill_runtime_v1_connectors_proto_goTypes,
		DependencyIndexes: file_rill_runtime_v1_connectors_proto_depIdxs,
		MessageInfos:      file_rill_runtime_v1_connectors_proto_msgTypes,
	}.Build()
	File_rill_runtime_v1_connectors_proto = out.File
	file_rill_runtime_v1_connectors_proto_rawDesc = nil
	file_rill_runtime_v1_connectors_proto_goTypes = nil
	file_rill_runtime_v1_connectors_proto_depIdxs = nil
}
