swagger: "2.0"
info:
  title: rill/runtime/v1/schema.proto
  version: version not set
tags:
  - name: RuntimeService
  - name: QueryService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/connectors/meta:
    get:
      summary: |-
        ListConnectors returns a description of all the connectors implemented in the runtime,
        including their schema and validation rules
      operationId: RuntimeService_ListConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListConnectorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/delete-and-reconcile:
    post:
      summary: DeleteFileAndReconcile combines RenameFile and Reconcile in a single endpoint to reduce latency.
      operationId: RuntimeService_DeleteFileAndReconcile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteFileAndReconcileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteFileAndReconcileRequest'
      tags:
        - RuntimeService
  /v1/instances:
    get:
      summary: ListInstances lists all the instances currently managed by the runtime
      operationId: RuntimeService_ListInstances
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInstancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int64
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
    post:
      summary: CreateInstance creates a new instance
      operationId: RuntimeService_CreateInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: |-
            Request message for RuntimeService.CreateInstance.
            See message Instance for field descriptions.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateInstanceRequest'
      tags:
        - RuntimeService
  /v1/instances/{instanceId}:
    get:
      summary: GetInstance returns information about a specific instance
      operationId: RuntimeService_GetInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
    post:
      summary: DeleteInstance deletes an instance
      operationId: RuntimeService_DeleteInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dropDb:
                type: boolean
            title: Request message for RuntimeService.DeleteInstance
      tags:
        - RuntimeService
    put:
      summary: EditInstance edits an existing instance
      operationId: RuntimeService_EditInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EditInstanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              olapDriver:
                type: string
              olapDsn:
                type: string
              repoDriver:
                type: string
              repoDsn:
                type: string
              embedCatalog:
                type: boolean
              variables:
                type: object
                additionalProperties:
                  type: string
              ingestionLimitBytes:
                type: string
                format: int64
            description: |-
              Request message for RuntimeService.EditInstance.
              See message Instance for field descriptions.
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog:
    get:
      summary: ListCatalogEntries lists all the entries registered in an instance's catalog (like tables, sources or metrics views)
      operationId: RuntimeService_ListCatalogEntries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCatalogEntriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: type
          in: query
          required: false
          type: string
          enum:
            - OBJECT_TYPE_UNSPECIFIED
            - OBJECT_TYPE_TABLE
            - OBJECT_TYPE_SOURCE
            - OBJECT_TYPE_MODEL
            - OBJECT_TYPE_METRICS_VIEW
          default: OBJECT_TYPE_UNSPECIFIED
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog/{name}:
    get:
      summary: GetCatalogEntry returns information about a specific entry in the catalog
      operationId: RuntimeService_GetCatalogEntry
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCatalogEntryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog/{name}/refresh:
    post:
      summary: |-
        TriggerRefresh triggers a refresh of a refreshable catalog object.
        It currently only supports sources (which will be re-ingested), but will also support materialized models in the future.
        It does not respond until the refresh has completed (will move to async jobs when the task scheduler is in place).
      operationId: RuntimeService_TriggerRefresh
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TriggerRefreshResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files:
    get:
      summary: |-
        ListFiles lists all the files matching a glob in a repo.
        The files are sorted by their full path.
      operationId: RuntimeService_ListFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListFilesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: glob
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/-/{path}:
    get:
      summary: GetFile returns the contents of a specific file in a repo.
      operationId: RuntimeService_GetFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
      tags:
        - RuntimeService
    delete:
      summary: DeleteFile deletes a file from a repo
      operationId: RuntimeService_DeleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
      tags:
        - RuntimeService
    post:
      summary: PutFile creates or updates a file in a repo
      operationId: RuntimeService_PutFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PutFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              blob:
                type: string
              create:
                type: boolean
                title: Create indicates whether to create the file if it doesn't already exist
              createOnly:
                type: boolean
                description: |-
                  Will cause the operation to fail if the file already exists.
                  It should only be set when create = true.
            title: Request message for RuntimeService.PutFile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/files/rename:
    post:
      summary: RenameFile renames a file in a repo
      operationId: RuntimeService_RenameFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameFileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              fromPath:
                type: string
              toPath:
                type: string
            title: Request message for RuntimeService.RenameFile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/queries/column-cardinality/tables/{tableName}:
    get:
      summary: Get cardinality for a column
      operationId: QueryService_ColumnCardinality
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnCardinalityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/columns-profile/tables/{tableName}:
    post:
      summary: TableColumns returns column profiles
      operationId: QueryService_TableColumns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableColumnsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/descriptive-statistics/tables/{tableName}:
    get:
      summary: Get basic stats for a numeric column like min, max, mean, stddev, etc
      operationId: QueryService_ColumnDescriptiveStatistics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnDescriptiveStatisticsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/compare-toplist:
    post:
      operationId: QueryService_MetricsViewComparisonToplist
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewComparisonToplistResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimensionName:
                type: string
              measureNames:
                type: array
                items:
                  type: string
              inlineMeasures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1InlineMeasure'
              baseTimeRange:
                $ref: '#/definitions/v1TimeRange'
              comparisonTimeRange:
                $ref: '#/definitions/v1TimeRange'
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewComparisonSort'
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              limit:
                type: string
                format: int64
              offset:
                type: string
                format: int64
              priority:
                type: integer
                format: int32
            title: Request message for QueryService.MetricsViewComparisonToplist
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/rows:
    post:
      summary: MetricsViewRows returns the underlying model rows matching a metrics view time range and filter(s).
      operationId: QueryService_MetricsViewRows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewRowsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              timeStart:
                type: string
                format: date-time
              timeEnd:
                type: string
                format: date-time
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewSort'
              limit:
                type: integer
                format: int32
              offset:
                type: string
                format: int64
              priority:
                type: integer
                format: int32
            title: Request message for QueryService.MetricsViewRows
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/timeseries:
    post:
      summary: |-
        MetricsViewTimeSeries returns time series for the measures in the metrics view.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTimeSeriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              measureNames:
                type: array
                items:
                  type: string
              inlineMeasures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1InlineMeasure'
              timeStart:
                type: string
                format: date-time
              timeEnd:
                type: string
                format: date-time
              timeGranularity:
                $ref: '#/definitions/v1TimeGrain'
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              priority:
                type: integer
                format: int32
            title: Request message for QueryService.MetricsViewTimeSeries
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/toplist:
    post:
      summary: |-
        MetricsViewToplist returns the top dimension values of a metrics view sorted by one or more measures.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewToplist
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewToplistResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              dimensionName:
                type: string
              measureNames:
                type: array
                items:
                  type: string
              inlineMeasures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1InlineMeasure'
              timeStart:
                type: string
                format: date-time
              timeEnd:
                type: string
                format: date-time
              limit:
                type: string
                format: int64
              offset:
                type: string
                format: int64
              sort:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1MetricsViewSort'
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              priority:
                type: integer
                format: int32
            title: Request message for QueryService.MetricsViewToplist
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/metrics-views/{metricsViewName}/totals:
    post:
      summary: |-
        MetricsViewTotals returns totals over a time period for the measures in a metrics view.
        It's a convenience API for querying a metrics view.
      operationId: QueryService_MetricsViewTotals
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTotalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              measureNames:
                type: array
                items:
                  type: string
              inlineMeasures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1InlineMeasure'
              timeStart:
                type: string
                format: date-time
              timeEnd:
                type: string
                format: date-time
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              priority:
                type: integer
                format: int32
            title: Request message for QueryService.MetricsViewTotals
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/null-count/tables/{tableName}:
    get:
      summary: Get the number of nulls in a column
      operationId: QueryService_ColumnNullCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnNullCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/numeric-histogram/tables/{tableName}:
    get:
      summary: Get the histogram for values in a column
      operationId: QueryService_ColumnNumericHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnNumericHistogramResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: histogramMethod
          in: query
          required: false
          type: string
          enum:
            - HISTOGRAM_METHOD_UNSPECIFIED
            - HISTOGRAM_METHOD_FD
            - HISTOGRAM_METHOD_DIAGNOSTIC
          default: HISTOGRAM_METHOD_UNSPECIFIED
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rollup-interval/tables/{tableName}:
    post:
      summary: ColumnRollupInterval returns the minimum time granularity (as well as the time range) for a specified timestamp column
      operationId: QueryService_ColumnRollupInterval
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnRollupIntervalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              columnName:
                type: string
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rows/tables/{tableName}:
    get:
      summary: TableRows returns table rows
      operationId: QueryService_TableRows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableRowsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/rug-histogram/tables/{tableName}:
    get:
      summary: Get outliers for a numeric column
      operationId: QueryService_ColumnRugHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnRugHistogramResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/smallest-time-grain/tables/{tableName}:
    get:
      summary: Estimates the smallest time grain present in the column
      operationId: QueryService_ColumnTimeGrain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeGrainResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/table-cardinality/tables/{tableName}:
    get:
      summary: TableCardinality returns row count
      operationId: QueryService_TableCardinality
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TableCardinalityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/time-range-summary/tables/{tableName}:
    get:
      summary: Get the time range summaries (min, max) for a column
      operationId: QueryService_ColumnTimeRange
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeRangeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: query
          required: false
          type: string
        - name: priority
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/timeseries/tables/{tableName}:
    post:
      summary: Generate time series for the given measures (aggregation expressions) along with the sparkline timeseries
      operationId: QueryService_ColumnTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTimeSeriesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              measures:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/ColumnTimeSeriesRequestBasicMeasure'
              timestampColumnName:
                type: string
              timeRange:
                $ref: '#/definitions/v1TimeSeriesTimeRange'
              filters:
                $ref: '#/definitions/v1MetricsViewFilter'
              pixels:
                type: integer
                format: int32
              sampleSize:
                type: integer
                format: int32
              priority:
                type: integer
                format: int32
      tags:
        - QueryService
  /v1/instances/{instanceId}/queries/topk/tables/{tableName}:
    post:
      summary: |-
        Get TopK elements from a table for a column given an agg function
        agg function and k are optional, defaults are count(*) and 50 respectively
      operationId: QueryService_ColumnTopK
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ColumnTopKResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              columnName:
                type: string
              agg:
                type: string
                title: default is count(*)
              k:
                type: integer
                format: int32
                title: default is 50
              priority:
                type: integer
                format: int32
            description: Request for QueryService.ColumnTopK. Returns the top K values for a given column using agg function for table table_name.
      tags:
        - QueryService
  /v1/instances/{instanceId}/query:
    post:
      summary: Query runs a SQL query against the instance's OLAP datastore.
      operationId: QueryService_Query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1QueryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance to query
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              sql:
                type: string
                title: SELECT statement
              args:
                type: array
                items: {}
                title: Args to interpolate into the statement
              priority:
                type: integer
                format: int32
                title: Query priority (not supported by all backends)
              dryRun:
                type: boolean
                title: If true, will only validate the query, not execute it
            title: Request message for QueryService.Query
      tags:
        - QueryService
  /v1/instances/{instanceId}/reconcile:
    post:
      summary: |-
        Reconcile applies a full set of artifacts from a repo to the catalog and infra.
        It attempts to infer a minimal number of migrations to apply to reconcile the current state with
        the desired state expressed in the artifacts. Any existing objects not described in the submitted
        artifacts will be deleted.
      operationId: RuntimeService_Reconcile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ReconcileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          description: Instance to reconcile
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              changedPaths:
                type: array
                items:
                  type: string
                description: |-
                  Changed paths provides a way to "hint" what files have changed in the repo, enabling
                  reconciliation to execute faster by not scanning all code artifacts for changes.
              forcedPaths:
                type: array
                items:
                  type: string
                description: |-
                  Forced paths is used to force run reconcile on certain files.
                  This is mainly used by UI to reconcile paths missing in catalog and get errors if any.
              dry:
                type: boolean
                title: If true, will validate the file artifacts, but not actually execute any migrations
              strict:
                type: boolean
                title: |-
                  If true, will not execute any migrations if any artifact fails to validate.
                  Otherwise, it will execute a best-effort reconciliation (including dropping objects with
                  artifacts that fail to validate.)
            title: Request message for RuntimeService.Reconcile
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/sync:
    post:
      summary: |-
        TriggerSync syncronizes the instance's catalog with the underlying OLAP's information schema.
        If the instance has exposed=true, tables found in the information schema will be added to the catalog.
      operationId: RuntimeService_TriggerSync
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TriggerSyncResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/ping:
    get:
      summary: Ping returns information about the runtime
      operationId: RuntimeService_Ping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - RuntimeService
  /v1/put-and-reconcile:
    post:
      summary: |-
        PutFileAndReconcile combines PutFile and Reconcile in a single endpoint to reduce latency.
        It is equivalent to calling the two RPCs sequentially.
      operationId: RuntimeService_PutFileAndReconcile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PutFileAndReconcileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PutFileAndReconcileRequest'
      tags:
        - RuntimeService
  /v1/refresh-and-reconcile:
    post:
      operationId: RuntimeService_RefreshAndReconcile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RefreshAndReconcileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RefreshAndReconcileRequest'
      tags:
        - RuntimeService
  /v1/rename-and-reconcile:
    post:
      summary: RenameFileAndReconcile combines RenameFile and Reconcile in a single endpoint to reduce latency.
      operationId: RuntimeService_RenameFileAndReconcile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameFileAndReconcileResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenameFileAndReconcileRequest'
      tags:
        - RuntimeService
definitions:
  ColumnTimeSeriesRequestBasicMeasure:
    type: object
    properties:
      id:
        type: string
      expression:
        type: string
        title: mandatory user defined metadata
      sqlName:
        type: string
        title: optional user defined metadata
  ConnectorProperty:
    type: object
    properties:
      key:
        type: string
        title: The property key
      displayName:
        type: string
        title: Pretty name for the property
      description:
        type: string
        title: Human readable description of the field
      placeholder:
        type: string
        title: Placeholder value for use in UIs
      type:
        $ref: '#/definitions/ConnectorPropertyType'
        title: The type expected for this property
      nullable:
        type: boolean
        title: Nullable is true if the field is optional
      hint:
        type: string
        title: Additional textual explanation for use in UIs
      href:
        type: string
        title: Link to documentation for this property
    title: Property represents one of the connector's config properties
  ConnectorPropertyType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_STRING
      - TYPE_NUMBER
      - TYPE_BOOLEAN
      - TYPE_INFORMATIONAL
    default: TYPE_UNSPECIFIED
    title: Type represents the field type
  ExtractPolicyStrategy:
    type: string
    enum:
      - STRATEGY_UNSPECIFIED
      - STRATEGY_HEAD
      - STRATEGY_TAIL
    default: STRATEGY_UNSPECIFIED
  MetricsViewDimension:
    type: object
    properties:
      name:
        type: string
      label:
        type: string
      description:
        type: string
    title: Dimensions are columns to filter and group by
  MetricsViewFilterCond:
    type: object
    properties:
      name:
        type: string
      in:
        type: array
        items: {}
      like:
        type: array
        items:
          type: string
  MetricsViewMeasure:
    type: object
    properties:
      name:
        type: string
      label:
        type: string
      expression:
        type: string
      description:
        type: string
      format:
        type: string
    title: Measures are aggregated computed values
  ModelDialect:
    type: string
    enum:
      - DIALECT_UNSPECIFIED
      - DIALECT_DUCKDB
    default: DIALECT_UNSPECIFIED
    title: Dialects supported for models
  NumericHistogramBinsBin:
    type: object
    properties:
      bucket:
        type: integer
        format: int32
      low:
        type: number
        format: double
      midpoint:
        type: number
        format: double
      high:
        type: number
        format: double
      count:
        type: number
        format: double
  NumericOutliersOutlier:
    type: object
    properties:
      bucket:
        type: integer
        format: int32
      low:
        type: number
        format: double
      high:
        type: number
        format: double
      present:
        type: boolean
      count:
        type: integer
        format: int32
  ReconcileErrorCharLocation:
    type: object
    properties:
      line:
        type: integer
        format: int64
      column:
        type: integer
        format: int64
    title: CharLocation is a line and column in a code artifact
  SourceExtractPolicy:
    type: object
    properties:
      rowsStrategy:
        $ref: '#/definitions/ExtractPolicyStrategy'
        title: strategy for selecting rows in a file
      rowsLimitBytes:
        type: string
        format: uint64
        title: |-
          could in future add: uint64 rows_limit = n;
          limit on data fetched in bytes
      filesStrategy:
        $ref: '#/definitions/ExtractPolicyStrategy'
        title: strategy for selecting files
      filesLimit:
        type: string
        format: uint64
        title: limit on number of files
    title: Extract policy for glob connectors
  StructTypeField:
    type: object
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/runtimev1Type'
  TimeRangeSummaryInterval:
    type: object
    properties:
      months:
        type: integer
        format: int32
      days:
        type: integer
        format: int32
      micros:
        type: string
        format: int64
  TopKEntry:
    type: object
    properties:
      value: {}
      count:
        type: number
        format: double
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  runtimev1Type:
    type: object
    properties:
      code:
        $ref: '#/definitions/v1TypeCode'
        title: Code designates the type
      nullable:
        type: boolean
        title: Nullable indicates whether null values are possible
      arrayElementType:
        $ref: '#/definitions/runtimev1Type'
        title: If code is CODE_ARRAY, array_element_type specifies the type of the array elements
      structType:
        $ref: '#/definitions/v1StructType'
        title: If code is CODE_STRUCT, struct_type specifies the type of the struct's fields
      mapType:
        $ref: '#/definitions/v1MapType'
        title: If code is CODE_MAP, map_type specifies the map's key and value types
    title: Type represents a data type in a schema
  v1CatalogEntry:
    type: object
    properties:
      name:
        type: string
      table:
        $ref: '#/definitions/v1Table'
      source:
        $ref: '#/definitions/v1Source'
      model:
        $ref: '#/definitions/v1Model'
      metricsView:
        $ref: '#/definitions/v1MetricsView'
      path:
        type: string
      embedded:
        type: boolean
        description: Marks whether this entry is embedded or not. If yes then this will not have a corresponding artifact.
      parents:
        type: array
        items:
          type: string
        title: Immediate parent entries in the DAG
      children:
        type: array
        items:
          type: string
        title: Immediate child entries in the DAG
      createdOn:
        type: string
        format: date-time
      updatedOn:
        type: string
        format: date-time
      refreshedOn:
        type: string
        format: date-time
    title: CatalogEntry contains information about an object in the catalog
  v1CategoricalSummary:
    type: object
    properties:
      topK:
        $ref: '#/definitions/v1TopK'
      cardinality:
        type: number
        format: double
    description: Response for QueryService.ColumnTopK and QueryService.ColumnCardinality. Message will have either topK or cardinality set.
  v1ColumnCardinalityResponse:
    type: object
    properties:
      categoricalSummary:
        $ref: '#/definitions/v1CategoricalSummary'
  v1ColumnDescriptiveStatisticsResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
  v1ColumnNullCountResponse:
    type: object
    properties:
      count:
        type: number
        format: double
    title: Response for QueryService.ColumnNullCount
  v1ColumnNumericHistogramResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
    title: Response for QueryService.ColumnNumericHistogram
  v1ColumnRollupIntervalResponse:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
      interval:
        $ref: '#/definitions/v1TimeGrain'
  v1ColumnRugHistogramResponse:
    type: object
    properties:
      numericSummary:
        $ref: '#/definitions/v1NumericSummary'
  v1ColumnTimeGrainResponse:
    type: object
    properties:
      timeGrain:
        $ref: '#/definitions/v1TimeGrain'
    title: Response for QueryService.ColumnTimeGrain
  v1ColumnTimeRangeResponse:
    type: object
    properties:
      timeRangeSummary:
        $ref: '#/definitions/v1TimeRangeSummary'
  v1ColumnTimeSeriesResponse:
    type: object
    properties:
      rollup:
        $ref: '#/definitions/v1TimeSeriesResponse'
  v1ColumnTopKResponse:
    type: object
    properties:
      categoricalSummary:
        $ref: '#/definitions/v1CategoricalSummary'
  v1Connector:
    type: object
    properties:
      name:
        type: string
        title: Name is the name of the connector (e.g. "CREATE SOURCE foo WITH connector = 'name'")
      displayName:
        type: string
        title: Pretty display name for use in UIs
      description:
        type: string
        title: Human readable description of the connector
      properties:
        type: array
        items:
          type: object
          $ref: '#/definitions/ConnectorProperty'
        title: Properties accepted by the connector
    description: |-
      Connector represents a connector available in the runtime.
      It should not be confused with a source.
  v1CreateInstanceRequest:
    type: object
    properties:
      instanceId:
        type: string
      olapDriver:
        type: string
      olapDsn:
        type: string
      repoDriver:
        type: string
      repoDsn:
        type: string
      embedCatalog:
        type: boolean
      variables:
        type: object
        additionalProperties:
          type: string
      ingestionLimitBytes:
        type: string
        format: int64
    description: |-
      Request message for RuntimeService.CreateInstance.
      See message Instance for field descriptions.
  v1CreateInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.CreateInstance
  v1DeleteFileAndReconcileRequest:
    type: object
    properties:
      instanceId:
        type: string
        title: Instance to store file in and reconcile
      path:
        type: string
        title: Path to store the file at
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort reconciliation (including dropping objects with
          artifacts that fail to validate.)
  v1DeleteFileAndReconcileResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReconcileError'
        description: |-
          Errors encountered during reconciliation. If strict = false, any path in
          affected_paths without an error can be assumed to have been reconciled succesfully.
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the reconciliation. If changed_paths was empty, this will include all
          code artifacts in the repo.
  v1DeleteFileResponse:
    type: object
    title: Response message for RuntimeService.DeleteFile
  v1DeleteInstanceResponse:
    type: object
    title: Response message for RuntimeService.DeleteInstance
  v1EditInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.EditInstance
  v1GetCatalogEntryResponse:
    type: object
    properties:
      entry:
        $ref: '#/definitions/v1CatalogEntry'
    title: Response message for RuntimeService.GetCatalogEntry
  v1GetFileResponse:
    type: object
    properties:
      blob:
        type: string
      updatedOn:
        type: string
        format: date-time
    title: Reponse message for RuntimeService.GetFile
  v1GetInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.GetInstance
  v1HistogramMethod:
    type: string
    enum:
      - HISTOGRAM_METHOD_UNSPECIFIED
      - HISTOGRAM_METHOD_FD
      - HISTOGRAM_METHOD_DIAGNOSTIC
    default: HISTOGRAM_METHOD_UNSPECIFIED
  v1InlineMeasure:
    type: object
    properties:
      name:
        type: string
      expression:
        type: string
    title: InlineMeasure is a measure to inject in a metrics view query that is not defined in the underlying MetricsView
  v1Instance:
    type: object
    properties:
      instanceId:
        type: string
        title: Identifier (UUID)
      olapDriver:
        type: string
        title: 'Driver to connect to for OLAP (options: duckdb, druid)'
      olapDsn:
        type: string
        title: DSN for connection to OLAP
      repoDriver:
        type: string
        description: |-
          Driver for reading/editing code artifacts (options: file, metastore, github).
          This enables virtualizing a file system in a cloud setting.
      repoDsn:
        type: string
        title: DSN for connecting to repo
      embedCatalog:
        type: boolean
        description: |-
          If true, the runtime will store the instance's catalog in its OLAP store instead
          of in the runtime's metadata store. Currently only supported for the duckdb driver.
      variables:
        type: object
        additionalProperties:
          type: string
        title: instance specific variables
      projectVariables:
        type: object
        additionalProperties:
          type: string
        title: project defaults
      ingestionLimitBytes:
        type: string
        format: int64
        title: ingestion limit across all sources, 0 means no limit
    description: |-
      Instance represents a single data project, meaning one set of code artifacts,
      one connection to an OLAP datastore (DuckDB, Druid), and one catalog of related
      metadata (such as reconciliation state). Instances are the unit of isolation within
      the runtime. They enable one runtime deployment to serve not only multiple data
      projects, but also multiple tenants. On local, the runtime will usually have
      just a single instance.
  v1ListCatalogEntriesResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1CatalogEntry'
    title: Response message for RuntimeService.ListCatalogEntries
  v1ListConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Connector'
    title: Response message for RuntimeService.ListConnectors
  v1ListFilesResponse:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
    title: Response message for RuntimeService.ListFiles
  v1ListInstancesResponse:
    type: object
    properties:
      instances:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Instance'
      nextPageToken:
        type: string
    title: Response message for RuntimeService.ListInstances
  v1MapType:
    type: object
    properties:
      keyType:
        $ref: '#/definitions/runtimev1Type'
      valueType:
        $ref: '#/definitions/runtimev1Type'
    title: MapType is a complex type for mapping keys to values
  v1MetricsView:
    type: object
    properties:
      name:
        type: string
        title: Name of the metrics view
      model:
        type: string
        title: Name of the source or model that the metrics view is based on
      timeDimension:
        type: string
        title: Name of the primary time dimension, used for rendering time series
      dimensions:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewDimension'
        title: Dimensions in the metrics view
      measures:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewMeasure'
        title: Measures in the metrics view
      label:
        type: string
        title: User friendly label for the dashboard
      description:
        type: string
        title: Brief description of the dashboard
      smallestTimeGrain:
        $ref: '#/definitions/v1TimeGrain'
        title: Smallest time grain to show in the dashboard
      defaultTimeRange:
        type: string
        description: Default time range for the dashboard. It should be a valid ISO 8601 duration string.
    title: Metrics view is the internal representation of a metrics view definition
  v1MetricsViewColumn:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      nullable:
        type: boolean
    title: MetricsViewColumn represents a column in a metrics view
  v1MetricsViewComparisonRow:
    type: object
    properties:
      dimensionValue: {}
      measureValues:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonValue'
  v1MetricsViewComparisonSort:
    type: object
    properties:
      measureName:
        type: string
      ascending:
        type: boolean
      type:
        $ref: '#/definitions/v1MetricsViewComparisonSortType'
  v1MetricsViewComparisonSortType:
    type: string
    enum:
      - METRICS_VIEW_COMPARISON_SORT_TYPE_UNSPECIFIED
      - METRICS_VIEW_COMPARISON_SORT_TYPE_BASE_VALUE
      - METRICS_VIEW_COMPARISON_SORT_TYPE_COMPARISON_VALUE
      - METRICS_VIEW_COMPARISON_SORT_TYPE_ABS_DELTA
      - METRICS_VIEW_COMPARISON_SORT_TYPE_REL_DELTA
    default: METRICS_VIEW_COMPARISON_SORT_TYPE_UNSPECIFIED
  v1MetricsViewComparisonToplistResponse:
    type: object
    properties:
      rows:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewComparisonRow'
    title: Response message for QueryService.MetricsViewComparisonToplist
  v1MetricsViewComparisonValue:
    type: object
    properties:
      measureName:
        type: string
      baseValue: {}
      comparisonValue: {}
      deltaAbs: {}
      deltaRel: {}
  v1MetricsViewFilter:
    type: object
    properties:
      include:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewFilterCond'
      exclude:
        type: array
        items:
          type: object
          $ref: '#/definitions/MetricsViewFilterCond'
    title: Filter clause for metrics view requests
  v1MetricsViewRowsResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
      data:
        type: array
        items:
          type: object
    title: Response message for QueryService.MetricsViewRows
  v1MetricsViewSort:
    type: object
    properties:
      name:
        type: string
      ascending:
        type: boolean
    title: Sort clause for metrics view requests
  v1MetricsViewTimeSeriesResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
    title: Response message for QueryService.MetricsViewTimeSeries
  v1MetricsViewToplistResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
      data:
        type: array
        items:
          type: object
    title: Response message for QueryService.MetricsViewToplist
  v1MetricsViewTotalsResponse:
    type: object
    properties:
      meta:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MetricsViewColumn'
      data:
        type: object
    title: Response message for QueryService.MetricsViewTotals
  v1Model:
    type: object
    properties:
      name:
        type: string
        title: Name of the model
      sql:
        type: string
        title: SQL is a SELECT statement representing the model
      dialect:
        $ref: '#/definitions/ModelDialect'
        title: Dialect of the SQL statement
      schema:
        $ref: '#/definitions/v1StructType'
        title: Detected schema of the model
      materialize:
        type: boolean
        title: To materialize model or not
    title: Model is the internal representation of a model definition
  v1NumericHistogramBins:
    type: object
    properties:
      bins:
        type: array
        items:
          type: object
          $ref: '#/definitions/NumericHistogramBinsBin'
  v1NumericOutliers:
    type: object
    properties:
      outliers:
        type: array
        items:
          type: object
          $ref: '#/definitions/NumericOutliersOutlier'
  v1NumericStatistics:
    type: object
    properties:
      min:
        type: number
        format: double
      max:
        type: number
        format: double
      mean:
        type: number
        format: double
      q25:
        type: number
        format: double
      q50:
        type: number
        format: double
      q75:
        type: number
        format: double
      sd:
        type: number
        format: double
    title: Response for QueryService.ColumnDescriptiveStatistics
  v1NumericSummary:
    type: object
    properties:
      numericHistogramBins:
        $ref: '#/definitions/v1NumericHistogramBins'
      numericStatistics:
        $ref: '#/definitions/v1NumericStatistics'
      numericOutliers:
        $ref: '#/definitions/v1NumericOutliers'
    description: |-
      Response for QueryService.ColumnNumericHistogram, QueryService.ColumnDescriptiveStatistics and QueryService.ColumnCardinality.
      Message will have either numericHistogramBins, numericStatistics or numericOutliers set.
  v1ObjectType:
    type: string
    enum:
      - OBJECT_TYPE_UNSPECIFIED
      - OBJECT_TYPE_TABLE
      - OBJECT_TYPE_SOURCE
      - OBJECT_TYPE_MODEL
      - OBJECT_TYPE_METRICS_VIEW
    default: OBJECT_TYPE_UNSPECIFIED
    title: ObjectType represents the different kinds of catalog objects
  v1PingResponse:
    type: object
    properties:
      version:
        type: string
        title: Runtime version
      time:
        type: string
        format: date-time
        title: Runtime server time
    title: Response message for RuntimeService.Ping
  v1ProfileColumn:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      largestStringLength:
        type: integer
        format: int32
  v1PutFileAndReconcileRequest:
    type: object
    properties:
      instanceId:
        type: string
        title: Instance to store file in and reconcile
      path:
        type: string
        title: Path to store the file at
      blob:
        type: string
        title: Contents to save to the file
      create:
        type: boolean
        title: Create indicates whether to create the file if it doesn't already exist
      createOnly:
        type: boolean
        description: |-
          create_only will cause the operation to fail if a file already exists at path.
          It should only be set when create = true.
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort reconciliation (including dropping objects with
          artifacts that fail to validate.)
  v1PutFileAndReconcileResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReconcileError'
        description: |-
          Errors encountered during reconciliation. If strict = false, any path in
          affected_paths without an error can be assumed to have been reconciled succesfully.
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the reconciliation. If changed_paths was empty, this will include all
          code artifacts in the repo.
  v1PutFileResponse:
    type: object
    properties:
      filePath:
        type: string
        title: 'TODO: Redundant, should be removed (but frontend currently uses it)'
    title: Response message for RuntimeService.PutFile
  v1QueryResponse:
    type: object
    properties:
      meta:
        $ref: '#/definitions/v1StructType'
        title: Schema of result data
      data:
        type: array
        items:
          type: object
        title: Result data
    title: Response message for QueryService.Query
  v1ReconcileError:
    type: object
    properties:
      code:
        $ref: '#/definitions/v1ReconcileErrorCode'
        title: Code denotes the category of error
      message:
        type: string
        title: Message is a developer-friendly error message
      filePath:
        type: string
        title: File path of the code artifact that this error relates to (if any)
      propertyPath:
        type: array
        items:
          type: string
        description: |-
          Property path of the error in the code artifact (if any).
          It's represented as a JS-style property path, e.g. "key0.key1[index2].key3".
          It only applies to structured code artifacts (i.e. YAML).
          Only applicable if file_path is set.
      startLocation:
        $ref: '#/definitions/ReconcileErrorCharLocation'
        description: |-
          Start location of the error in the code artifact (if any).
          Only applicable if file_path is set.
      endLocation:
        $ref: '#/definitions/ReconcileErrorCharLocation'
        description: |-
          End location of the error in the code artifact (if any).
          Only applicable if file_path and start_location is set.
    description: ReconcileError represents an error encountered while running Reconcile.
  v1ReconcileErrorCode:
    type: string
    enum:
      - CODE_UNSPECIFIED
      - CODE_SYNTAX
      - CODE_VALIDATION
      - CODE_DEPENDENCY
      - CODE_OLAP
      - CODE_SOURCE
      - CODE_SOURCE_PERMISSION_DENIED
    default: CODE_UNSPECIFIED
    description: |-
      - CODE_UNSPECIFIED: Unspecified error
       - CODE_SYNTAX: Code artifact failed to parse
       - CODE_VALIDATION: Code artifact has internal validation errors
       - CODE_DEPENDENCY: Code artifact is valid, but has invalid dependencies
       - CODE_OLAP: Error returned from the OLAP database
       - CODE_SOURCE: Error encountered during source inspection or ingestion
       - CODE_SOURCE_PERMISSION_DENIED: Error returned when unauthorised to access remote sources
    title: Code represents different categories of reconciliation errors
  v1ReconcileResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReconcileError'
        description: |-
          Errors encountered during reconciliation. If strict = false, any path in
          affected_paths without an error can be assumed to have been reconciled succesfully.
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the reconciliation. If changed_paths was empty, this will include all
          code artifacts in the repo.
    title: Response message for RuntimeService.Reconcile
  v1RefreshAndReconcileRequest:
    type: object
    properties:
      instanceId:
        type: string
        title: Instance to store file in and reconcile
      path:
        type: string
        title: Current path of the file
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort reconciliation (including dropping objects with
          artifacts that fail to validate.)
  v1RefreshAndReconcileResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReconcileError'
        description: |-
          Errors encountered during reconciliation. If strict = false, any path in
          affected_paths without an error can be assumed to have been reconciled succesfully.
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the reconciliation. If changed_paths was empty, this will include all
          code artifacts in the repo.
  v1RenameFileAndReconcileRequest:
    type: object
    properties:
      instanceId:
        type: string
        title: Instance to store file in and reconcile
      fromPath:
        type: string
        title: Current path of the file
      toPath:
        type: string
        title: New path of the file
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort reconciliation (including dropping objects with
          artifacts that fail to validate.)
  v1RenameFileAndReconcileResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ReconcileError'
        description: |-
          Errors encountered during reconciliation. If strict = false, any path in
          affected_paths without an error can be assumed to have been reconciled succesfully.
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the reconciliation. If changed_paths was empty, this will include all
          code artifacts in the repo.
  v1RenameFileResponse:
    type: object
    title: Response message for RuntimeService.RenameFile
  v1Source:
    type: object
    properties:
      name:
        type: string
        title: Name of the source
      connector:
        type: string
        title: Connector used by the source
      properties:
        type: object
        title: Connector properties assigned in the source
      schema:
        $ref: '#/definitions/v1StructType'
        title: Detected schema of the source
      policy:
        $ref: '#/definitions/SourceExtractPolicy'
        title: extraction policy for the source
      timeoutSeconds:
        type: integer
        format: int32
        title: timeout for source ingestion in seconds
    title: Source is the internal representation of a source definition
  v1StructType:
    type: object
    properties:
      fields:
        type: array
        items:
          type: object
          $ref: '#/definitions/StructTypeField'
    title: StructType is a type composed of ordered, named and typed sub-fields
  v1Table:
    type: object
    properties:
      name:
        type: string
        title: Table name
      schema:
        $ref: '#/definitions/v1StructType'
        title: Table schema
      managed:
        type: boolean
        description: |-
          Managed is true if the table was created through a runtime migration, false if it was discovered in by
          scanning the database's information schema.
    description: |-
      Table represents a table in the OLAP database. These include pre-existing tables discovered by periodically
      scanning the database's information schema when the instance is created with exposed=true. Pre-existing tables
      have managed = false.
  v1TableCardinalityResponse:
    type: object
    properties:
      cardinality:
        type: string
        format: int64
  v1TableColumnsResponse:
    type: object
    properties:
      profileColumns:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ProfileColumn'
  v1TableRowsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
  v1TimeGrain:
    type: string
    enum:
      - TIME_GRAIN_UNSPECIFIED
      - TIME_GRAIN_MILLISECOND
      - TIME_GRAIN_SECOND
      - TIME_GRAIN_MINUTE
      - TIME_GRAIN_HOUR
      - TIME_GRAIN_DAY
      - TIME_GRAIN_WEEK
      - TIME_GRAIN_MONTH
      - TIME_GRAIN_YEAR
    default: TIME_GRAIN_UNSPECIFIED
  v1TimeRange:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
  v1TimeRangeSummary:
    type: object
    properties:
      min:
        type: string
        format: date-time
      max:
        type: string
        format: date-time
      interval:
        $ref: '#/definitions/TimeRangeSummaryInterval'
  v1TimeSeriesResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
      spark:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TimeSeriesValue'
      timeRange:
        $ref: '#/definitions/v1TimeSeriesTimeRange'
      sampleSize:
        type: integer
        format: int32
  v1TimeSeriesTimeRange:
    type: object
    properties:
      start:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
      interval:
        $ref: '#/definitions/v1TimeGrain'
  v1TimeSeriesValue:
    type: object
    properties:
      ts:
        type: string
        format: date-time
      bin:
        type: number
        format: double
      records:
        type: object
  v1TopK:
    type: object
    properties:
      entries:
        type: array
        items:
          type: object
          $ref: '#/definitions/TopKEntry'
  v1TriggerRefreshResponse:
    type: object
    title: Response message for RuntimeService.TriggerRefresh
  v1TriggerSyncResponse:
    type: object
    properties:
      objectsCount:
        type: integer
        format: int64
      objectsAddedCount:
        type: integer
        format: int64
      objectsUpdatedCount:
        type: integer
        format: int64
      objectsRemovedCount:
        type: integer
        format: int64
    title: Response message for RuntimeService.TriggerSync
  v1TypeCode:
    type: string
    enum:
      - CODE_UNSPECIFIED
      - CODE_BOOL
      - CODE_INT8
      - CODE_INT16
      - CODE_INT32
      - CODE_INT64
      - CODE_INT128
      - CODE_UINT8
      - CODE_UINT16
      - CODE_UINT32
      - CODE_UINT64
      - CODE_UINT128
      - CODE_FLOAT32
      - CODE_FLOAT64
      - CODE_TIMESTAMP
      - CODE_DATE
      - CODE_TIME
      - CODE_STRING
      - CODE_BYTES
      - CODE_ARRAY
      - CODE_STRUCT
      - CODE_MAP
      - CODE_DECIMAL
      - CODE_JSON
      - CODE_UUID
    default: CODE_UNSPECIFIED
    title: Code enumerates all the types that can be represented in a schema
