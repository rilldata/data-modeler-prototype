swagger: "2.0"
info:
  title: rill/runtime/v1/schema.proto
  version: version not set
tags:
  - name: RuntimeService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/connectors/meta:
    get:
      summary: |-
        ListConnectors returns a description of all the connectors implemented in the runtime,
        including their schema and validation rules
      operationId: RuntimeService_ListConnectors
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListConnectorsResponse'
      tags:
        - RuntimeService
  /v1/delete-and-migrate:
    post:
      summary: DeleteFileAndMigrate combines RenameFile and Migrate in a single endpoint to reduce latency.
      operationId: RuntimeService_DeleteFileAndMigrate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteFileAndMigrateResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1DeleteFileAndMigrateRequest'
      tags:
        - RuntimeService
  /v1/instances:
    get:
      summary: ListInstances lists all the instances currently managed by the runtime
      operationId: RuntimeService_ListInstances
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInstancesResponse'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
    post:
      summary: CreateInstance creates a new instance
      operationId: RuntimeService_CreateInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateInstanceResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateInstanceRequest'
      tags:
        - RuntimeService
  /v1/instances/{instanceId}:
    get:
      summary: GetInstance returns information about a specific instance
      operationId: RuntimeService_GetInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInstanceResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
    delete:
      summary: DeleteInstance deletes an instance
      operationId: RuntimeService_DeleteInstance
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteInstanceResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/cardinality-of-column/{tableName}/{columnName}:
    get:
      summary: Get cardinality for a column
      operationId: RuntimeService_GetCardinalityOfColumn
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CategoricalSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog:
    get:
      summary: ListCatalogObjects lists all the objects (like tables, sources or metrics views) registered in an instance's catalog
      operationId: RuntimeService_ListCatalogObjects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListCatalogObjectsResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: type
          in: query
          required: false
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_TABLE
            - TYPE_SOURCE
            - TYPE_MODEL
            - TYPE_METRICS_VIEW
          default: TYPE_UNSPECIFIED
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog/{name}:
    get:
      summary: GetCatalogObject returns information about a specific object in the catalog
      operationId: RuntimeService_GetCatalogObject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetCatalogObjectResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/catalog/{name}/refresh:
    post:
      summary: |-
        TriggerRefresh triggers a refresh of a refreshable catalog object.
        It currently only supports sources (which will be re-ingested), but will also support materialized models in the future.
        It does not respond until the refresh has completed (will move to async jobs when the task scheduler is in place).
      operationId: RuntimeService_TriggerRefresh
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TriggerRefreshResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/descriptive-statistics/{tableName}/{columnName}:
    get:
      summary: Get basic stats for a numeric column like min, max, mean, stddev, etc
      operationId: RuntimeService_GetDescriptiveStatistics
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NumericSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/estimate-rollup-interval/{tableName}:
    post:
      summary: 'EstimateRollupInterval (TODO: add description)'
      operationId: RuntimeService_EstimateRollupInterval
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EstimateRollupIntervalResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              columnName:
                type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/estimate-smallest-time-grain/{tableName}/{columnName}:
    get:
      summary: Estimates the smallest time grain present in the column
      operationId: RuntimeService_EstimateSmallestTimeGrain
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EstimateSmallestTimeGrainResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/generate-timeseries:
    post:
      summary: Generate time series
      operationId: RuntimeService_GenerateTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TimeSeriesRollup'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filters:
                $ref: '#/definitions/v1MetricsViewRequestFilter'
              measures:
                $ref: '#/definitions/GenerateTimeSeriesRequestBasicMeasures'
              pixels:
                type: string
                format: int64
              sampleSize:
                type: integer
                format: int32
              tableName:
                type: string
              timeRange:
                $ref: '#/definitions/v1TimeSeriesTimeRange'
              timestampColumnName:
                type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/metrics-views/{metricsViewName}/timeseries:
    post:
      summary: |-
        MetricsViewTimeSeries returns time series for the measures in the metrics view.
        It's a convenience API for querying a metrics view.
      operationId: RuntimeService_MetricsViewTimeSeries
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTimeSeriesResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              measureNames:
                type: array
                items:
                  type: string
              timeEnd:
                type: string
                format: date-time
              timeGranularity:
                type: string
              timeStart:
                type: string
                format: date-time
            title: Request message for RuntimeService.MetricsViewTimeSeries
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/metrics-views/{metricsViewName}/toplist/{dimensionName}:
    post:
      summary: |-
        MetricsViewToplist returns the top dimension values of a metrics view sorted by one or more measures.
        It's a convenience API for querying a metrics view.
      operationId: RuntimeService_MetricsViewToplist
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewToplistResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: dimensionName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              limit:
                type: string
                format: int64
              measureNames:
                type: array
                items:
                  type: string
              offset:
                type: string
                format: int64
              sort:
                type: array
                items:
                  $ref: '#/definitions/v1MetricsViewSort'
              timeEnd:
                type: string
                format: date-time
              timeStart:
                type: string
                format: date-time
            title: Request message for RuntimeService.MetricsViewToplist
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/metrics-views/{metricsViewName}/totals:
    post:
      summary: |-
        MetricsViewTotals returns totals over a time period for the measures in a metrics view.
        It's a convenience API for querying a metrics view.
      operationId: RuntimeService_MetricsViewTotals
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MetricsViewTotalsResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: metricsViewName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filter:
                $ref: '#/definitions/v1MetricsViewFilter'
              measureNames:
                type: array
                items:
                  type: string
              timeEnd:
                type: string
                format: date-time
              timeStart:
                type: string
                format: date-time
            title: Request message for RuntimeService.MetricsViewTotals
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/migrate:
    post:
      summary: |-
        Migrate applies a full set of artifacts from a repo to the catalog and infra.
        It attempts to infer a minimal number of migrations to apply to reconcile the current state with
        the desired state expressed in the artifacts. Any existing objects not described in the submitted
        artifacts will be deleted.
      operationId: RuntimeService_Migrate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MigrateResponse'
      parameters:
        - name: instanceId
          description: Instance to migrate
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              changedPaths:
                type: array
                items:
                  type: string
                description: |-
                  Changed paths provides a way to "hint" what files have changed in the repo, enabling
                  migrations to execute faster by not scanning all code artifacts for changes.
              dry:
                type: boolean
                title: If true, will validate the file artifacts, but not actually execute any migrations
              repoId:
                type: string
                title: Contents of files containing one or more SQL DDL statements
              strict:
                type: boolean
                title: |-
                  If true, will not execute any migrations if any artifact fails to validate.
                  Otherwise, it will execute a best-effort migration (including dropping objects with artifacts
                  that fail to validate.)
            title: Request message for RuntimeService.Migrate
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/migrate/single:
    post:
      summary: |-
        DEPRECATED: MigrateSingle applies a single `CREATE` statement.
        It bypasses the reconciling migrations described in Migrate.
        We aim to deprecate this function once reconciling migrations are mature and adopted in the modeller.
      operationId: RuntimeService_MigrateSingle
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MigrateSingleResponse'
      parameters:
        - name: instanceId
          description: Instance to migrate
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              createOrReplace:
                type: boolean
                title: If true, will replace existing definitions with the same name
              dryRun:
                type: boolean
                title: If true, will validate the SQL, but not actually execute the migrations
              renameFrom:
                type: string
                description: |-
                  If provided, will attempt to rename an existing object and only recompute if necessary.
                  NOTE: very questionable semantics here.
              sql:
                type: string
                title: A CREATE statement
            title: Request message for RuntimeService.MigrateSingle
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/migrate/single/delete:
    post:
      summary: |-
        DEPRECATED: MigrateDelete deletes a single object.
        It bypasses the reconciling migrations described in Migrate.
        We aim to deprecate this function once reconciling migrations are mature and adopted in the modeller.
      operationId: RuntimeService_MigrateDelete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MigrateDeleteResponse'
      parameters:
        - name: instanceId
          description: Instance to migrate
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                title: Name of object to drop
            title: Request message for RuntimeService.MigrateDelete
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/null-count/{tableName}/{columnName}:
    get:
      summary: Get the number of nulls in a column
      operationId: RuntimeService_GetNullCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NullCountResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/numeric-histogram/{tableName}/{columnName}:
    get:
      summary: Get the histogram for values in a column
      operationId: RuntimeService_GetNumericHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NumericSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/query:
    post:
      summary: Query runs a SQL query against the instance's OLAP datastore.
      operationId: RuntimeService_Query
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1QueryResponse'
      parameters:
        - name: instanceId
          description: Instance to query
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              args:
                type: array
                items: {}
                title: Args to interpolate into the statement
              dryRun:
                type: boolean
                title: If true, will only validate the query, not execute it
              priority:
                type: string
                format: int64
                title: Query priority (not supported by all backends)
              sql:
                type: string
                title: SELECT statement
            title: Request message for RuntimeService.Query
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/query/direct:
    post:
      summary: 'DEPRECATED: QueryDirect runs a SQL query by directly executing it against the instance''s OLAP datastore.'
      operationId: RuntimeService_QueryDirect
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1QueryDirectResponse'
      parameters:
        - name: instanceId
          description: Instance to query
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              args:
                type: array
                items: {}
                title: Args to interpolate into the statement
              dryRun:
                type: boolean
                title: If true, will only validate the query, not execute it
              priority:
                type: string
                format: int64
                title: Query priority (not supported by all backends)
              sql:
                type: string
                title: SELECT statement
            title: Request message for RuntimeService.QueryDirect
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/rename-object:
    post:
      summary: Tablewide profiling APIs
      description: todo it's not a profiling endpoint - move smw else
      operationId: RuntimeService_RenameDatabaseObject
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameDatabaseObjectResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: name
          in: query
          required: false
          type: string
        - name: newname
          in: query
          required: false
          type: string
        - name: type
          in: query
          required: false
          type: string
          enum:
            - TABLE
            - VIEW
            - FUNCTION
          default: TABLE
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/rug-histogram/{tableName}/{columnName}:
    get:
      summary: Get outliers for a numeric column
      operationId: RuntimeService_GetRugHistogram
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1NumericSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/sync:
    post:
      summary: |-
        TriggerSync syncronizes the instance's catalog with the underlying OLAP's information schema.
        If the instance has exposed=true, tables found in the information schema will be added to the catalog.
      operationId: RuntimeService_TriggerSync
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TriggerSyncResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/tables/{tableName}/cardinality:
    get:
      summary: 'TableCardinality (TODO: add description)'
      operationId: RuntimeService_TableCardinality
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CardinalityResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/tables/{tableName}/profile-columns:
    get:
      summary: 'ProfileColumns (TODO: add description)'
      operationId: RuntimeService_ProfileColumns
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ProfileColumnsResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/tables/{tableName}/rows:
    get:
      summary: 'TableRows (TODO: add description)'
      operationId: RuntimeService_TableRows
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RowsResponse'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/time-range-summary/{tableName}/{columnName}:
    get:
      summary: Get the time range summaries (min, max) for a column
      operationId: RuntimeService_GetTimeRangeSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TimeRangeSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/instances/{instanceId}/topk/{tableName}/{columnName}:
    post:
      summary: |-
        Get TopK elements from a table for a column given an agg function
        agg function and k are optional, defaults are count(*) and 50 respectively
      operationId: RuntimeService_GetTopK
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CategoricalSummary'
      parameters:
        - name: instanceId
          in: path
          required: true
          type: string
        - name: tableName
          in: path
          required: true
          type: string
        - name: columnName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              agg:
                type: string
                title: default is count(*)
              k:
                type: integer
                format: int32
                title: default is 50
            description: Request for RuntimeService.GetTopK. Returns the top K values for a given column using agg function for table table_name.
      tags:
        - RuntimeService
  /v1/ping:
    get:
      summary: Ping returns information about the runtime
      operationId: RuntimeService_Ping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PingResponse'
      tags:
        - RuntimeService
  /v1/put-and-migrate:
    post:
      summary: |-
        PutFileAndMigrate combines PutFile and Migrate in a single endpoint to reduce latency.
        It is equivalent to calling the two RPCs sequentially.
      operationId: RuntimeService_PutFileAndMigrate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PutFileAndMigrateResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1PutFileAndMigrateRequest'
      tags:
        - RuntimeService
  /v1/rename-and-migrate:
    post:
      summary: RenameFileAndMigrate combines RenameFile and Migrate in a single endpoint to reduce latency.
      operationId: RuntimeService_RenameFileAndMigrate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameFileAndMigrateResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RenameFileAndMigrateRequest'
      tags:
        - RuntimeService
  /v1/repos:
    get:
      summary: ListRepos lists all the repos currently managed by the runtime
      operationId: RuntimeService_ListRepos
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListReposResponse'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
    post:
      summary: CreateRepo creates a new repo. See the Repo message for an explanation of repos.
      operationId: RuntimeService_CreateRepo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateRepoResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateRepoRequest'
      tags:
        - RuntimeService
  /v1/repos/{repoId}:
    get:
      summary: GetRepo returns info about a specific repo
      operationId: RuntimeService_GetRepo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetRepoResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
    delete:
      summary: DeleteRepo deletes a repo
      operationId: RuntimeService_DeleteRepo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteRepoResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
      tags:
        - RuntimeService
  /v1/repos/{repoId}/files:
    get:
      summary: |-
        ListFiles lists all the files matching a glob in a repo.
        The files are sorted by their full path.
      operationId: RuntimeService_ListFiles
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListFilesResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
        - name: glob
          in: query
          required: false
          type: string
      tags:
        - RuntimeService
  /v1/repos/{repoId}/files/-/{path}:
    get:
      summary: GetFile returns the contents of a specific file in a repo.
      operationId: RuntimeService_GetFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetFileResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
      tags:
        - RuntimeService
    delete:
      summary: DeleteFile deletes a file from a repo
      operationId: RuntimeService_DeleteFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteFileResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
      tags:
        - RuntimeService
    post:
      summary: PutFile creates or updates a file in a repo
      operationId: RuntimeService_PutFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PutFileResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
          pattern: .+
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              blob:
                type: string
              create:
                type: boolean
                title: Create indicates whether to create the file if it doesn't already exist
              createOnly:
                type: boolean
                description: |-
                  Will cause the operation to fail if the file already exists.
                  It should only be set when create = true.
            title: Request message for RuntimeService.PutFile
      tags:
        - RuntimeService
  /v1/repos/{repoId}/files/rename:
    post:
      summary: RenameFile renames a file in a repo
      operationId: RuntimeService_RenameFile
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RenameFileResponse'
      parameters:
        - name: repoId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              fromPath:
                type: string
              toPath:
                type: string
            title: Request message for RuntimeService.RenameFile
      tags:
        - RuntimeService
definitions:
  ConnectorProperty:
    type: object
    properties:
      description:
        type: string
        title: Human readable description of the field
      displayName:
        type: string
        title: Pretty name for the property
      hint:
        type: string
        title: Additional textual explanation for use in UIs
      href:
        type: string
        title: Link to documentation for this property
      key:
        type: string
        title: The property key
      nullable:
        type: boolean
        title: Nullable is true if the field is optional
      placeholder:
        type: string
        title: Placeholder value for use in UIs
      type:
        $ref: '#/definitions/ConnectorPropertyType'
        title: The type expected for this property
    title: Property represents one of the connector's config properties
  ConnectorPropertyType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_STRING
      - TYPE_NUMBER
      - TYPE_BOOLEAN
      - TYPE_INFORMATIONAL
    default: TYPE_UNSPECIFIED
    title: Type represents the field type
  GenerateTimeSeriesRequestBasicMeasures:
    type: object
    properties:
      basicMeasures:
        type: array
        items:
          $ref: '#/definitions/v1BasicMeasureDefinition'
  MetricsViewDimension:
    type: object
    properties:
      description:
        type: string
      enabled:
        type: string
      label:
        type: string
      name:
        type: string
    title: Dimensions are columns to filter and group by
  MetricsViewDimensionValueValues:
    type: object
    properties:
      values:
        type: array
        items: {}
  MetricsViewFilterCond:
    type: object
    properties:
      in:
        type: array
        items: {}
      like:
        type: array
        items: {}
      name:
        type: string
  MetricsViewMeasure:
    type: object
    properties:
      description:
        type: string
      enabled:
        type: string
      expression:
        type: string
      format:
        type: string
      label:
        type: string
      name:
        type: string
    title: Measures are aggregated computed values
  MigrationErrorCharLocation:
    type: object
    properties:
      column:
        type: integer
        format: int64
      line:
        type: integer
        format: int64
    title: CharLocation is a line and column in a code artifact
  ModelDialect:
    type: string
    enum:
      - DIALECT_UNSPECIFIED
      - DIALECT_DUCKDB
    default: DIALECT_UNSPECIFIED
    title: Dialects supported for models
  NumericHistogramBinsBin:
    type: object
    properties:
      bucket:
        type: string
        format: int64
      count:
        type: string
        format: int64
      high:
        type: number
        format: double
      low:
        type: number
        format: double
  NumericOutliersOutlier:
    type: object
    properties:
      bucket:
        type: string
        format: int64
      high:
        type: number
        format: double
      low:
        type: number
        format: double
      present:
        type: boolean
  StructTypeField:
    type: object
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/runtimev1Type'
  TimeRangeSummaryInterval:
    type: object
    properties:
      days:
        type: integer
        format: int32
      micros:
        type: string
        format: int64
      months:
        type: integer
        format: int32
  TimeSeriesResponseTimeSeriesValues:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/v1TimeSeriesValue'
  TopKResponseTopKEntry:
    type: object
    properties:
      count:
        type: number
        format: double
      value:
        type: string
        description: value is optional so that null values from the database can be represented.
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  runtimev1Type:
    type: object
    properties:
      arrayElementType:
        $ref: '#/definitions/runtimev1Type'
        title: If code is CODE_ARRAY, array_element_type specifies the type of the array elements
      code:
        $ref: '#/definitions/v1TypeCode'
        title: Code designates the type
      mapType:
        $ref: '#/definitions/v1MapType'
        title: If code is CODE_MAP, map_type specifies the map's key and value types
      nullable:
        type: boolean
        title: Nullable indicates whether null values are possible
      structType:
        $ref: '#/definitions/v1StructType'
        title: If code is CODE_STRUCT, struct_type specifies the type of the struct's fields
    title: Type represents a data type in a schema
  v1BasicMeasureDefinition:
    type: object
    properties:
      expression:
        type: string
        title: mandatory user defined metadata
      id:
        type: string
      sqlName:
        type: string
        title: optional user defined metadata
  v1CardinalityResponse:
    type: object
    properties:
      cardinality:
        type: string
        format: int64
  v1CatalogObject:
    type: object
    properties:
      createdOn:
        type: string
        format: date-time
      metricsView:
        $ref: '#/definitions/v1MetricsView'
      model:
        $ref: '#/definitions/v1Model'
      name:
        type: string
      path:
        type: string
      refreshedOn:
        type: string
        format: date-time
      source:
        $ref: '#/definitions/v1Source'
      table:
        $ref: '#/definitions/v1Table'
      type:
        $ref: '#/definitions/v1CatalogObjectType'
      updatedOn:
        type: string
        format: date-time
    title: CatalogObject represents an object stored in the catalog
  v1CatalogObjectType:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - TYPE_TABLE
      - TYPE_SOURCE
      - TYPE_MODEL
      - TYPE_METRICS_VIEW
    default: TYPE_UNSPECIFIED
  v1CategoricalSummary:
    type: object
    properties:
      cardinality:
        type: string
        format: int64
      topKResponse:
        $ref: '#/definitions/v1TopKResponse'
    description: Response for RuntimeService.GetTopK and RuntimeService.GetCardinalityOfColumn. Message will have either topK or cardinality set.
  v1Connector:
    type: object
    properties:
      description:
        type: string
        title: Human readable description of the connector
      displayName:
        type: string
        title: Pretty display name for use in UIs
      name:
        type: string
        title: Name is the name of the connector (e.g. "CREATE SOURCE foo WITH connector = 'name'")
      properties:
        type: array
        items:
          $ref: '#/definitions/ConnectorProperty'
        title: Properties accepted by the connector
    description: |-
      Connector represents a connector available in the runtime.
      It should not be confused with a source.
  v1CreateInstanceRequest:
    type: object
    properties:
      driver:
        type: string
      dsn:
        type: string
      embedCatalog:
        type: boolean
      exposed:
        type: boolean
      instanceId:
        type: string
        title: See message Instance for field descriptions
      objectPrefix:
        type: string
    title: Request message for RuntimeService.CreateInstance
  v1CreateInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
      instanceId:
        type: string
        title: Temporary, for compatibility with local frontend
    title: Response message for RuntimeService.CreateInstance
  v1CreateRepoRequest:
    type: object
    properties:
      driver:
        type: string
      dsn:
        type: string
      repoId:
        type: string
    title: Request message for RuntimeService.CreateRepo
  v1CreateRepoResponse:
    type: object
    properties:
      repo:
        $ref: '#/definitions/v1Repo'
    title: Response message for RuntimeService.CreateRepo
  v1DatabaseObjectType:
    type: string
    enum:
      - TABLE
      - VIEW
      - FUNCTION
    default: TABLE
  v1DeleteFileAndMigrateRequest:
    type: object
    properties:
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      instanceId:
        type: string
        title: Instance to apply the migrations to
      path:
        type: string
        title: Path to store the file at
      repoId:
        type: string
        title: Repo to store the file in
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort migration (including dropping objects with artifacts
          that fail to validate.)
  v1DeleteFileAndMigrateResponse:
    type: object
    properties:
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file paths that were considered while
          executing the migration. For a PutFileAndMigrate, this includes the put file
          as well as any file artifacts that rely on objects declared in it.
      errors:
        type: array
        items:
          $ref: '#/definitions/v1MigrationError'
        description: |-
          Errors encountered during the migration. If strict = false, any path in
          affected_paths without an error can be assumed to have been migrated succesfully.
  v1DeleteFileResponse:
    type: object
    title: Response message for RuntimeService.DeleteFile
  v1DeleteInstanceResponse:
    type: object
    title: Response message for RuntimeService.DeleteInstance
  v1DeleteRepoResponse:
    type: object
    title: Response message for RuntimeService.DeleteRepo
  v1EstimateRollupIntervalResponse:
    type: object
    properties:
      end:
        type: string
        format: date-time
      interval:
        $ref: '#/definitions/v1TimeGrain'
      start:
        type: string
        format: date-time
  v1EstimateSmallestTimeGrainResponse:
    type: object
    properties:
      timeGrain:
        $ref: '#/definitions/v1TimeGrain'
    title: Response for RuntimeService.EstimateSmallestTimeGrain
  v1GetCatalogObjectResponse:
    type: object
    properties:
      object:
        $ref: '#/definitions/v1CatalogObject'
    title: Response message for RuntimeService.GetCatalogObject
  v1GetFileResponse:
    type: object
    properties:
      blob:
        type: string
      updatedOn:
        type: string
        format: date-time
    title: Reponse message for RuntimeService.GetFile
  v1GetInstanceResponse:
    type: object
    properties:
      instance:
        $ref: '#/definitions/v1Instance'
    title: Response message for RuntimeService.GetInstance
  v1GetRepoResponse:
    type: object
    properties:
      repo:
        $ref: '#/definitions/v1Repo'
    title: Response message for RuntimeService.GetRepo
  v1Instance:
    type: object
    properties:
      driver:
        type: string
        title: Name of OLAP infra driver ("druid" or "duckdb")
      dsn:
        type: string
        title: DSN for connection to the OLAP infra
      embedCatalog:
        type: boolean
        description: |-
          If true, the runtime will store the instance's catalog data (such as sources and metrics views)
          in the instance's OLAP datastore instead of in the runtime's metadata store. This is currently
          only supported for the duckdb driver.
      exposed:
        type: boolean
        description: |-
          Indicates that the underlying infra may be manipulated directly by users.
          If true, the runtime will continuously poll the infra's information schema
          to discover tables not created through the runtime. They will be added to the
          catalog as UnmanagedTables.
      instanceId:
        type: string
        title: Identifier (UUID)
      objectPrefix:
        type: string
        description: |-
          Prefix to add to all table names created through Rill SQL (such as sources, models, etc.)
          Use it as an alternative to database schemas.
    description: |-
      Instance represents one connection to an OLAP datastore (such as DuckDB or Druid).
      Migrations and queries are issued against a specific instance. The concept of
      instances enables multiple data projects to be served by one runtime.
  v1ListCatalogObjectsResponse:
    type: object
    properties:
      objects:
        type: array
        items:
          $ref: '#/definitions/v1CatalogObject'
    title: Response message for RuntimeService.ListCatalogObjects
  v1ListConnectorsResponse:
    type: object
    properties:
      connectors:
        type: array
        items:
          $ref: '#/definitions/v1Connector'
    title: Response message for RuntimeService.ListConnectors
  v1ListFilesResponse:
    type: object
    properties:
      paths:
        type: array
        items:
          type: string
    title: Response message for RuntimeService.ListFiles
  v1ListInstancesResponse:
    type: object
    properties:
      instances:
        type: array
        items:
          $ref: '#/definitions/v1Instance'
      nextPageToken:
        type: string
    title: Response message for RuntimeService.ListInstances
  v1ListReposResponse:
    type: object
    properties:
      nextPageToken:
        type: string
      repos:
        type: array
        items:
          $ref: '#/definitions/v1Repo'
    title: Response message for RuntimeService.ListRepos
  v1MapType:
    type: object
    properties:
      keyType:
        $ref: '#/definitions/runtimev1Type'
      valueType:
        $ref: '#/definitions/runtimev1Type'
    title: MapType is a complex type for mapping keys to values
  v1MetricsView:
    type: object
    properties:
      dimensions:
        type: array
        items:
          $ref: '#/definitions/MetricsViewDimension'
        title: Dimensions in the metrics view
      from:
        type: string
        title: Name of the source or model that the metrics view is based on
      measures:
        type: array
        items:
          $ref: '#/definitions/MetricsViewMeasure'
        title: Measures in the metrics view
      name:
        type: string
        title: Name of the metrics view
      timeDimension:
        type: string
        title: Name of the primary time dimension, used for rendering time series
      timeGrains:
        type: array
        items:
          type: string
        description: |-
          Recommended granularities for rolling up the time dimension.
          Should be a valid SQL INTERVAL value.
    title: Metrics view is the internal representation of a metrics view definition
  v1MetricsViewColumn:
    type: object
    properties:
      name:
        type: string
      nullable:
        type: boolean
      type:
        type: string
    title: MetricsViewColumn represents a column in a metrics view
  v1MetricsViewDimensionValue:
    type: object
    properties:
      in:
        type: array
        items: {}
      like:
        $ref: '#/definitions/MetricsViewDimensionValueValues'
      name:
        type: string
  v1MetricsViewFilter:
    type: object
    properties:
      exclude:
        type: array
        items:
          $ref: '#/definitions/MetricsViewFilterCond'
      include:
        type: array
        items:
          $ref: '#/definitions/MetricsViewFilterCond'
      match:
        type: array
        items:
          type: string
    title: Filter clause for metrics view requests
  v1MetricsViewRequestFilter:
    type: object
    properties:
      exclude:
        type: array
        items:
          $ref: '#/definitions/v1MetricsViewDimensionValue'
      include:
        type: array
        items:
          $ref: '#/definitions/v1MetricsViewDimensionValue'
  v1MetricsViewSort:
    type: object
    properties:
      ascending:
        type: boolean
      name:
        type: string
    title: Sort clause for metrics view requests
  v1MetricsViewTimeSeriesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
      meta:
        type: array
        items:
          $ref: '#/definitions/v1MetricsViewColumn'
    title: Response message for RuntimeService.MetricsViewTimeSeries
  v1MetricsViewToplistResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
      meta:
        type: array
        items:
          $ref: '#/definitions/v1MetricsViewColumn'
    title: Response message for RuntimeService.MetricsViewToplist
  v1MetricsViewTotalsResponse:
    type: object
    properties:
      data:
        type: object
      meta:
        type: array
        items:
          $ref: '#/definitions/v1MetricsViewColumn'
    title: Response message for RuntimeService.MetricsViewTotals
  v1MigrateDeleteResponse:
    type: object
    title: Response message for RuntimeService.MigrateDelete
  v1MigrateResponse:
    type: object
    properties:
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file artifact paths that were considered while
          executing the migration. If changed_paths was empty, this will include all
          code artifacts in the repo.
      errors:
        type: array
        items:
          $ref: '#/definitions/v1MigrationError'
        description: |-
          Errors encountered during the migration. If strict = false, any path in
          affected_paths without an error can be assumed to have been migrated succesfully.
    title: Response message for RuntimeService.Migrate
  v1MigrateSingleResponse:
    type: object
    title: Response message for RuntimeService.MigrateSingle
  v1MigrationError:
    type: object
    properties:
      code:
        $ref: '#/definitions/v1MigrationErrorCode'
        title: Code denotes the category of error
      endLocation:
        $ref: '#/definitions/MigrationErrorCharLocation'
        description: |-
          End location of the error in the code artifact (if any).
          Only applicable if file_path and start_location is set.
      filePath:
        type: string
        title: File path of the code artifact that this error relates to (if any)
      message:
        type: string
        title: Message is a developer-friendly error message
      propertyPath:
        type: string
        description: |-
          Property path of the error in the code artifact (if any).
          It's represented as a JS-style property path, e.g. "key0.key1[index2].key3".
          It only applies to structured code artifacts (i.e. YAML).
          Only applicable if file_path is set.
      startLocation:
        $ref: '#/definitions/MigrationErrorCharLocation'
        description: |-
          Start location of the error in the code artifact (if any).
          Only applicable if file_path is set.
    description: MigrationError represents an error encountered while running Migrate.
  v1MigrationErrorCode:
    type: string
    enum:
      - CODE_UNSPECIFIED
      - CODE_SYNTAX
      - CODE_VALIDATION
      - CODE_DEPENDENCY
      - CODE_OLAP
      - CODE_SOURCE
    default: CODE_UNSPECIFIED
    description: |-
      - CODE_UNSPECIFIED: Unspecified error
       - CODE_SYNTAX: Code artifact failed to parse
       - CODE_VALIDATION: Code artifact has internal validation errors
       - CODE_DEPENDENCY: Code artifact is valid, but has invalid dependencies
       - CODE_OLAP: Error returned from the OLAP database
       - CODE_SOURCE: Error encountered during source inspection or ingestion
    title: Code represents different categories of migration errors
  v1Model:
    type: object
    properties:
      dialect:
        $ref: '#/definitions/ModelDialect'
        title: Dialect of the SQL statement
      name:
        type: string
        title: Name of the model
      schema:
        $ref: '#/definitions/v1StructType'
        title: Detected schema of the model
      sql:
        type: string
        title: SQL is a SELECT statement representing the model
    title: Model is the internal representation of a model definition
  v1NullCountResponse:
    type: object
    properties:
      count:
        type: string
        format: int64
    title: Response for RuntimeService.GetNullCount
  v1NumericHistogramBins:
    type: object
    properties:
      bins:
        type: array
        items:
          $ref: '#/definitions/NumericHistogramBinsBin'
    title: Response for RuntimeService.GetNumericHistogram
  v1NumericOutliers:
    type: object
    properties:
      outliers:
        type: array
        items:
          $ref: '#/definitions/NumericOutliersOutlier'
  v1NumericStatistics:
    type: object
    properties:
      max:
        type: number
        format: double
      mean:
        type: number
        format: double
      min:
        type: number
        format: double
      q25:
        type: number
        format: double
      q50:
        type: number
        format: double
      q75:
        type: number
        format: double
      sd:
        type: number
        format: double
    title: Response for RuntimeService.GetDescriptiveStatistics
  v1NumericSummary:
    type: object
    properties:
      numericHistogramBins:
        $ref: '#/definitions/v1NumericHistogramBins'
      numericOutliers:
        $ref: '#/definitions/v1NumericOutliers'
      numericStatistics:
        $ref: '#/definitions/v1NumericStatistics'
    description: |-
      Response for RuntimeService.GetNumericHistogram, RuntimeService.GetDescriptiveStatistics and RuntimeService.GetCardinalityOfColumn.
      Message will have either numericHistogramBins, numericStatistics or numericOutliers set.
  v1PingResponse:
    type: object
    properties:
      time:
        type: string
        format: date-time
        title: Runtime server time
      version:
        type: string
        title: Runtime version
    title: Response message for RuntimeService.Ping
  v1ProfileColumn:
    type: object
    properties:
      largestStringLength:
        type: integer
        format: int32
      name:
        type: string
      type:
        type: string
  v1ProfileColumnsResponse:
    type: object
    properties:
      profileColumns:
        type: array
        items:
          $ref: '#/definitions/v1ProfileColumn'
  v1PutFileAndMigrateRequest:
    type: object
    properties:
      blob:
        type: string
        title: Contents to save to the file
      create:
        type: boolean
        title: Create indicates whether to create the file if it doesn't already exist
      createOnly:
        type: boolean
        description: |-
          create_only will cause the operation to fail if a file already exists at path.
          It should only be set when create = true.
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      instanceId:
        type: string
        title: Instance to apply the migrations to
      path:
        type: string
        title: Path to store the file at
      repoId:
        type: string
        title: Repo to store the file in
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort migration (including dropping objects with artifacts
          that fail to validate.)
  v1PutFileAndMigrateResponse:
    type: object
    properties:
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file paths that were considered while
          executing the migration. For a PutFileAndMigrate, this includes the put file
          as well as any file artifacts that rely on objects declared in it.
      errors:
        type: array
        items:
          $ref: '#/definitions/v1MigrationError'
        description: |-
          Errors encountered during the migration. If strict = false, any path in
          affected_paths without an error can be assumed to have been migrated succesfully.
  v1PutFileResponse:
    type: object
    properties:
      filePath:
        type: string
        title: 'TODO: Redundant, should be removed (but frontend currently uses it)'
    title: Response message for RuntimeService.PutFile
  v1QueryDirectResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
        title: Result data
      meta:
        $ref: '#/definitions/v1StructType'
        title: Schema of result data
    title: Response message for RuntimeService.QueryDirect
  v1QueryResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
        title: Result data
      meta:
        $ref: '#/definitions/v1StructType'
        title: Schema of result data
    title: Response message for RuntimeService.Query
  v1RenameDatabaseObjectResponse:
    type: object
  v1RenameFileAndMigrateRequest:
    type: object
    properties:
      dry:
        type: boolean
        description: If true, will save the file and validate it and related file artifacts, but not actually execute any migrations.
      fromPath:
        type: string
        title: Current path of the file
      instanceId:
        type: string
        title: Instance to apply the migrations to
      repoId:
        type: string
        title: Repo to store the file in
      strict:
        type: boolean
        title: |-
          If true, will not execute any migrations if any artifact fails to validate.
          Otherwise, it will execute a best-effort migration (including dropping objects with artifacts
          that fail to validate.)
      toPath:
        type: string
        title: New path of the file
  v1RenameFileAndMigrateResponse:
    type: object
    properties:
      affectedPaths:
        type: array
        items:
          type: string
        description: |-
          affected_paths lists all the file paths that were considered while
          executing the migration. For a PutFileAndMigrate, this includes the put file
          as well as any file artifacts that rely on objects declared in it.
      errors:
        type: array
        items:
          $ref: '#/definitions/v1MigrationError'
        description: |-
          Errors encountered during the migration. If strict = false, any path in
          affected_paths without an error can be assumed to have been migrated succesfully.
  v1RenameFileResponse:
    type: object
    title: Response message for RuntimeService.RenameFile
  v1Repo:
    type: object
    properties:
      driver:
        type: string
        description: Driver for persisting artifacts. Supports "file" and "postgres".
      dsn:
        type: string
        description: DSN for driver. If the driver is "file", this should be the path to the root directory.
      repoId:
        type: string
        title: UUID identifier
    description: |-
      Repo represents a collection of file artifacts containing SQL statements.
      It will usually by represented as a folder on disk, but may also be backed by a
      database (for modelling in the cloud where no persistant file system is available).
  v1RowsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
  v1Source:
    type: object
    properties:
      connector:
        type: string
        title: Connector used by the source
      name:
        type: string
        title: Name of the source
      properties:
        type: object
        title: Connector properties assigned in the source
      schema:
        $ref: '#/definitions/v1StructType'
        title: Detected schema of the source
      sql:
        type: string
        title: |-
          Used for the SQL statement for sources
          TODO: Remove when frontend sources code has been refactored
    title: Source is the internal representation of a source definition
  v1StructType:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/StructTypeField'
    title: StructType is a type composed of ordered, named and typed sub-fields
  v1Table:
    type: object
    properties:
      managed:
        type: boolean
        description: |-
          Managed is true if the table was created through a runtime migration, false if it was discovered in by
          scanning the database's information schema.
      name:
        type: string
        title: Table name
      schema:
        $ref: '#/definitions/v1StructType'
        title: Table schema
    description: |-
      Table represents a table in the OLAP database. These include pre-existing tables discovered by periodically
      scanning the database's information schema when the instance is created with exposed=true. Pre-existing tables
      have managed = false.
  v1TimeGrain:
    type: string
    enum:
      - UNSPECIFIED
      - MILLISECOND
      - SECOND
      - MINUTE
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
    default: UNSPECIFIED
  v1TimeRangeName:
    type: string
    enum:
      - LastHour
      - Last6Hours
      - LastDay
      - Last2Days
      - Last5Days
      - LastWeek
      - Last2Weeks
      - Last30Days
      - Last60Days
      - AllTime
    default: LastHour
    title: |-
      - AllTime: Today
       MonthToDate
       CustomRange
  v1TimeRangeSummary:
    type: object
    properties:
      interval:
        $ref: '#/definitions/TimeRangeSummaryInterval'
      max:
        type: string
        format: date-time
      min:
        type: string
        format: date-time
  v1TimeSeriesResponse:
    type: object
    properties:
      error:
        type: string
      id:
        type: string
      results:
        type: array
        items:
          $ref: '#/definitions/v1TimeSeriesValue'
      sampleSize:
        type: integer
        format: int32
      spark:
        $ref: '#/definitions/TimeSeriesResponseTimeSeriesValues'
      timeRange:
        $ref: '#/definitions/v1TimeSeriesTimeRange'
  v1TimeSeriesRollup:
    type: object
    properties:
      rollup:
        $ref: '#/definitions/v1TimeSeriesResponse'
  v1TimeSeriesTimeRange:
    type: object
    properties:
      end:
        type: string
        format: date-time
      interval:
        $ref: '#/definitions/v1TimeGrain'
      name:
        $ref: '#/definitions/v1TimeRangeName'
      start:
        type: string
        format: date-time
  v1TimeSeriesValue:
    type: object
    properties:
      bin:
        type: number
        format: double
      records:
        type: object
        additionalProperties:
          type: number
          format: double
      ts:
        type: string
  v1TopKResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/TopKResponseTopKEntry'
    description: Response for RuntimeService.GetTopK.
  v1TriggerRefreshResponse:
    type: object
    title: Response message for RuntimeService.TriggerRefresh
  v1TriggerSyncResponse:
    type: object
    properties:
      objectsAddedCount:
        type: integer
        format: int64
      objectsCount:
        type: integer
        format: int64
      objectsRemovedCount:
        type: integer
        format: int64
      objectsUpdatedCount:
        type: integer
        format: int64
    title: Response message for RuntimeService.TriggerSync
  v1TypeCode:
    type: string
    enum:
      - CODE_UNSPECIFIED
      - CODE_BOOL
      - CODE_INT8
      - CODE_INT16
      - CODE_INT32
      - CODE_INT64
      - CODE_INT128
      - CODE_UINT8
      - CODE_UINT16
      - CODE_UINT32
      - CODE_UINT64
      - CODE_UINT128
      - CODE_FLOAT32
      - CODE_FLOAT64
      - CODE_TIMESTAMP
      - CODE_DATE
      - CODE_TIME
      - CODE_STRING
      - CODE_BYTES
      - CODE_ARRAY
      - CODE_STRUCT
      - CODE_MAP
      - CODE_DECIMAL
      - CODE_JSON
      - CODE_UUID
    default: CODE_UNSPECIFIED
    title: Code enumerates all the types that can be represented in a schema
