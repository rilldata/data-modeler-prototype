// //@ts-check

import eslint from "@eslint/js";
import prettier from "eslint-config-prettier";
import svelte from "eslint-plugin-svelte";
import globals from "globals";
import tseslint from "typescript-eslint";
import playwright from "eslint-plugin-playwright";
// import vitest from "eslint-plugin-vitest";

export default [
  eslint.configs.recommended,
  ...tseslint.configs.recommended,
  ...svelte.configs["flat/recommended"],
  prettier,
  ...svelte.configs["flat/prettier"],
  {
    ...playwright.configs["flat/playwright"],
    files: ["**/tests/**"],
  },
  //   vitest.configs.recommended,
  {
    languageOptions: {
      ecmaVersion: "latest",
      sourceType: "module",
      globals: { ...globals.node, ...globals.browser },
      parserOptions: {
        project: true,
        tsconfigRootDir: import.meta.dirname,
        parser: tseslint.parser,
        extraFileExtensions: [".svelte"],
      },
    },
    rules: {
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-unused-vars": [
        "error",
        { argsIgnorePattern: "^_" },
      ],
      "@typescript-eslint/ban-ts-comment": "warn",
      "@typescript-eslint/no-unsafe-assignment": "warn",
      "@typescript-eslint/no-unsafe-member-access": "warn",
      "@typescript-eslint/no-unsafe-argument": "warn",
      "@typescript-eslint/no-unsafe-call": "warn",
      "@typescript-eslint/no-unsafe-return": "warn",
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-unnecessary-type-assertion": "warn",
      "@typescript-eslint/unbound-method": "warn",
      "@typescript-eslint/require-await": "warn",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/no-redundant-type-constituents": "off",
      "@typescript-eslint/no-unsafe-enum-comparison": "warn",
      "@typescript-eslint/no-misused-promises": "warn",
      "@typescript-eslint/no-duplicate-enum-values": "warn",
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/no-implied-eval": "warn",
      "@typescript-eslint/no-base-to-string": "warn",
      "@typescript-eslint/no-unused-expressions": "warn",
      "@typescript-eslint/no-require-imports": "warn",
    },
  },
  {
    ignores: [
      "**/postcss.config.cjs",
      "web-local/build/*",
      "web-common/build/*",
      "web-admin/build/*",
      "web-common/src/components/modal/*.js",
      "**/.svelte-kit/",
      "**/node_modules",
      "**/playwright.config.js",
      "**/svelte.config.js",
      "**/gen/*",
      "**/.storybook/*",
      // generated by nearly
      "web-common/src/features/dashboards/url-state/filters/expression.cjs",
    ],
  },
  {
    files: ["*.js"],
    ...tseslint.configs.disableTypeChecked,
  },
  {
    files: ["**/*.svelte"],
    rules: {
      // ERRORS
      "svelte/no-at-debug-tags": "error",
      "svelte/valid-prop-names-in-kit-pages": "error",
      // WARNINGS (some will be promoted to errors)
      "svelte/no-at-html-tags": "warn",
      "svelte/no-target-blank": "warn",
      "svelte/require-each-key": "warn",
      "svelte/prefer-destructured-store-props": "warn",
      "svelte/require-optimized-style-attribute": "warn",
      "svelte/prefer-class-directive": "warn",
      "svelte/require-store-reactive-access": "warn",
      //   "svelte/require-event-dispatcher-types": "warn",
      //   "svelte/sort-attributes": "warn",
    },
  },
];
