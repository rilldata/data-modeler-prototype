// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file rill/admin/v1/telemetry.proto (package rill.admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file rill/admin/v1/telemetry.proto.
 */
export const file_rill_admin_v1_telemetry: GenFile = /*@__PURE__*/
  fileDesc("Ch1yaWxsL2FkbWluL3YxL3RlbGVtZXRyeS5wcm90bxINcmlsbC5hZG1pbi52MSI+ChNSZWNvcmRFdmVudHNSZXF1ZXN0EicKBmV2ZW50cxgBIAMoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QiFgoUUmVjb3JkRXZlbnRzUmVzcG9uc2UyjAEKEFRlbGVtZXRyeVNlcnZpY2USeAoMUmVjb3JkRXZlbnRzEiIucmlsbC5hZG1pbi52MS5SZWNvcmRFdmVudHNSZXF1ZXN0GiMucmlsbC5hZG1pbi52MS5SZWNvcmRFdmVudHNSZXNwb25zZSIfgtPkkwIZOgEqIhQvdjEvdGVsZW1ldHJ5L2V2ZW50c0KpAQoRY29tLnJpbGwuYWRtaW4udjFCDlRlbGVtZXRyeVByb3RvUAFaLmdpdGh1Yi5jb20vcmlsbGRhdGEvcmlsbC9yaWxsL2FkbWluL3YxO2FkbWludjGiAgNSQViqAg1SaWxsLkFkbWluLlYxygINUmlsbFxBZG1pblxWMeICGVJpbGxcQWRtaW5cVjFcR1BCTWV0YWRhdGHqAg9SaWxsOjpBZG1pbjo6VjFiBnByb3RvMw", [file_google_api_annotations, file_google_protobuf_struct]);

/**
 * @generated from message rill.admin.v1.RecordEventsRequest
 */
export type RecordEventsRequest = Message<"rill.admin.v1.RecordEventsRequest"> & {
  /**
   * @generated from field: repeated google.protobuf.Struct events = 1;
   */
  events: JsonObject[];
};

/**
 * Describes the message rill.admin.v1.RecordEventsRequest.
 * Use `create(RecordEventsRequestSchema)` to create a new message.
 */
export const RecordEventsRequestSchema: GenMessage<RecordEventsRequest> = /*@__PURE__*/
  messageDesc(file_rill_admin_v1_telemetry, 0);

/**
 * @generated from message rill.admin.v1.RecordEventsResponse
 */
export type RecordEventsResponse = Message<"rill.admin.v1.RecordEventsResponse"> & {
};

/**
 * Describes the message rill.admin.v1.RecordEventsResponse.
 * Use `create(RecordEventsResponseSchema)` to create a new message.
 */
export const RecordEventsResponseSchema: GenMessage<RecordEventsResponse> = /*@__PURE__*/
  messageDesc(file_rill_admin_v1_telemetry, 1);

/**
 * @generated from service rill.admin.v1.TelemetryService
 */
export const TelemetryService: GenService<{
  /**
   * RecordEvents sends a batch of telemetry events.
   * The events must conform to the schema described in rill/runtime/pkg/activity/README.md.
   *
   * @generated from rpc rill.admin.v1.TelemetryService.RecordEvents
   */
  recordEvents: {
    methodKind: "unary";
    input: typeof RecordEventsRequestSchema;
    output: typeof RecordEventsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_rill_admin_v1_telemetry, 0);

