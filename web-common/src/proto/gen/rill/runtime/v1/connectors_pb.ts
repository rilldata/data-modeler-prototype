// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file rill/runtime/v1/connectors.proto (package rill.runtime.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message rill.runtime.v1.ListS3BucketsRequest
 */
export class ListS3BucketsRequest extends Message<ListS3BucketsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListS3BucketsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListS3BucketsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListS3BucketsRequest {
    return new ListS3BucketsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListS3BucketsRequest {
    return new ListS3BucketsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListS3BucketsRequest {
    return new ListS3BucketsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListS3BucketsRequest | PlainMessage<ListS3BucketsRequest> | undefined, b: ListS3BucketsRequest | PlainMessage<ListS3BucketsRequest> | undefined): boolean {
    return proto3.util.equals(ListS3BucketsRequest, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListS3BucketsResponse
 */
export class ListS3BucketsResponse extends Message<ListS3BucketsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: repeated string bucket_name = 2;
   */
  bucketName: string[] = [];

  constructor(data?: PartialMessage<ListS3BucketsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListS3BucketsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bucket_name", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListS3BucketsResponse {
    return new ListS3BucketsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListS3BucketsResponse {
    return new ListS3BucketsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListS3BucketsResponse {
    return new ListS3BucketsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListS3BucketsResponse | PlainMessage<ListS3BucketsResponse> | undefined, b: ListS3BucketsResponse | PlainMessage<ListS3BucketsResponse> | undefined): boolean {
    return proto3.util.equals(ListS3BucketsResponse, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListS3BucketObjectsRequest
 */
export class ListS3BucketObjectsRequest extends Message<ListS3BucketObjectsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * @generated from field: string bucket_name = 3;
   */
  bucketName = "";

  /**
   * @generated from field: string prefix = 4;
   */
  prefix = "";

  /**
   * @generated from field: string start_offset = 5;
   */
  startOffset = "";

  constructor(data?: PartialMessage<ListS3BucketObjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListS3BucketObjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bucket_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "start_offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListS3BucketObjectsRequest {
    return new ListS3BucketObjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListS3BucketObjectsRequest {
    return new ListS3BucketObjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListS3BucketObjectsRequest {
    return new ListS3BucketObjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListS3BucketObjectsRequest | PlainMessage<ListS3BucketObjectsRequest> | undefined, b: ListS3BucketObjectsRequest | PlainMessage<ListS3BucketObjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListS3BucketObjectsRequest, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListS3BucketObjectsResponse
 */
export class ListS3BucketObjectsResponse extends Message<ListS3BucketObjectsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: repeated rill.runtime.v1.S3Object objects = 2;
   */
  objects: S3Object[] = [];

  constructor(data?: PartialMessage<ListS3BucketObjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListS3BucketObjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "objects", kind: "message", T: S3Object, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListS3BucketObjectsResponse {
    return new ListS3BucketObjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListS3BucketObjectsResponse {
    return new ListS3BucketObjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListS3BucketObjectsResponse {
    return new ListS3BucketObjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListS3BucketObjectsResponse | PlainMessage<ListS3BucketObjectsResponse> | undefined, b: ListS3BucketObjectsResponse | PlainMessage<ListS3BucketObjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListS3BucketObjectsResponse, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListGCSBucketsRequest
 */
export class ListGCSBucketsRequest extends Message<ListGCSBucketsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListGCSBucketsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListGCSBucketsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGCSBucketsRequest {
    return new ListGCSBucketsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGCSBucketsRequest {
    return new ListGCSBucketsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGCSBucketsRequest {
    return new ListGCSBucketsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGCSBucketsRequest | PlainMessage<ListGCSBucketsRequest> | undefined, b: ListGCSBucketsRequest | PlainMessage<ListGCSBucketsRequest> | undefined): boolean {
    return proto3.util.equals(ListGCSBucketsRequest, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListGCSBucketsResponse
 */
export class ListGCSBucketsResponse extends Message<ListGCSBucketsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: repeated string bucket_name = 2;
   */
  bucketName: string[] = [];

  constructor(data?: PartialMessage<ListGCSBucketsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListGCSBucketsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bucket_name", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGCSBucketsResponse {
    return new ListGCSBucketsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGCSBucketsResponse {
    return new ListGCSBucketsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGCSBucketsResponse {
    return new ListGCSBucketsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGCSBucketsResponse | PlainMessage<ListGCSBucketsResponse> | undefined, b: ListGCSBucketsResponse | PlainMessage<ListGCSBucketsResponse> | undefined): boolean {
    return proto3.util.equals(ListGCSBucketsResponse, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListGCSBucketObjectsRequest
 */
export class ListGCSBucketObjectsRequest extends Message<ListGCSBucketObjectsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * @generated from field: string bucket_name = 3;
   */
  bucketName = "";

  /**
   * @generated from field: string prefix = 4;
   */
  prefix = "";

  /**
   * @generated from field: string start_offset = 5;
   */
  startOffset = "";

  constructor(data?: PartialMessage<ListGCSBucketObjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListGCSBucketObjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bucket_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "start_offset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGCSBucketObjectsRequest {
    return new ListGCSBucketObjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGCSBucketObjectsRequest {
    return new ListGCSBucketObjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGCSBucketObjectsRequest {
    return new ListGCSBucketObjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGCSBucketObjectsRequest | PlainMessage<ListGCSBucketObjectsRequest> | undefined, b: ListGCSBucketObjectsRequest | PlainMessage<ListGCSBucketObjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListGCSBucketObjectsRequest, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.ListGCSBucketObjectsResponse
 */
export class ListGCSBucketObjectsResponse extends Message<ListGCSBucketObjectsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: repeated rill.runtime.v1.GCSObject objects = 2;
   */
  objects: GCSObject[] = [];

  constructor(data?: PartialMessage<ListGCSBucketObjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.ListGCSBucketObjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "objects", kind: "message", T: GCSObject, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGCSBucketObjectsResponse {
    return new ListGCSBucketObjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGCSBucketObjectsResponse {
    return new ListGCSBucketObjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGCSBucketObjectsResponse {
    return new ListGCSBucketObjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGCSBucketObjectsResponse | PlainMessage<ListGCSBucketObjectsResponse> | undefined, b: ListGCSBucketObjectsResponse | PlainMessage<ListGCSBucketObjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListGCSBucketObjectsResponse, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.S3Object
 */
export class S3Object extends Message<S3Object> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Timestamp modified_on = 2;
   */
  modifiedOn?: Timestamp;

  /**
   * @generated from field: int64 size = 3;
   */
  size = protoInt64.zero;

  /**
   * @generated from field: bool is_dir = 4;
   */
  isDir = false;

  constructor(data?: PartialMessage<S3Object>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.S3Object";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "modified_on", kind: "message", T: Timestamp },
    { no: 3, name: "size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "is_dir", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): S3Object {
    return new S3Object().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): S3Object {
    return new S3Object().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): S3Object {
    return new S3Object().fromJsonString(jsonString, options);
  }

  static equals(a: S3Object | PlainMessage<S3Object> | undefined, b: S3Object | PlainMessage<S3Object> | undefined): boolean {
    return proto3.util.equals(S3Object, a, b);
  }
}

/**
 * @generated from message rill.runtime.v1.GCSObject
 */
export class GCSObject extends Message<GCSObject> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Timestamp modified_on = 2;
   */
  modifiedOn?: Timestamp;

  /**
   * @generated from field: int64 size = 3;
   */
  size = protoInt64.zero;

  /**
   * @generated from field: bool is_dir = 4;
   */
  isDir = false;

  constructor(data?: PartialMessage<GCSObject>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "rill.runtime.v1.GCSObject";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "modified_on", kind: "message", T: Timestamp },
    { no: 3, name: "size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "is_dir", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GCSObject {
    return new GCSObject().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GCSObject {
    return new GCSObject().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GCSObject {
    return new GCSObject().fromJsonString(jsonString, options);
  }

  static equals(a: GCSObject | PlainMessage<GCSObject> | undefined, b: GCSObject | PlainMessage<GCSObject> | undefined): boolean {
    return proto3.util.equals(GCSObject, a, b);
  }
}

