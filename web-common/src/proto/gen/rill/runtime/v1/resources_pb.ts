// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file rill/runtime/v1/resources.proto (package rill.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Color } from "./colors_pb";
import { file_rill_runtime_v1_colors } from "./colors_pb";
import type { ExportFormat } from "./export_format_pb";
import { file_rill_runtime_v1_export_format } from "./export_format_pb";
import type { Expression } from "./expression_pb";
import { file_rill_runtime_v1_expression } from "./expression_pb";
import type { StructType } from "./schema_pb";
import { file_rill_runtime_v1_schema } from "./schema_pb";
import type { TimeGrain } from "./time_grain_pb";
import { file_rill_runtime_v1_time_grain } from "./time_grain_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file rill/runtime/v1/resources.proto.
 */
export const file_rill_runtime_v1_resources: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_struct, file_google_protobuf_timestamp, file_rill_runtime_v1_colors, file_rill_runtime_v1_export_format, file_rill_runtime_v1_expression, file_rill_runtime_v1_schema, file_rill_runtime_v1_time_grain]);

/**
 * @generated from message rill.runtime.v1.Resource
 */
export type Resource = Message<"rill.runtime.v1.Resource"> & {
  /**
   * @generated from field: rill.runtime.v1.ResourceMeta meta = 1;
   */
  meta?: ResourceMeta;

  /**
   * @generated from oneof rill.runtime.v1.Resource.resource
   */
  resource: {
    /**
     * Well-known types only, for now. If required, we can add support for a google.protobuf.Any later.
     *
     * @generated from field: rill.runtime.v1.ProjectParser project_parser = 2;
     */
    value: ProjectParser;
    case: "projectParser";
  } | {
    /**
     * @generated from field: rill.runtime.v1.SourceV2 source = 3;
     */
    value: SourceV2;
    case: "source";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ModelV2 model = 4;
     */
    value: ModelV2;
    case: "model";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewV2 metrics_view = 5;
     */
    value: MetricsViewV2;
    case: "metricsView";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Migration migration = 9;
     */
    value: Migration;
    case: "migration";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Report report = 10;
     */
    value: Report;
    case: "report";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Alert alert = 12;
     */
    value: Alert;
    case: "alert";
  } | {
    /**
     * @generated from field: rill.runtime.v1.PullTrigger pull_trigger = 6;
     */
    value: PullTrigger;
    case: "pullTrigger";
  } | {
    /**
     * @generated from field: rill.runtime.v1.RefreshTrigger refresh_trigger = 7;
     */
    value: RefreshTrigger;
    case: "refreshTrigger";
  } | {
    /**
     * @generated from field: rill.runtime.v1.BucketPlanner bucket_planner = 8;
     */
    value: BucketPlanner;
    case: "bucketPlanner";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Theme theme = 11;
     */
    value: Theme;
    case: "theme";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Component component = 13;
     */
    value: Component;
    case: "component";
  } | {
    /**
     * @generated from field: rill.runtime.v1.Dashboard dashboard = 14;
     */
    value: Dashboard;
    case: "dashboard";
  } | {
    /**
     * @generated from field: rill.runtime.v1.API api = 15;
     */
    value: API;
    case: "api";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ConnectorV2 connector = 16;
     */
    value: ConnectorV2;
    case: "connector";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.Resource.
 * Use `create(ResourceSchema)` to create a new message.
 */
export const ResourceSchema: GenMessage<Resource> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 0);

/**
 * @generated from message rill.runtime.v1.ResourceMeta
 */
export type ResourceMeta = Message<"rill.runtime.v1.ResourceMeta"> & {
  /**
   * @generated from field: rill.runtime.v1.ResourceName name = 1;
   */
  name?: ResourceName;

  /**
   * @generated from field: repeated rill.runtime.v1.ResourceName refs = 2;
   */
  refs: ResourceName[];

  /**
   * @generated from field: optional rill.runtime.v1.ResourceName owner = 3;
   */
  owner?: ResourceName;

  /**
   * @generated from field: repeated string file_paths = 4;
   */
  filePaths: string[];

  /**
   * @generated from field: bool hidden = 7;
   */
  hidden: boolean;

  /**
   * @generated from field: int64 version = 15;
   */
  version: bigint;

  /**
   * @generated from field: int64 spec_version = 5;
   */
  specVersion: bigint;

  /**
   * @generated from field: int64 state_version = 6;
   */
  stateVersion: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp created_on = 9;
   */
  createdOn?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp spec_updated_on = 10;
   */
  specUpdatedOn?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp state_updated_on = 11;
   */
  stateUpdatedOn?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp deleted_on = 12;
   */
  deletedOn?: Timestamp;

  /**
   * @generated from field: rill.runtime.v1.ReconcileStatus reconcile_status = 16;
   */
  reconcileStatus: ReconcileStatus;

  /**
   * @generated from field: string reconcile_error = 8;
   */
  reconcileError: string;

  /**
   * @generated from field: google.protobuf.Timestamp reconcile_on = 17;
   */
  reconcileOn?: Timestamp;

  /**
   * @generated from field: optional rill.runtime.v1.ResourceName renamed_from = 13;
   */
  renamedFrom?: ResourceName;
};

/**
 * Describes the message rill.runtime.v1.ResourceMeta.
 * Use `create(ResourceMetaSchema)` to create a new message.
 */
export const ResourceMetaSchema: GenMessage<ResourceMeta> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 1);

/**
 * @generated from message rill.runtime.v1.ResourceName
 */
export type ResourceName = Message<"rill.runtime.v1.ResourceName"> & {
  /**
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message rill.runtime.v1.ResourceName.
 * Use `create(ResourceNameSchema)` to create a new message.
 */
export const ResourceNameSchema: GenMessage<ResourceName> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 2);

/**
 * @generated from message rill.runtime.v1.ProjectParser
 */
export type ProjectParser = Message<"rill.runtime.v1.ProjectParser"> & {
  /**
   * @generated from field: rill.runtime.v1.ProjectParserSpec spec = 1;
   */
  spec?: ProjectParserSpec;

  /**
   * @generated from field: rill.runtime.v1.ProjectParserState state = 2;
   */
  state?: ProjectParserState;
};

/**
 * Describes the message rill.runtime.v1.ProjectParser.
 * Use `create(ProjectParserSchema)` to create a new message.
 */
export const ProjectParserSchema: GenMessage<ProjectParser> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 3);

/**
 * @generated from message rill.runtime.v1.ProjectParserSpec
 */
export type ProjectParserSpec = Message<"rill.runtime.v1.ProjectParserSpec"> & {
};

/**
 * Describes the message rill.runtime.v1.ProjectParserSpec.
 * Use `create(ProjectParserSpecSchema)` to create a new message.
 */
export const ProjectParserSpecSchema: GenMessage<ProjectParserSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 4);

/**
 * @generated from message rill.runtime.v1.ProjectParserState
 */
export type ProjectParserState = Message<"rill.runtime.v1.ProjectParserState"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.ParseError parse_errors = 1;
   */
  parseErrors: ParseError[];

  /**
   * @generated from field: string current_commit_sha = 2;
   */
  currentCommitSha: string;

  /**
   * @generated from field: bool watching = 3;
   */
  watching: boolean;
};

/**
 * Describes the message rill.runtime.v1.ProjectParserState.
 * Use `create(ProjectParserStateSchema)` to create a new message.
 */
export const ProjectParserStateSchema: GenMessage<ProjectParserState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 5);

/**
 * @generated from message rill.runtime.v1.SourceV2
 */
export type SourceV2 = Message<"rill.runtime.v1.SourceV2"> & {
  /**
   * @generated from field: rill.runtime.v1.SourceSpec spec = 1;
   */
  spec?: SourceSpec;

  /**
   * @generated from field: rill.runtime.v1.SourceState state = 2;
   */
  state?: SourceState;
};

/**
 * Describes the message rill.runtime.v1.SourceV2.
 * Use `create(SourceV2Schema)` to create a new message.
 */
export const SourceV2Schema: GenMessage<SourceV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 6);

/**
 * @generated from message rill.runtime.v1.SourceSpec
 */
export type SourceSpec = Message<"rill.runtime.v1.SourceSpec"> & {
  /**
   * @generated from field: string source_connector = 1;
   */
  sourceConnector: string;

  /**
   * @generated from field: string sink_connector = 2;
   */
  sinkConnector: string;

  /**
   * @generated from field: google.protobuf.Struct properties = 3;
   */
  properties?: JsonObject;

  /**
   * @generated from field: rill.runtime.v1.Schedule refresh_schedule = 5;
   */
  refreshSchedule?: Schedule;

  /**
   * @generated from field: uint32 timeout_seconds = 6;
   */
  timeoutSeconds: number;

  /**
   * Fields not derived from code files
   *
   * @generated from field: bool stage_changes = 7;
   */
  stageChanges: boolean;

  /**
   * @generated from field: bool stream_ingestion = 8;
   */
  streamIngestion: boolean;

  /**
   * @generated from field: bool trigger = 9;
   */
  trigger: boolean;
};

/**
 * Describes the message rill.runtime.v1.SourceSpec.
 * Use `create(SourceSpecSchema)` to create a new message.
 */
export const SourceSpecSchema: GenMessage<SourceSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 7);

/**
 * @generated from message rill.runtime.v1.SourceState
 */
export type SourceState = Message<"rill.runtime.v1.SourceState"> & {
  /**
   * @generated from field: string connector = 1;
   */
  connector: string;

  /**
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * @generated from field: string spec_hash = 3;
   */
  specHash: string;

  /**
   * @generated from field: google.protobuf.Timestamp refreshed_on = 4;
   */
  refreshedOn?: Timestamp;
};

/**
 * Describes the message rill.runtime.v1.SourceState.
 * Use `create(SourceStateSchema)` to create a new message.
 */
export const SourceStateSchema: GenMessage<SourceState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 8);

/**
 * @generated from message rill.runtime.v1.ModelV2
 */
export type ModelV2 = Message<"rill.runtime.v1.ModelV2"> & {
  /**
   * @generated from field: rill.runtime.v1.ModelSpec spec = 1;
   */
  spec?: ModelSpec;

  /**
   * @generated from field: rill.runtime.v1.ModelState state = 2;
   */
  state?: ModelState;
};

/**
 * Describes the message rill.runtime.v1.ModelV2.
 * Use `create(ModelV2Schema)` to create a new message.
 */
export const ModelV2Schema: GenMessage<ModelV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 9);

/**
 * @generated from message rill.runtime.v1.ModelSpec
 */
export type ModelSpec = Message<"rill.runtime.v1.ModelSpec"> & {
  /**
   * @generated from field: rill.runtime.v1.Schedule refresh_schedule = 4;
   */
  refreshSchedule?: Schedule;

  /**
   * @generated from field: uint32 timeout_seconds = 5;
   */
  timeoutSeconds: number;

  /**
   * @generated from field: bool incremental = 13;
   */
  incremental: boolean;

  /**
   * @generated from field: string incremental_state_resolver = 14;
   */
  incrementalStateResolver: string;

  /**
   * @generated from field: google.protobuf.Struct incremental_state_resolver_properties = 15;
   */
  incrementalStateResolverProperties?: JsonObject;

  /**
   * @generated from field: string splits_resolver = 18;
   */
  splitsResolver: string;

  /**
   * @generated from field: google.protobuf.Struct splits_resolver_properties = 19;
   */
  splitsResolverProperties?: JsonObject;

  /**
   * @generated from field: string splits_watermark_field = 20;
   */
  splitsWatermarkField: string;

  /**
   * @generated from field: uint32 splits_concurrency_limit = 21;
   */
  splitsConcurrencyLimit: number;

  /**
   * @generated from field: string input_connector = 10;
   */
  inputConnector: string;

  /**
   * @generated from field: google.protobuf.Struct input_properties = 11;
   */
  inputProperties?: JsonObject;

  /**
   * stage_connector is optional.
   *
   * @generated from field: string stage_connector = 16;
   */
  stageConnector: string;

  /**
   * @generated from field: google.protobuf.Struct stage_properties = 17;
   */
  stageProperties?: JsonObject;

  /**
   * @generated from field: string output_connector = 1;
   */
  outputConnector: string;

  /**
   * @generated from field: google.protobuf.Struct output_properties = 12;
   */
  outputProperties?: JsonObject;

  /**
   * @generated from field: bool trigger = 9;
   */
  trigger: boolean;
};

/**
 * Describes the message rill.runtime.v1.ModelSpec.
 * Use `create(ModelSpecSchema)` to create a new message.
 */
export const ModelSpecSchema: GenMessage<ModelSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 10);

/**
 * @generated from message rill.runtime.v1.ModelState
 */
export type ModelState = Message<"rill.runtime.v1.ModelState"> & {
  /**
   * executor_connector is the ModelExecutor that produced the model's result.
   *
   * @generated from field: string executor_connector = 6;
   */
  executorConnector: string;

  /**
   * result_connector is the connector where the model's result is stored.
   *
   * @generated from field: string result_connector = 1;
   */
  resultConnector: string;

  /**
   * result_properties are returned by the executor and contains metadata about the result.
   *
   * @generated from field: google.protobuf.Struct result_properties = 5;
   */
  resultProperties?: JsonObject;

  /**
   * result_table contains the model's result table for SQL models. It is a convenience field that can also be derived from result_properties.
   *
   * @generated from field: string result_table = 2;
   */
  resultTable: string;

  /**
   * spec_hash is a hash of those parts of the spec that affect the model's result.
   *
   * @generated from field: string spec_hash = 3;
   */
  specHash: string;

  /**
   * refs_hash is a hash of the model's refs current state. It is used to determine if the model's refs have changed.
   *
   * @generated from field: string refs_hash = 9;
   */
  refsHash: string;

  /**
   * refreshed_on is the time the model was last executed.
   *
   * @generated from field: google.protobuf.Timestamp refreshed_on = 4;
   */
  refreshedOn?: Timestamp;

  /**
   * incremental_state contains the result of the most recent invocation of the model's incremental state resolver.
   *
   * @generated from field: google.protobuf.Struct incremental_state = 7;
   */
  incrementalState?: JsonObject;

  /**
   * incremental_state_schema contains a schema for the data in incremental_state.
   *
   * @generated from field: rill.runtime.v1.StructType incremental_state_schema = 8;
   */
  incrementalStateSchema?: StructType;

  /**
   * splits_model_id is a randomly generated ID used to store the model's splits in the CatalogStore.
   *
   * @generated from field: string splits_model_id = 10;
   */
  splitsModelId: string;

  /**
   * splits_have_errors is true if one or more splits failed to execute.
   *
   * @generated from field: bool splits_have_errors = 11;
   */
  splitsHaveErrors: boolean;
};

/**
 * Describes the message rill.runtime.v1.ModelState.
 * Use `create(ModelStateSchema)` to create a new message.
 */
export const ModelStateSchema: GenMessage<ModelState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 11);

/**
 * @generated from message rill.runtime.v1.MetricsViewV2
 */
export type MetricsViewV2 = Message<"rill.runtime.v1.MetricsViewV2"> & {
  /**
   * @generated from field: rill.runtime.v1.MetricsViewSpec spec = 1;
   */
  spec?: MetricsViewSpec;

  /**
   * @generated from field: rill.runtime.v1.MetricsViewState state = 2;
   */
  state?: MetricsViewState;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewV2.
 * Use `create(MetricsViewV2Schema)` to create a new message.
 */
export const MetricsViewV2Schema: GenMessage<MetricsViewV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 12);

/**
 * @generated from message rill.runtime.v1.MetricsViewSpec
 */
export type MetricsViewSpec = Message<"rill.runtime.v1.MetricsViewSpec"> & {
  /**
   * Connector containing the table
   *
   * @generated from field: string connector = 1;
   */
  connector: string;

  /**
   * Name of the database where table is located (optional)
   *
   * @generated from field: string database = 21;
   */
  database: string;

  /**
   * Name of the database schema where table is located (optional)
   *
   * @generated from field: string database_schema = 22;
   */
  databaseSchema: string;

  /**
   * Name of the table the metrics view is based on
   *
   * @generated from field: string table = 2;
   */
  table: string;

  /**
   * User friendly label for the dashboard
   *
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * Description of the dashboard
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * Name of the primary time dimension, used for rendering time series
   *
   * @generated from field: string time_dimension = 5;
   */
  timeDimension: string;

  /**
   * Expression to evaluate a watermark for the metrics view. If not set, the watermark defaults to max(time_dimension).
   *
   * @generated from field: string watermark_expression = 20;
   */
  watermarkExpression: string;

  /**
   * Dimensions in the metrics view
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.DimensionV2 dimensions = 6;
   */
  dimensions: MetricsViewSpec_DimensionV2[];

  /**
   * List of selected dimensions by defaults
   *
   * @generated from field: repeated string default_dimensions = 18;
   */
  defaultDimensions: string[];

  /**
   * Measures in the metrics view
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.MeasureV2 measures = 7;
   */
  measures: MetricsViewSpec_MeasureV2[];

  /**
   * List of selected measures by defaults
   *
   * @generated from field: repeated string default_measures = 19;
   */
  defaultMeasures: string[];

  /**
   * Smallest time grain to show in the dashboard
   *
   * @generated from field: rill.runtime.v1.TimeGrain smallest_time_grain = 8;
   */
  smallestTimeGrain: TimeGrain;

  /**
   * Default time range for the dashboard. It should be a valid ISO 8601 duration string.
   *
   * @generated from field: string default_time_range = 9;
   */
  defaultTimeRange: string;

  /**
   * Available time zones list preferred time zones using IANA location identifiers
   *
   * @generated from field: repeated string available_time_zones = 10;
   */
  availableTimeZones: string[];

  /**
   * Security for the dashboard
   *
   * @generated from field: repeated rill.runtime.v1.SecurityRule security_rules = 23;
   */
  securityRules: SecurityRule[];

  /**
   * ISO 8601 weekday number to use as the base for time aggregations by week. Defaults to 1 (Monday).
   *
   * @generated from field: uint32 first_day_of_week = 12;
   */
  firstDayOfWeek: number;

  /**
   * Month number to use as the base for time aggregations by year. Defaults to 1 (January).
   *
   * @generated from field: uint32 first_month_of_year = 13;
   */
  firstMonthOfYear: number;

  /**
   * Selected default comparison mode.
   *
   * @generated from field: rill.runtime.v1.MetricsViewSpec.ComparisonMode default_comparison_mode = 14;
   */
  defaultComparisonMode: MetricsViewSpec_ComparisonMode;

  /**
   * If comparison mode is dimension then this determines which is the default dimension
   *
   * @generated from field: string default_comparison_dimension = 15;
   */
  defaultComparisonDimension: string;

  /**
   * List of available time ranges with comparison ranges that would replace the default list.
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.AvailableTimeRange available_time_ranges = 16;
   */
  availableTimeRanges: MetricsViewSpec_AvailableTimeRange[];

  /**
   * Default theme to apply
   *
   * @generated from field: string default_theme = 17;
   */
  defaultTheme: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.
 * Use `create(MetricsViewSpecSchema)` to create a new message.
 */
export const MetricsViewSpecSchema: GenMessage<MetricsViewSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13);

/**
 * Dimensions are columns to filter and group by
 *
 * @generated from message rill.runtime.v1.MetricsViewSpec.DimensionV2
 */
export type MetricsViewSpec_DimensionV2 = Message<"rill.runtime.v1.MetricsViewSpec.DimensionV2"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string column = 2;
   */
  column: string;

  /**
   * @generated from field: string expression = 6;
   */
  expression: string;

  /**
   * @generated from field: string label = 3;
   */
  label: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: bool unnest = 5;
   */
  unnest: boolean;

  /**
   * @generated from field: string uri = 7;
   */
  uri: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.DimensionV2.
 * Use `create(MetricsViewSpec_DimensionV2Schema)` to create a new message.
 */
export const MetricsViewSpec_DimensionV2Schema: GenMessage<MetricsViewSpec_DimensionV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 0);

/**
 * Selector for a dimension
 *
 * @generated from message rill.runtime.v1.MetricsViewSpec.DimensionSelector
 */
export type MetricsViewSpec_DimensionSelector = Message<"rill.runtime.v1.MetricsViewSpec.DimensionSelector"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Only for time dimensions (optional)
   *
   * @generated from field: rill.runtime.v1.TimeGrain time_grain = 2;
   */
  timeGrain: TimeGrain;

  /**
   * Only for when ordering (optional)
   *
   * @generated from field: bool desc = 3;
   */
  desc: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.DimensionSelector.
 * Use `create(MetricsViewSpec_DimensionSelectorSchema)` to create a new message.
 */
export const MetricsViewSpec_DimensionSelectorSchema: GenMessage<MetricsViewSpec_DimensionSelector> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 1);

/**
 * Window to apply to the measure calculation
 *
 * @generated from message rill.runtime.v1.MetricsViewSpec.MeasureWindow
 */
export type MetricsViewSpec_MeasureWindow = Message<"rill.runtime.v1.MetricsViewSpec.MeasureWindow"> & {
  /**
   * If true, partitions the window by all present dimensions except those in order_by
   *
   * @generated from field: bool partition = 1;
   */
  partition: boolean;

  /**
   * Dimensions to order the window by. Must be present in required_dimensions.
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.DimensionSelector order_by = 3;
   */
  orderBy: MetricsViewSpec_DimensionSelector[];

  /**
   * Raw SQL expression to use as the frame (starting with "ROWS ...")
   *
   * @generated from field: string frame_expression = 2;
   */
  frameExpression: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.MeasureWindow.
 * Use `create(MetricsViewSpec_MeasureWindowSchema)` to create a new message.
 */
export const MetricsViewSpec_MeasureWindowSchema: GenMessage<MetricsViewSpec_MeasureWindow> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 2);

/**
 * Measures are aggregated computed values
 *
 * @generated from message rill.runtime.v1.MetricsViewSpec.MeasureV2
 */
export type MetricsViewSpec_MeasureV2 = Message<"rill.runtime.v1.MetricsViewSpec.MeasureV2"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string expression = 2;
   */
  expression: string;

  /**
   * @generated from field: rill.runtime.v1.MetricsViewSpec.MeasureType type = 8;
   */
  type: MetricsViewSpec_MeasureType;

  /**
   * @generated from field: rill.runtime.v1.MetricsViewSpec.MeasureWindow window = 9;
   */
  window?: MetricsViewSpec_MeasureWindow;

  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.DimensionSelector per_dimensions = 10;
   */
  perDimensions: MetricsViewSpec_DimensionSelector[];

  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.DimensionSelector required_dimensions = 11;
   */
  requiredDimensions: MetricsViewSpec_DimensionSelector[];

  /**
   * @generated from field: repeated string referenced_measures = 12;
   */
  referencedMeasures: string[];

  /**
   * @generated from field: string label = 3;
   */
  label: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string format_preset = 5;
   */
  formatPreset: string;

  /**
   * @generated from field: string format_d3 = 7;
   */
  formatD3: string;

  /**
   * @generated from field: bool valid_percent_of_total = 6;
   */
  validPercentOfTotal: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.MeasureV2.
 * Use `create(MetricsViewSpec_MeasureV2Schema)` to create a new message.
 */
export const MetricsViewSpec_MeasureV2Schema: GenMessage<MetricsViewSpec_MeasureV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 3);

/**
 * @generated from message rill.runtime.v1.MetricsViewSpec.AvailableComparisonOffset
 */
export type MetricsViewSpec_AvailableComparisonOffset = Message<"rill.runtime.v1.MetricsViewSpec.AvailableComparisonOffset"> & {
  /**
   * @generated from field: string offset = 1;
   */
  offset: string;

  /**
   * Used to override the range for the comparison with something other than the selected range.
   *
   * @generated from field: string range = 2;
   */
  range: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.AvailableComparisonOffset.
 * Use `create(MetricsViewSpec_AvailableComparisonOffsetSchema)` to create a new message.
 */
export const MetricsViewSpec_AvailableComparisonOffsetSchema: GenMessage<MetricsViewSpec_AvailableComparisonOffset> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 4);

/**
 * @generated from message rill.runtime.v1.MetricsViewSpec.AvailableTimeRange
 */
export type MetricsViewSpec_AvailableTimeRange = Message<"rill.runtime.v1.MetricsViewSpec.AvailableTimeRange"> & {
  /**
   * @generated from field: string range = 1;
   */
  range: string;

  /**
   * Available comparison offsets for this time range.
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSpec.AvailableComparisonOffset comparison_offsets = 2;
   */
  comparisonOffsets: MetricsViewSpec_AvailableComparisonOffset[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSpec.AvailableTimeRange.
 * Use `create(MetricsViewSpec_AvailableTimeRangeSchema)` to create a new message.
 */
export const MetricsViewSpec_AvailableTimeRangeSchema: GenMessage<MetricsViewSpec_AvailableTimeRange> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 13, 5);

/**
 * Type of measure query to generate
 *
 * @generated from enum rill.runtime.v1.MetricsViewSpec.MeasureType
 */
export enum MetricsViewSpec_MeasureType {
  /**
   * @generated from enum value: MEASURE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEASURE_TYPE_SIMPLE = 1;
   */
  SIMPLE = 1,

  /**
   * @generated from enum value: MEASURE_TYPE_DERIVED = 2;
   */
  DERIVED = 2,

  /**
   * @generated from enum value: MEASURE_TYPE_TIME_COMPARISON = 3;
   */
  TIME_COMPARISON = 3,
}

/**
 * Describes the enum rill.runtime.v1.MetricsViewSpec.MeasureType.
 */
export const MetricsViewSpec_MeasureTypeSchema: GenEnum<MetricsViewSpec_MeasureType> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_resources, 13, 0);

/**
 * @generated from enum rill.runtime.v1.MetricsViewSpec.ComparisonMode
 */
export enum MetricsViewSpec_ComparisonMode {
  /**
   * @generated from enum value: COMPARISON_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COMPARISON_MODE_NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: COMPARISON_MODE_TIME = 2;
   */
  TIME = 2,

  /**
   * @generated from enum value: COMPARISON_MODE_DIMENSION = 3;
   */
  DIMENSION = 3,
}

/**
 * Describes the enum rill.runtime.v1.MetricsViewSpec.ComparisonMode.
 */
export const MetricsViewSpec_ComparisonModeSchema: GenEnum<MetricsViewSpec_ComparisonMode> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_resources, 13, 1);

/**
 * @generated from message rill.runtime.v1.SecurityRule
 */
export type SecurityRule = Message<"rill.runtime.v1.SecurityRule"> & {
  /**
   * @generated from oneof rill.runtime.v1.SecurityRule.rule
   */
  rule: {
    /**
     * @generated from field: rill.runtime.v1.SecurityRuleAccess access = 1;
     */
    value: SecurityRuleAccess;
    case: "access";
  } | {
    /**
     * @generated from field: rill.runtime.v1.SecurityRuleFieldAccess field_access = 2;
     */
    value: SecurityRuleFieldAccess;
    case: "fieldAccess";
  } | {
    /**
     * @generated from field: rill.runtime.v1.SecurityRuleRowFilter row_filter = 3;
     */
    value: SecurityRuleRowFilter;
    case: "rowFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.SecurityRule.
 * Use `create(SecurityRuleSchema)` to create a new message.
 */
export const SecurityRuleSchema: GenMessage<SecurityRule> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 14);

/**
 * @generated from message rill.runtime.v1.SecurityRuleAccess
 */
export type SecurityRuleAccess = Message<"rill.runtime.v1.SecurityRuleAccess"> & {
  /**
   * @generated from field: string condition = 1;
   */
  condition: string;

  /**
   * @generated from field: bool allow = 2;
   */
  allow: boolean;
};

/**
 * Describes the message rill.runtime.v1.SecurityRuleAccess.
 * Use `create(SecurityRuleAccessSchema)` to create a new message.
 */
export const SecurityRuleAccessSchema: GenMessage<SecurityRuleAccess> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 15);

/**
 * @generated from message rill.runtime.v1.SecurityRuleFieldAccess
 */
export type SecurityRuleFieldAccess = Message<"rill.runtime.v1.SecurityRuleFieldAccess"> & {
  /**
   * @generated from field: string condition = 1;
   */
  condition: string;

  /**
   * @generated from field: bool allow = 2;
   */
  allow: boolean;

  /**
   * @generated from field: repeated string fields = 3;
   */
  fields: string[];

  /**
   * @generated from field: bool all_fields = 4;
   */
  allFields: boolean;
};

/**
 * Describes the message rill.runtime.v1.SecurityRuleFieldAccess.
 * Use `create(SecurityRuleFieldAccessSchema)` to create a new message.
 */
export const SecurityRuleFieldAccessSchema: GenMessage<SecurityRuleFieldAccess> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 16);

/**
 * @generated from message rill.runtime.v1.SecurityRuleRowFilter
 */
export type SecurityRuleRowFilter = Message<"rill.runtime.v1.SecurityRuleRowFilter"> & {
  /**
   * @generated from field: string condition = 1;
   */
  condition: string;

  /**
   * Raw SQL expression to apply to the underlying table
   *
   * @generated from field: string sql = 2;
   */
  sql: string;

  /**
   * Regular query expression referencing dimension names
   *
   * @generated from field: rill.runtime.v1.Expression expression = 3;
   */
  expression?: Expression;
};

/**
 * Describes the message rill.runtime.v1.SecurityRuleRowFilter.
 * Use `create(SecurityRuleRowFilterSchema)` to create a new message.
 */
export const SecurityRuleRowFilterSchema: GenMessage<SecurityRuleRowFilter> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 17);

/**
 * @generated from message rill.runtime.v1.MetricsViewState
 */
export type MetricsViewState = Message<"rill.runtime.v1.MetricsViewState"> & {
  /**
   * Valid spec is a (potentially previous) version of the spec that is known to currently be valid.
   *
   * @generated from field: rill.runtime.v1.MetricsViewSpec valid_spec = 1;
   */
  validSpec?: MetricsViewSpec;

  /**
   * Streaming is true if the underlying data may change without the metrics view's spec/state version changing.
   * It's set to true if the metrics view is based on an externally managed table.
   *
   * @generated from field: bool streaming = 2;
   */
  streaming: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewState.
 * Use `create(MetricsViewStateSchema)` to create a new message.
 */
export const MetricsViewStateSchema: GenMessage<MetricsViewState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 18);

/**
 * @generated from message rill.runtime.v1.Migration
 */
export type Migration = Message<"rill.runtime.v1.Migration"> & {
  /**
   * @generated from field: rill.runtime.v1.MigrationSpec spec = 1;
   */
  spec?: MigrationSpec;

  /**
   * @generated from field: rill.runtime.v1.MigrationState state = 2;
   */
  state?: MigrationState;
};

/**
 * Describes the message rill.runtime.v1.Migration.
 * Use `create(MigrationSchema)` to create a new message.
 */
export const MigrationSchema: GenMessage<Migration> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 19);

/**
 * @generated from message rill.runtime.v1.MigrationSpec
 */
export type MigrationSpec = Message<"rill.runtime.v1.MigrationSpec"> & {
  /**
   * @generated from field: string connector = 1;
   */
  connector: string;

  /**
   * @generated from field: string sql = 2;
   */
  sql: string;

  /**
   * @generated from field: uint32 version = 3;
   */
  version: number;
};

/**
 * Describes the message rill.runtime.v1.MigrationSpec.
 * Use `create(MigrationSpecSchema)` to create a new message.
 */
export const MigrationSpecSchema: GenMessage<MigrationSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 20);

/**
 * @generated from message rill.runtime.v1.MigrationState
 */
export type MigrationState = Message<"rill.runtime.v1.MigrationState"> & {
  /**
   * @generated from field: uint32 version = 1;
   */
  version: number;
};

/**
 * Describes the message rill.runtime.v1.MigrationState.
 * Use `create(MigrationStateSchema)` to create a new message.
 */
export const MigrationStateSchema: GenMessage<MigrationState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 21);

/**
 * @generated from message rill.runtime.v1.Report
 */
export type Report = Message<"rill.runtime.v1.Report"> & {
  /**
   * @generated from field: rill.runtime.v1.ReportSpec spec = 1;
   */
  spec?: ReportSpec;

  /**
   * @generated from field: rill.runtime.v1.ReportState state = 2;
   */
  state?: ReportState;
};

/**
 * Describes the message rill.runtime.v1.Report.
 * Use `create(ReportSchema)` to create a new message.
 */
export const ReportSchema: GenMessage<Report> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 22);

/**
 * @generated from message rill.runtime.v1.ReportSpec
 */
export type ReportSpec = Message<"rill.runtime.v1.ReportSpec"> & {
  /**
   * @generated from field: bool trigger = 1;
   */
  trigger: boolean;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: rill.runtime.v1.Schedule refresh_schedule = 3;
   */
  refreshSchedule?: Schedule;

  /**
   * @generated from field: uint32 timeout_seconds = 4;
   */
  timeoutSeconds: number;

  /**
   * @generated from field: string query_name = 5;
   */
  queryName: string;

  /**
   * @generated from field: string query_args_json = 6;
   */
  queryArgsJson: string;

  /**
   * @generated from field: uint64 export_limit = 7;
   */
  exportLimit: bigint;

  /**
   * @generated from field: rill.runtime.v1.ExportFormat export_format = 8;
   */
  exportFormat: ExportFormat;

  /**
   * @generated from field: repeated rill.runtime.v1.Notifier notifiers = 11;
   */
  notifiers: Notifier[];

  /**
   * @generated from field: map<string, string> annotations = 10;
   */
  annotations: { [key: string]: string };

  /**
   * If true, will use the lowest watermark of its refs instead of the trigger time.
   *
   * @generated from field: bool watermark_inherit = 12;
   */
  watermarkInherit: boolean;

  /**
   * @generated from field: string intervals_iso_duration = 13;
   */
  intervalsIsoDuration: string;

  /**
   * @generated from field: int32 intervals_limit = 14;
   */
  intervalsLimit: number;

  /**
   * @generated from field: bool intervals_check_unclosed = 15;
   */
  intervalsCheckUnclosed: boolean;
};

/**
 * Describes the message rill.runtime.v1.ReportSpec.
 * Use `create(ReportSpecSchema)` to create a new message.
 */
export const ReportSpecSchema: GenMessage<ReportSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 23);

/**
 * @generated from message rill.runtime.v1.ReportState
 */
export type ReportState = Message<"rill.runtime.v1.ReportState"> & {
  /**
   * @generated from field: google.protobuf.Timestamp next_run_on = 1;
   */
  nextRunOn?: Timestamp;

  /**
   * @generated from field: rill.runtime.v1.ReportExecution current_execution = 2;
   */
  currentExecution?: ReportExecution;

  /**
   * @generated from field: repeated rill.runtime.v1.ReportExecution execution_history = 3;
   */
  executionHistory: ReportExecution[];

  /**
   * @generated from field: uint32 execution_count = 4;
   */
  executionCount: number;
};

/**
 * Describes the message rill.runtime.v1.ReportState.
 * Use `create(ReportStateSchema)` to create a new message.
 */
export const ReportStateSchema: GenMessage<ReportState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 24);

/**
 * @generated from message rill.runtime.v1.ReportExecution
 */
export type ReportExecution = Message<"rill.runtime.v1.ReportExecution"> & {
  /**
   * @generated from field: bool adhoc = 1;
   */
  adhoc: boolean;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: google.protobuf.Timestamp report_time = 3;
   */
  reportTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp started_on = 4;
   */
  startedOn?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp finished_on = 5;
   */
  finishedOn?: Timestamp;
};

/**
 * Describes the message rill.runtime.v1.ReportExecution.
 * Use `create(ReportExecutionSchema)` to create a new message.
 */
export const ReportExecutionSchema: GenMessage<ReportExecution> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 25);

/**
 * @generated from message rill.runtime.v1.Alert
 */
export type Alert = Message<"rill.runtime.v1.Alert"> & {
  /**
   * @generated from field: rill.runtime.v1.AlertSpec spec = 1;
   */
  spec?: AlertSpec;

  /**
   * @generated from field: rill.runtime.v1.AlertState state = 2;
   */
  state?: AlertState;
};

/**
 * Describes the message rill.runtime.v1.Alert.
 * Use `create(AlertSchema)` to create a new message.
 */
export const AlertSchema: GenMessage<Alert> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 26);

/**
 * @generated from message rill.runtime.v1.AlertSpec
 */
export type AlertSpec = Message<"rill.runtime.v1.AlertSpec"> & {
  /**
   * @generated from field: bool trigger = 1;
   */
  trigger: boolean;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: rill.runtime.v1.Schedule refresh_schedule = 3;
   */
  refreshSchedule?: Schedule;

  /**
   * If true, will use the lowest watermark of its refs instead of the trigger time.
   *
   * @generated from field: bool watermark_inherit = 4;
   */
  watermarkInherit: boolean;

  /**
   * @generated from field: string intervals_iso_duration = 5;
   */
  intervalsIsoDuration: string;

  /**
   * @generated from field: int32 intervals_limit = 6;
   */
  intervalsLimit: number;

  /**
   * @generated from field: bool intervals_check_unclosed = 7;
   */
  intervalsCheckUnclosed: boolean;

  /**
   * @generated from field: uint32 timeout_seconds = 8;
   */
  timeoutSeconds: number;

  /**
   * for alerts that have not been edited since resolver and resolver_properties have been added
   *
   * @generated from field: string query_name = 9;
   */
  queryName: string;

  /**
   * @generated from field: string query_args_json = 10;
   */
  queryArgsJson: string;

  /**
   * @generated from field: string resolver = 22;
   */
  resolver: string;

  /**
   * @generated from field: google.protobuf.Struct resolver_properties = 23;
   */
  resolverProperties?: JsonObject;

  /**
   * @generated from oneof rill.runtime.v1.AlertSpec.query_for
   */
  queryFor: {
    /**
     * @generated from field: string query_for_user_id = 11;
     */
    value: string;
    case: "queryForUserId";
  } | {
    /**
     * @generated from field: string query_for_user_email = 12;
     */
    value: string;
    case: "queryForUserEmail";
  } | {
    /**
     * @generated from field: google.protobuf.Struct query_for_attributes = 13;
     */
    value: JsonObject;
    case: "queryForAttributes";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool notify_on_recover = 15;
   */
  notifyOnRecover: boolean;

  /**
   * @generated from field: bool notify_on_fail = 16;
   */
  notifyOnFail: boolean;

  /**
   * @generated from field: bool notify_on_error = 17;
   */
  notifyOnError: boolean;

  /**
   * @generated from field: bool renotify = 18;
   */
  renotify: boolean;

  /**
   * @generated from field: uint32 renotify_after_seconds = 19;
   */
  renotifyAfterSeconds: number;

  /**
   * @generated from field: repeated rill.runtime.v1.Notifier notifiers = 21;
   */
  notifiers: Notifier[];

  /**
   * @generated from field: map<string, string> annotations = 20;
   */
  annotations: { [key: string]: string };
};

/**
 * Describes the message rill.runtime.v1.AlertSpec.
 * Use `create(AlertSpecSchema)` to create a new message.
 */
export const AlertSpecSchema: GenMessage<AlertSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 27);

/**
 * @generated from message rill.runtime.v1.Notifier
 */
export type Notifier = Message<"rill.runtime.v1.Notifier"> & {
  /**
   * @generated from field: string connector = 1;
   */
  connector: string;

  /**
   * @generated from field: google.protobuf.Struct properties = 2;
   */
  properties?: JsonObject;
};

/**
 * Describes the message rill.runtime.v1.Notifier.
 * Use `create(NotifierSchema)` to create a new message.
 */
export const NotifierSchema: GenMessage<Notifier> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 28);

/**
 * @generated from message rill.runtime.v1.AlertState
 */
export type AlertState = Message<"rill.runtime.v1.AlertState"> & {
  /**
   * @generated from field: string spec_hash = 1;
   */
  specHash: string;

  /**
   * @generated from field: string refs_hash = 2;
   */
  refsHash: string;

  /**
   * @generated from field: google.protobuf.Timestamp next_run_on = 3;
   */
  nextRunOn?: Timestamp;

  /**
   * @generated from field: rill.runtime.v1.AlertExecution current_execution = 4;
   */
  currentExecution?: AlertExecution;

  /**
   * @generated from field: repeated rill.runtime.v1.AlertExecution execution_history = 5;
   */
  executionHistory: AlertExecution[];

  /**
   * @generated from field: uint32 execution_count = 6;
   */
  executionCount: number;
};

/**
 * Describes the message rill.runtime.v1.AlertState.
 * Use `create(AlertStateSchema)` to create a new message.
 */
export const AlertStateSchema: GenMessage<AlertState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 29);

/**
 * @generated from message rill.runtime.v1.AlertExecution
 */
export type AlertExecution = Message<"rill.runtime.v1.AlertExecution"> & {
  /**
   * @generated from field: bool adhoc = 1;
   */
  adhoc: boolean;

  /**
   * @generated from field: rill.runtime.v1.AssertionResult result = 2;
   */
  result?: AssertionResult;

  /**
   * @generated from field: bool sent_notifications = 3;
   */
  sentNotifications: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp execution_time = 4;
   */
  executionTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp started_on = 5;
   */
  startedOn?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp finished_on = 6;
   */
  finishedOn?: Timestamp;
};

/**
 * Describes the message rill.runtime.v1.AlertExecution.
 * Use `create(AlertExecutionSchema)` to create a new message.
 */
export const AlertExecutionSchema: GenMessage<AlertExecution> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 30);

/**
 * @generated from message rill.runtime.v1.AssertionResult
 */
export type AssertionResult = Message<"rill.runtime.v1.AssertionResult"> & {
  /**
   * @generated from field: rill.runtime.v1.AssertionStatus status = 1;
   */
  status: AssertionStatus;

  /**
   * @generated from field: google.protobuf.Struct fail_row = 2;
   */
  failRow?: JsonObject;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message rill.runtime.v1.AssertionResult.
 * Use `create(AssertionResultSchema)` to create a new message.
 */
export const AssertionResultSchema: GenMessage<AssertionResult> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 31);

/**
 * @generated from message rill.runtime.v1.PullTrigger
 */
export type PullTrigger = Message<"rill.runtime.v1.PullTrigger"> & {
  /**
   * @generated from field: rill.runtime.v1.PullTriggerSpec spec = 1;
   */
  spec?: PullTriggerSpec;

  /**
   * @generated from field: rill.runtime.v1.PullTriggerState state = 2;
   */
  state?: PullTriggerState;
};

/**
 * Describes the message rill.runtime.v1.PullTrigger.
 * Use `create(PullTriggerSchema)` to create a new message.
 */
export const PullTriggerSchema: GenMessage<PullTrigger> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 32);

/**
 * @generated from message rill.runtime.v1.PullTriggerSpec
 */
export type PullTriggerSpec = Message<"rill.runtime.v1.PullTriggerSpec"> & {
};

/**
 * Describes the message rill.runtime.v1.PullTriggerSpec.
 * Use `create(PullTriggerSpecSchema)` to create a new message.
 */
export const PullTriggerSpecSchema: GenMessage<PullTriggerSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 33);

/**
 * @generated from message rill.runtime.v1.PullTriggerState
 */
export type PullTriggerState = Message<"rill.runtime.v1.PullTriggerState"> & {
};

/**
 * Describes the message rill.runtime.v1.PullTriggerState.
 * Use `create(PullTriggerStateSchema)` to create a new message.
 */
export const PullTriggerStateSchema: GenMessage<PullTriggerState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 34);

/**
 * @generated from message rill.runtime.v1.RefreshTrigger
 */
export type RefreshTrigger = Message<"rill.runtime.v1.RefreshTrigger"> & {
  /**
   * @generated from field: rill.runtime.v1.RefreshTriggerSpec spec = 1;
   */
  spec?: RefreshTriggerSpec;

  /**
   * @generated from field: rill.runtime.v1.RefreshTriggerState state = 2;
   */
  state?: RefreshTriggerState;
};

/**
 * Describes the message rill.runtime.v1.RefreshTrigger.
 * Use `create(RefreshTriggerSchema)` to create a new message.
 */
export const RefreshTriggerSchema: GenMessage<RefreshTrigger> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 35);

/**
 * @generated from message rill.runtime.v1.RefreshTriggerSpec
 */
export type RefreshTriggerSpec = Message<"rill.runtime.v1.RefreshTriggerSpec"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.ResourceName only_names = 1;
   */
  onlyNames: ResourceName[];
};

/**
 * Describes the message rill.runtime.v1.RefreshTriggerSpec.
 * Use `create(RefreshTriggerSpecSchema)` to create a new message.
 */
export const RefreshTriggerSpecSchema: GenMessage<RefreshTriggerSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 36);

/**
 * @generated from message rill.runtime.v1.RefreshTriggerState
 */
export type RefreshTriggerState = Message<"rill.runtime.v1.RefreshTriggerState"> & {
};

/**
 * Describes the message rill.runtime.v1.RefreshTriggerState.
 * Use `create(RefreshTriggerStateSchema)` to create a new message.
 */
export const RefreshTriggerStateSchema: GenMessage<RefreshTriggerState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 37);

/**
 * @generated from message rill.runtime.v1.BucketPlanner
 */
export type BucketPlanner = Message<"rill.runtime.v1.BucketPlanner"> & {
  /**
   * @generated from field: rill.runtime.v1.BucketPlannerSpec spec = 1;
   */
  spec?: BucketPlannerSpec;

  /**
   * @generated from field: rill.runtime.v1.BucketPlannerState state = 2;
   */
  state?: BucketPlannerState;
};

/**
 * Describes the message rill.runtime.v1.BucketPlanner.
 * Use `create(BucketPlannerSchema)` to create a new message.
 */
export const BucketPlannerSchema: GenMessage<BucketPlanner> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 38);

/**
 * @generated from message rill.runtime.v1.BucketPlannerSpec
 */
export type BucketPlannerSpec = Message<"rill.runtime.v1.BucketPlannerSpec"> & {
  /**
   * @generated from field: rill.runtime.v1.BucketExtractPolicy extract_policy = 1;
   */
  extractPolicy?: BucketExtractPolicy;
};

/**
 * Describes the message rill.runtime.v1.BucketPlannerSpec.
 * Use `create(BucketPlannerSpecSchema)` to create a new message.
 */
export const BucketPlannerSpecSchema: GenMessage<BucketPlannerSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 39);

/**
 * @generated from message rill.runtime.v1.BucketPlannerState
 */
export type BucketPlannerState = Message<"rill.runtime.v1.BucketPlannerState"> & {
  /**
   * @generated from field: string region = 1;
   */
  region: string;
};

/**
 * Describes the message rill.runtime.v1.BucketPlannerState.
 * Use `create(BucketPlannerStateSchema)` to create a new message.
 */
export const BucketPlannerStateSchema: GenMessage<BucketPlannerState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 40);

/**
 * @generated from message rill.runtime.v1.BucketExtractPolicy
 */
export type BucketExtractPolicy = Message<"rill.runtime.v1.BucketExtractPolicy"> & {
  /**
   * @generated from field: rill.runtime.v1.BucketExtractPolicy.Strategy rows_strategy = 1;
   */
  rowsStrategy: BucketExtractPolicy_Strategy;

  /**
   * @generated from field: uint64 rows_limit_bytes = 2;
   */
  rowsLimitBytes: bigint;

  /**
   * @generated from field: rill.runtime.v1.BucketExtractPolicy.Strategy files_strategy = 3;
   */
  filesStrategy: BucketExtractPolicy_Strategy;

  /**
   * @generated from field: uint64 files_limit = 4;
   */
  filesLimit: bigint;
};

/**
 * Describes the message rill.runtime.v1.BucketExtractPolicy.
 * Use `create(BucketExtractPolicySchema)` to create a new message.
 */
export const BucketExtractPolicySchema: GenMessage<BucketExtractPolicy> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 41);

/**
 * @generated from enum rill.runtime.v1.BucketExtractPolicy.Strategy
 */
export enum BucketExtractPolicy_Strategy {
  /**
   * @generated from enum value: STRATEGY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STRATEGY_HEAD = 1;
   */
  HEAD = 1,

  /**
   * @generated from enum value: STRATEGY_TAIL = 2;
   */
  TAIL = 2,
}

/**
 * Describes the enum rill.runtime.v1.BucketExtractPolicy.Strategy.
 */
export const BucketExtractPolicy_StrategySchema: GenEnum<BucketExtractPolicy_Strategy> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_resources, 41, 0);

/**
 * @generated from message rill.runtime.v1.Theme
 */
export type Theme = Message<"rill.runtime.v1.Theme"> & {
  /**
   * @generated from field: rill.runtime.v1.ThemeSpec spec = 1;
   */
  spec?: ThemeSpec;

  /**
   * @generated from field: rill.runtime.v1.ThemeState state = 2;
   */
  state?: ThemeState;
};

/**
 * Describes the message rill.runtime.v1.Theme.
 * Use `create(ThemeSchema)` to create a new message.
 */
export const ThemeSchema: GenMessage<Theme> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 42);

/**
 * @generated from message rill.runtime.v1.ThemeSpec
 */
export type ThemeSpec = Message<"rill.runtime.v1.ThemeSpec"> & {
  /**
   * @generated from field: optional rill.runtime.v1.Color primary_color = 1;
   */
  primaryColor?: Color;

  /**
   * @generated from field: optional rill.runtime.v1.Color secondary_color = 2;
   */
  secondaryColor?: Color;
};

/**
 * Describes the message rill.runtime.v1.ThemeSpec.
 * Use `create(ThemeSpecSchema)` to create a new message.
 */
export const ThemeSpecSchema: GenMessage<ThemeSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 43);

/**
 * @generated from message rill.runtime.v1.ThemeState
 */
export type ThemeState = Message<"rill.runtime.v1.ThemeState"> & {
};

/**
 * Describes the message rill.runtime.v1.ThemeState.
 * Use `create(ThemeStateSchema)` to create a new message.
 */
export const ThemeStateSchema: GenMessage<ThemeState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 44);

/**
 * @generated from message rill.runtime.v1.Component
 */
export type Component = Message<"rill.runtime.v1.Component"> & {
  /**
   * @generated from field: rill.runtime.v1.ComponentSpec spec = 1;
   */
  spec?: ComponentSpec;

  /**
   * @generated from field: rill.runtime.v1.ComponentState state = 2;
   */
  state?: ComponentState;
};

/**
 * Describes the message rill.runtime.v1.Component.
 * Use `create(ComponentSchema)` to create a new message.
 */
export const ComponentSchema: GenMessage<Component> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 45);

/**
 * @generated from message rill.runtime.v1.ComponentSpec
 */
export type ComponentSpec = Message<"rill.runtime.v1.ComponentSpec"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string resolver = 2;
   */
  resolver: string;

  /**
   * @generated from field: google.protobuf.Struct resolver_properties = 3;
   */
  resolverProperties?: JsonObject;

  /**
   * @generated from field: string renderer = 4;
   */
  renderer: string;

  /**
   * @generated from field: google.protobuf.Struct renderer_properties = 5;
   */
  rendererProperties?: JsonObject;

  /**
   * @generated from field: bool defined_in_dashboard = 6;
   */
  definedInDashboard: boolean;

  /**
   * @generated from field: string subtitle = 7;
   */
  subtitle: string;
};

/**
 * Describes the message rill.runtime.v1.ComponentSpec.
 * Use `create(ComponentSpecSchema)` to create a new message.
 */
export const ComponentSpecSchema: GenMessage<ComponentSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 46);

/**
 * @generated from message rill.runtime.v1.ComponentState
 */
export type ComponentState = Message<"rill.runtime.v1.ComponentState"> & {
};

/**
 * Describes the message rill.runtime.v1.ComponentState.
 * Use `create(ComponentStateSchema)` to create a new message.
 */
export const ComponentStateSchema: GenMessage<ComponentState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 47);

/**
 * @generated from message rill.runtime.v1.Dashboard
 */
export type Dashboard = Message<"rill.runtime.v1.Dashboard"> & {
  /**
   * @generated from field: rill.runtime.v1.DashboardSpec spec = 1;
   */
  spec?: DashboardSpec;

  /**
   * @generated from field: rill.runtime.v1.DashboardState state = 2;
   */
  state?: DashboardState;
};

/**
 * Describes the message rill.runtime.v1.Dashboard.
 * Use `create(DashboardSchema)` to create a new message.
 */
export const DashboardSchema: GenMessage<Dashboard> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 48);

/**
 * @generated from message rill.runtime.v1.DashboardSpec
 */
export type DashboardSpec = Message<"rill.runtime.v1.DashboardSpec"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: uint32 columns = 2;
   */
  columns: number;

  /**
   * @generated from field: uint32 gap = 3;
   */
  gap: number;

  /**
   * @generated from field: repeated rill.runtime.v1.DashboardItem items = 4;
   */
  items: DashboardItem[];
};

/**
 * Describes the message rill.runtime.v1.DashboardSpec.
 * Use `create(DashboardSpecSchema)` to create a new message.
 */
export const DashboardSpecSchema: GenMessage<DashboardSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 49);

/**
 * @generated from message rill.runtime.v1.DashboardState
 */
export type DashboardState = Message<"rill.runtime.v1.DashboardState"> & {
};

/**
 * Describes the message rill.runtime.v1.DashboardState.
 * Use `create(DashboardStateSchema)` to create a new message.
 */
export const DashboardStateSchema: GenMessage<DashboardState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 50);

/**
 * @generated from message rill.runtime.v1.DashboardItem
 */
export type DashboardItem = Message<"rill.runtime.v1.DashboardItem"> & {
  /**
   * @generated from field: string component = 1;
   */
  component: string;

  /**
   * @generated from field: bool defined_in_dashboard = 8;
   */
  definedInDashboard: boolean;

  /**
   * @generated from field: optional uint32 x = 2;
   */
  x?: number;

  /**
   * @generated from field: optional uint32 y = 3;
   */
  y?: number;

  /**
   * @generated from field: optional uint32 width = 4;
   */
  width?: number;

  /**
   * @generated from field: optional uint32 height = 5;
   */
  height?: number;
};

/**
 * Describes the message rill.runtime.v1.DashboardItem.
 * Use `create(DashboardItemSchema)` to create a new message.
 */
export const DashboardItemSchema: GenMessage<DashboardItem> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 51);

/**
 * API defines a custom operation for querying data stored in Rill.
 *
 * @generated from message rill.runtime.v1.API
 */
export type API = Message<"rill.runtime.v1.API"> & {
  /**
   * @generated from field: rill.runtime.v1.APISpec spec = 1;
   */
  spec?: APISpec;

  /**
   * @generated from field: rill.runtime.v1.APIState state = 2;
   */
  state?: APIState;
};

/**
 * Describes the message rill.runtime.v1.API.
 * Use `create(APISchema)` to create a new message.
 */
export const APISchema: GenMessage<API> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 52);

/**
 * @generated from message rill.runtime.v1.APISpec
 */
export type APISpec = Message<"rill.runtime.v1.APISpec"> & {
  /**
   * @generated from field: string resolver = 1;
   */
  resolver: string;

  /**
   * @generated from field: google.protobuf.Struct resolver_properties = 2;
   */
  resolverProperties?: JsonObject;

  /**
   * @generated from field: string openapi_summary = 3;
   */
  openapiSummary: string;

  /**
   * @generated from field: repeated google.protobuf.Struct openapi_parameters = 4;
   */
  openapiParameters: JsonObject[];

  /**
   * @generated from field: google.protobuf.Struct openapi_response_schema = 5;
   */
  openapiResponseSchema?: JsonObject;
};

/**
 * Describes the message rill.runtime.v1.APISpec.
 * Use `create(APISpecSchema)` to create a new message.
 */
export const APISpecSchema: GenMessage<APISpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 53);

/**
 * @generated from message rill.runtime.v1.APIState
 */
export type APIState = Message<"rill.runtime.v1.APIState"> & {
};

/**
 * Describes the message rill.runtime.v1.APIState.
 * Use `create(APIStateSchema)` to create a new message.
 */
export const APIStateSchema: GenMessage<APIState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 54);

/**
 * @generated from message rill.runtime.v1.Schedule
 */
export type Schedule = Message<"rill.runtime.v1.Schedule"> & {
  /**
   * @generated from field: bool ref_update = 4;
   */
  refUpdate: boolean;

  /**
   * @generated from field: bool disable = 5;
   */
  disable: boolean;

  /**
   * @generated from field: string cron = 1;
   */
  cron: string;

  /**
   * @generated from field: uint32 ticker_seconds = 2;
   */
  tickerSeconds: number;

  /**
   * @generated from field: string time_zone = 3;
   */
  timeZone: string;
};

/**
 * Describes the message rill.runtime.v1.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 55);

/**
 * @generated from message rill.runtime.v1.ParseError
 */
export type ParseError = Message<"rill.runtime.v1.ParseError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string file_path = 2;
   */
  filePath: string;

  /**
   * @generated from field: rill.runtime.v1.CharLocation start_location = 3;
   */
  startLocation?: CharLocation;

  /**
   * @generated from field: bool external = 4;
   */
  external: boolean;
};

/**
 * Describes the message rill.runtime.v1.ParseError.
 * Use `create(ParseErrorSchema)` to create a new message.
 */
export const ParseErrorSchema: GenMessage<ParseError> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 56);

/**
 * @generated from message rill.runtime.v1.ValidationError
 */
export type ValidationError = Message<"rill.runtime.v1.ValidationError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: repeated string property_path = 2;
   */
  propertyPath: string[];
};

/**
 * Describes the message rill.runtime.v1.ValidationError.
 * Use `create(ValidationErrorSchema)` to create a new message.
 */
export const ValidationErrorSchema: GenMessage<ValidationError> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 57);

/**
 * @generated from message rill.runtime.v1.DependencyError
 */
export type DependencyError = Message<"rill.runtime.v1.DependencyError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string dependency = 2;
   */
  dependency: string;
};

/**
 * Describes the message rill.runtime.v1.DependencyError.
 * Use `create(DependencyErrorSchema)` to create a new message.
 */
export const DependencyErrorSchema: GenMessage<DependencyError> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 58);

/**
 * @generated from message rill.runtime.v1.ExecutionError
 */
export type ExecutionError = Message<"rill.runtime.v1.ExecutionError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message rill.runtime.v1.ExecutionError.
 * Use `create(ExecutionErrorSchema)` to create a new message.
 */
export const ExecutionErrorSchema: GenMessage<ExecutionError> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 59);

/**
 * @generated from message rill.runtime.v1.CharLocation
 */
export type CharLocation = Message<"rill.runtime.v1.CharLocation"> & {
  /**
   * @generated from field: uint32 line = 1;
   */
  line: number;
};

/**
 * Describes the message rill.runtime.v1.CharLocation.
 * Use `create(CharLocationSchema)` to create a new message.
 */
export const CharLocationSchema: GenMessage<CharLocation> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 60);

/**
 * @generated from message rill.runtime.v1.ConnectorSpec
 */
export type ConnectorSpec = Message<"rill.runtime.v1.ConnectorSpec"> & {
  /**
   * @generated from field: string driver = 1;
   */
  driver: string;

  /**
   * @generated from field: map<string, string> properties = 2;
   */
  properties: { [key: string]: string };

  /**
   * properties_from_variables stores properties whose value is a variable.
   * NOTE : properties_from_variables and properties both should be used to get all properties.
   *
   * @generated from field: map<string, string> properties_from_variables = 3;
   */
  propertiesFromVariables: { [key: string]: string };
};

/**
 * Describes the message rill.runtime.v1.ConnectorSpec.
 * Use `create(ConnectorSpecSchema)` to create a new message.
 */
export const ConnectorSpecSchema: GenMessage<ConnectorSpec> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 61);

/**
 * @generated from message rill.runtime.v1.ConnectorState
 */
export type ConnectorState = Message<"rill.runtime.v1.ConnectorState"> & {
  /**
   * @generated from field: string spec_hash = 1;
   */
  specHash: string;
};

/**
 * Describes the message rill.runtime.v1.ConnectorState.
 * Use `create(ConnectorStateSchema)` to create a new message.
 */
export const ConnectorStateSchema: GenMessage<ConnectorState> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 62);

/**
 * @generated from message rill.runtime.v1.ConnectorV2
 */
export type ConnectorV2 = Message<"rill.runtime.v1.ConnectorV2"> & {
  /**
   * @generated from field: rill.runtime.v1.ConnectorSpec spec = 1;
   */
  spec?: ConnectorSpec;

  /**
   * @generated from field: rill.runtime.v1.ConnectorState state = 2;
   */
  state?: ConnectorState;
};

/**
 * Describes the message rill.runtime.v1.ConnectorV2.
 * Use `create(ConnectorV2Schema)` to create a new message.
 */
export const ConnectorV2Schema: GenMessage<ConnectorV2> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_resources, 63);

/**
 * @generated from enum rill.runtime.v1.ReconcileStatus
 */
export enum ReconcileStatus {
  /**
   * @generated from enum value: RECONCILE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECONCILE_STATUS_IDLE = 1;
   */
  IDLE = 1,

  /**
   * @generated from enum value: RECONCILE_STATUS_PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: RECONCILE_STATUS_RUNNING = 3;
   */
  RUNNING = 3,
}

/**
 * Describes the enum rill.runtime.v1.ReconcileStatus.
 */
export const ReconcileStatusSchema: GenEnum<ReconcileStatus> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_resources, 0);

/**
 * @generated from enum rill.runtime.v1.AssertionStatus
 */
export enum AssertionStatus {
  /**
   * @generated from enum value: ASSERTION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ASSERTION_STATUS_PASS = 1;
   */
  PASS = 1,

  /**
   * @generated from enum value: ASSERTION_STATUS_FAIL = 2;
   */
  FAIL = 2,

  /**
   * @generated from enum value: ASSERTION_STATUS_ERROR = 3;
   */
  ERROR = 3,
}

/**
 * Describes the enum rill.runtime.v1.AssertionStatus.
 */
export const AssertionStatusSchema: GenEnum<AssertionStatus> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_resources, 1);

