// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file rill/runtime/v1/queries.proto (package rill.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Timestamp, Value } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ExportFormat } from "./export_format_pb";
import { file_rill_runtime_v1_export_format } from "./export_format_pb";
import type { Expression } from "./expression_pb";
import { file_rill_runtime_v1_expression } from "./expression_pb";
import type { StructType } from "./schema_pb";
import { file_rill_runtime_v1_schema } from "./schema_pb";
import type { TimeGrain } from "./time_grain_pb";
import { file_rill_runtime_v1_time_grain } from "./time_grain_pb";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file rill/runtime/v1/queries.proto.
 */
export const file_rill_runtime_v1_queries: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_protobuf_struct, file_google_protobuf_timestamp, file_rill_runtime_v1_export_format, file_rill_runtime_v1_expression, file_rill_runtime_v1_schema, file_rill_runtime_v1_time_grain, file_validate_validate]);

/**
 * @generated from message rill.runtime.v1.QueryRequest
 */
export type QueryRequest = Message<"rill.runtime.v1.QueryRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 7;
   */
  connector: string;

  /**
   * @generated from field: string sql = 2;
   */
  sql: string;

  /**
   * @generated from field: repeated google.protobuf.Value args = 3;
   */
  args: Value[];

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;

  /**
   * @generated from field: bool dry_run = 5;
   */
  dryRun: boolean;

  /**
   * @generated from field: int32 limit = 6;
   */
  limit: number;
};

/**
 * Describes the message rill.runtime.v1.QueryRequest.
 * Use `create(QueryRequestSchema)` to create a new message.
 */
export const QueryRequestSchema: GenMessage<QueryRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 0);

/**
 * @generated from message rill.runtime.v1.QueryResponse
 */
export type QueryResponse = Message<"rill.runtime.v1.QueryResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.StructType meta = 1;
   */
  meta?: StructType;

  /**
   * @generated from field: repeated google.protobuf.Struct data = 2;
   */
  data: JsonObject[];
};

/**
 * Describes the message rill.runtime.v1.QueryResponse.
 * Use `create(QueryResponseSchema)` to create a new message.
 */
export const QueryResponseSchema: GenMessage<QueryResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 1);

/**
 * @generated from message rill.runtime.v1.QueryBatchRequest
 */
export type QueryBatchRequest = Message<"rill.runtime.v1.QueryBatchRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: repeated rill.runtime.v1.Query queries = 2;
   */
  queries: Query[];
};

/**
 * Describes the message rill.runtime.v1.QueryBatchRequest.
 * Use `create(QueryBatchRequestSchema)` to create a new message.
 */
export const QueryBatchRequestSchema: GenMessage<QueryBatchRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 2);

/**
 * @generated from message rill.runtime.v1.QueryBatchResponse
 */
export type QueryBatchResponse = Message<"rill.runtime.v1.QueryBatchResponse"> & {
  /**
   * @generated from field: uint32 index = 1;
   */
  index: number;

  /**
   * @generated from field: rill.runtime.v1.QueryResult result = 2;
   */
  result?: QueryResult;

  /**
   * @generated from field: string error = 3;
   */
  error: string;
};

/**
 * Describes the message rill.runtime.v1.QueryBatchResponse.
 * Use `create(QueryBatchResponseSchema)` to create a new message.
 */
export const QueryBatchResponseSchema: GenMessage<QueryBatchResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 3);

/**
 * @generated from message rill.runtime.v1.ExportRequest
 */
export type ExportRequest = Message<"rill.runtime.v1.ExportRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: int64 limit = 2;
   */
  limit: bigint;

  /**
   * @generated from field: rill.runtime.v1.ExportFormat format = 3;
   */
  format: ExportFormat;

  /**
   * @generated from field: rill.runtime.v1.Query query = 4;
   */
  query?: Query;

  /**
   * @generated from field: string baked_query = 5;
   */
  bakedQuery: string;
};

/**
 * Describes the message rill.runtime.v1.ExportRequest.
 * Use `create(ExportRequestSchema)` to create a new message.
 */
export const ExportRequestSchema: GenMessage<ExportRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 4);

/**
 * @generated from message rill.runtime.v1.ExportResponse
 */
export type ExportResponse = Message<"rill.runtime.v1.ExportResponse"> & {
  /**
   * @generated from field: string download_url_path = 1;
   */
  downloadUrlPath: string;
};

/**
 * Describes the message rill.runtime.v1.ExportResponse.
 * Use `create(ExportResponseSchema)` to create a new message.
 */
export const ExportResponseSchema: GenMessage<ExportResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 5);

/**
 * @generated from message rill.runtime.v1.Query
 */
export type Query = Message<"rill.runtime.v1.Query"> & {
  /**
   * @generated from oneof rill.runtime.v1.Query.query
   */
  query: {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationRequest metrics_view_aggregation_request = 20;
     */
    value: MetricsViewAggregationRequest;
    case: "metricsViewAggregationRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewToplistRequest metrics_view_toplist_request = 2;
     */
    value: MetricsViewToplistRequest;
    case: "metricsViewToplistRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewComparisonRequest metrics_view_comparison_request = 3;
     */
    value: MetricsViewComparisonRequest;
    case: "metricsViewComparisonRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewTimeSeriesRequest metrics_view_time_series_request = 4;
     */
    value: MetricsViewTimeSeriesRequest;
    case: "metricsViewTimeSeriesRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewTotalsRequest metrics_view_totals_request = 5;
     */
    value: MetricsViewTotalsRequest;
    case: "metricsViewTotalsRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewRowsRequest metrics_view_rows_request = 6;
     */
    value: MetricsViewRowsRequest;
    case: "metricsViewRowsRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnRollupIntervalRequest column_rollup_interval_request = 7;
     */
    value: ColumnRollupIntervalRequest;
    case: "columnRollupIntervalRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTopKRequest column_top_k_request = 8;
     */
    value: ColumnTopKRequest;
    case: "columnTopKRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnNullCountRequest column_null_count_request = 9;
     */
    value: ColumnNullCountRequest;
    case: "columnNullCountRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnDescriptiveStatisticsRequest column_descriptive_statistics_request = 10;
     */
    value: ColumnDescriptiveStatisticsRequest;
    case: "columnDescriptiveStatisticsRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeGrainRequest column_time_grain_request = 11;
     */
    value: ColumnTimeGrainRequest;
    case: "columnTimeGrainRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnNumericHistogramRequest column_numeric_histogram_request = 12;
     */
    value: ColumnNumericHistogramRequest;
    case: "columnNumericHistogramRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnRugHistogramRequest column_rug_histogram_request = 13;
     */
    value: ColumnRugHistogramRequest;
    case: "columnRugHistogramRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeRangeRequest column_time_range_request = 14;
     */
    value: ColumnTimeRangeRequest;
    case: "columnTimeRangeRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnCardinalityRequest column_cardinality_request = 15;
     */
    value: ColumnCardinalityRequest;
    case: "columnCardinalityRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeSeriesRequest column_time_series_request = 16;
     */
    value: ColumnTimeSeriesRequest;
    case: "columnTimeSeriesRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableCardinalityRequest table_cardinality_request = 17;
     */
    value: TableCardinalityRequest;
    case: "tableCardinalityRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableColumnsRequest table_columns_request = 18;
     */
    value: TableColumnsRequest;
    case: "tableColumnsRequest";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableRowsRequest table_rows_request = 19;
     */
    value: TableRowsRequest;
    case: "tableRowsRequest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export const QuerySchema: GenMessage<Query> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 6);

/**
 * @generated from message rill.runtime.v1.QueryResult
 */
export type QueryResult = Message<"rill.runtime.v1.QueryResult"> & {
  /**
   * @generated from oneof rill.runtime.v1.QueryResult.result
   */
  result: {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationResponse metrics_view_aggregation_response = 21;
     */
    value: MetricsViewAggregationResponse;
    case: "metricsViewAggregationResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewToplistResponse metrics_view_toplist_response = 3;
     */
    value: MetricsViewToplistResponse;
    case: "metricsViewToplistResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewComparisonResponse metrics_view_comparison_response = 4;
     */
    value: MetricsViewComparisonResponse;
    case: "metricsViewComparisonResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewTimeSeriesResponse metrics_view_time_series_response = 5;
     */
    value: MetricsViewTimeSeriesResponse;
    case: "metricsViewTimeSeriesResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewTotalsResponse metrics_view_totals_response = 6;
     */
    value: MetricsViewTotalsResponse;
    case: "metricsViewTotalsResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewRowsResponse metrics_view_rows_response = 7;
     */
    value: MetricsViewRowsResponse;
    case: "metricsViewRowsResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnRollupIntervalResponse column_rollup_interval_response = 8;
     */
    value: ColumnRollupIntervalResponse;
    case: "columnRollupIntervalResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTopKResponse column_top_k_response = 9;
     */
    value: ColumnTopKResponse;
    case: "columnTopKResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnNullCountResponse column_null_count_response = 10;
     */
    value: ColumnNullCountResponse;
    case: "columnNullCountResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnDescriptiveStatisticsResponse column_descriptive_statistics_response = 11;
     */
    value: ColumnDescriptiveStatisticsResponse;
    case: "columnDescriptiveStatisticsResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeGrainResponse column_time_grain_response = 12;
     */
    value: ColumnTimeGrainResponse;
    case: "columnTimeGrainResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnNumericHistogramResponse column_numeric_histogram_response = 13;
     */
    value: ColumnNumericHistogramResponse;
    case: "columnNumericHistogramResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnRugHistogramResponse column_rug_histogram_response = 14;
     */
    value: ColumnRugHistogramResponse;
    case: "columnRugHistogramResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeRangeResponse column_time_range_response = 15;
     */
    value: ColumnTimeRangeResponse;
    case: "columnTimeRangeResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnCardinalityResponse column_cardinality_response = 16;
     */
    value: ColumnCardinalityResponse;
    case: "columnCardinalityResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.ColumnTimeSeriesResponse column_time_series_response = 17;
     */
    value: ColumnTimeSeriesResponse;
    case: "columnTimeSeriesResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableCardinalityResponse table_cardinality_response = 18;
     */
    value: TableCardinalityResponse;
    case: "tableCardinalityResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableColumnsResponse table_columns_response = 19;
     */
    value: TableColumnsResponse;
    case: "tableColumnsResponse";
  } | {
    /**
     * @generated from field: rill.runtime.v1.TableRowsResponse table_rows_response = 20;
     */
    value: TableRowsResponse;
    case: "tableRowsResponse";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.QueryResult.
 * Use `create(QueryResultSchema)` to create a new message.
 */
export const QueryResultSchema: GenMessage<QueryResult> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 7);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationRequest
 */
export type MetricsViewAggregationRequest = Message<"rill.runtime.v1.MetricsViewAggregationRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * Required
   *
   * @generated from field: string metrics_view = 2;
   */
  metricsView: string;

  /**
   * Required
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewAggregationDimension dimensions = 3;
   */
  dimensions: MetricsViewAggregationDimension[];

  /**
   * Required
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewAggregationMeasure measures = 4;
   */
  measures: MetricsViewAggregationMeasure[];

  /**
   * Optional. Defaults to unsorted
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewAggregationSort sort = 5;
   */
  sort: MetricsViewAggregationSort[];

  /**
   * Optional. Defaults to unbounded
   *
   * @generated from field: rill.runtime.v1.TimeRange time_range = 12;
   */
  timeRange?: TimeRange;

  /**
   * Optional, if omitted than the request prepares an aggregation without a comparison
   *
   * @generated from field: rill.runtime.v1.TimeRange comparison_time_range = 16;
   */
  comparisonTimeRange?: TimeRange;

  /**
   * Deprecated in favor of time_range
   *
   * @generated from field: google.protobuf.Timestamp time_start = 6;
   */
  timeStart?: Timestamp;

  /**
   * Deprecated in favor of time_range
   *
   * @generated from field: google.protobuf.Timestamp time_end = 7;
   */
  timeEnd?: Timestamp;

  /**
   * Optional. List of dimensions/measures. No pivot is done if ommitted
   *
   * @generated from field: repeated string pivot_on = 15;
   */
  pivotOn: string[];

  /**
   * Optional
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewComparisonMeasureAlias aliases = 18;
   */
  aliases: MetricsViewComparisonMeasureAlias[];

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 8;
   */
  where?: Expression;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression having = 13;
   */
  having?: Expression;

  /**
   * Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
   *
   * @generated from field: int64 limit = 9;
   */
  limit: bigint;

  /**
   * Optional. Defaults to 0
   *
   * @generated from field: int64 offset = 10;
   */
  offset: bigint;

  /**
   * Optional
   *
   * @generated from field: int32 priority = 11;
   */
  priority: number;

  /**
   * Optional
   *
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 14;
   */
  filter?: MetricsViewFilter;

  /**
   * @generated from field: bool exact = 17;
   */
  exact: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationRequest.
 * Use `create(MetricsViewAggregationRequestSchema)` to create a new message.
 */
export const MetricsViewAggregationRequestSchema: GenMessage<MetricsViewAggregationRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 8);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationResponse
 */
export type MetricsViewAggregationResponse = Message<"rill.runtime.v1.MetricsViewAggregationResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: rill.runtime.v1.StructType schema = 1;
   */
  schema?: StructType;

  /**
   * Not optional, not null
   *
   * @generated from field: repeated google.protobuf.Struct data = 2;
   */
  data: JsonObject[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationResponse.
 * Use `create(MetricsViewAggregationResponseSchema)` to create a new message.
 */
export const MetricsViewAggregationResponseSchema: GenMessage<MetricsViewAggregationResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 9);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationDimension
 */
export type MetricsViewAggregationDimension = Message<"rill.runtime.v1.MetricsViewAggregationDimension"> & {
  /**
   * Required
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.TimeGrain time_grain = 2;
   */
  timeGrain: TimeGrain;

  /**
   * Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
   *
   * @generated from field: string time_zone = 3;
   */
  timeZone: string;

  /**
   * @generated from field: string alias = 4;
   */
  alias: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationDimension.
 * Use `create(MetricsViewAggregationDimensionSchema)` to create a new message.
 */
export const MetricsViewAggregationDimensionSchema: GenMessage<MetricsViewAggregationDimension> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 10);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasure
 */
export type MetricsViewAggregationMeasure = Message<"rill.runtime.v1.MetricsViewAggregationMeasure"> & {
  /**
   * Required
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.BuiltinMeasure builtin_measure = 2;
   */
  builtinMeasure: BuiltinMeasure;

  /**
   * Required if BUILTIN_MEASURE_COUNT_DISTINCT
   *
   * @generated from field: repeated google.protobuf.Value builtin_measure_args = 3;
   */
  builtinMeasureArgs: Value[];

  /**
   * @generated from field: rill.runtime.v1.Expression filter = 4;
   */
  filter?: Expression;

  /**
   * Optional
   *
   * @generated from oneof rill.runtime.v1.MetricsViewAggregationMeasure.compute
   */
  compute: {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationMeasureComputeCount count = 5;
     */
    value: MetricsViewAggregationMeasureComputeCount;
    case: "count";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationMeasureComputeCountDistinct count_distinct = 6;
     */
    value: MetricsViewAggregationMeasureComputeCountDistinct;
    case: "countDistinct";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonValue comparison_value = 7;
     */
    value: MetricsViewAggregationMeasureComputeComparisonValue;
    case: "comparisonValue";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonDelta comparison_delta = 8;
     */
    value: MetricsViewAggregationMeasureComputeComparisonDelta;
    case: "comparisonDelta";
  } | {
    /**
     * @generated from field: rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonRatio comparison_ratio = 9;
     */
    value: MetricsViewAggregationMeasureComputeComparisonRatio;
    case: "comparisonRatio";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasure.
 * Use `create(MetricsViewAggregationMeasureSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureSchema: GenMessage<MetricsViewAggregationMeasure> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 11);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasureComputeCount
 */
export type MetricsViewAggregationMeasureComputeCount = Message<"rill.runtime.v1.MetricsViewAggregationMeasureComputeCount"> & {
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasureComputeCount.
 * Use `create(MetricsViewAggregationMeasureComputeCountSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureComputeCountSchema: GenMessage<MetricsViewAggregationMeasureComputeCount> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 12);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasureComputeCountDistinct
 */
export type MetricsViewAggregationMeasureComputeCountDistinct = Message<"rill.runtime.v1.MetricsViewAggregationMeasureComputeCountDistinct"> & {
  /**
   * @generated from field: string dimension = 1;
   */
  dimension: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasureComputeCountDistinct.
 * Use `create(MetricsViewAggregationMeasureComputeCountDistinctSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureComputeCountDistinctSchema: GenMessage<MetricsViewAggregationMeasureComputeCountDistinct> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 13);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonValue
 */
export type MetricsViewAggregationMeasureComputeComparisonValue = Message<"rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonValue"> & {
  /**
   * @generated from field: string measure = 1;
   */
  measure: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonValue.
 * Use `create(MetricsViewAggregationMeasureComputeComparisonValueSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureComputeComparisonValueSchema: GenMessage<MetricsViewAggregationMeasureComputeComparisonValue> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 14);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonDelta
 */
export type MetricsViewAggregationMeasureComputeComparisonDelta = Message<"rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonDelta"> & {
  /**
   * @generated from field: string measure = 1;
   */
  measure: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonDelta.
 * Use `create(MetricsViewAggregationMeasureComputeComparisonDeltaSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureComputeComparisonDeltaSchema: GenMessage<MetricsViewAggregationMeasureComputeComparisonDelta> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 15);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonRatio
 */
export type MetricsViewAggregationMeasureComputeComparisonRatio = Message<"rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonRatio"> & {
  /**
   * @generated from field: string measure = 1;
   */
  measure: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationMeasureComputeComparisonRatio.
 * Use `create(MetricsViewAggregationMeasureComputeComparisonRatioSchema)` to create a new message.
 */
export const MetricsViewAggregationMeasureComputeComparisonRatioSchema: GenMessage<MetricsViewAggregationMeasureComputeComparisonRatio> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 16);

/**
 * @generated from message rill.runtime.v1.MetricsViewAggregationSort
 */
export type MetricsViewAggregationSort = Message<"rill.runtime.v1.MetricsViewAggregationSort"> & {
  /**
   * Required. Dimension or measure name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional
   *
   * @generated from field: bool desc = 2;
   */
  desc: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewAggregationSort.
 * Use `create(MetricsViewAggregationSortSchema)` to create a new message.
 */
export const MetricsViewAggregationSortSchema: GenMessage<MetricsViewAggregationSort> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 17);

/**
 * Deprecated, use MetricsViewComparisonRequest without a comparison time range
 *
 * @generated from message rill.runtime.v1.MetricsViewToplistRequest
 */
export type MetricsViewToplistRequest = Message<"rill.runtime.v1.MetricsViewToplistRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: string dimension_name = 3;
   */
  dimensionName: string;

  /**
   * @generated from field: repeated string measure_names = 4;
   */
  measureNames: string[];

  /**
   * @generated from field: google.protobuf.Timestamp time_start = 5;
   */
  timeStart?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp time_end = 6;
   */
  timeEnd?: Timestamp;

  /**
   * @generated from field: int64 limit = 7;
   */
  limit: bigint;

  /**
   * @generated from field: int64 offset = 8;
   */
  offset: bigint;

  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewSort sort = 9;
   */
  sort: MetricsViewSort[];

  /**
   * @generated from field: rill.runtime.v1.Expression where = 10;
   */
  where?: Expression;

  /**
   * @generated from field: rill.runtime.v1.Expression having = 13;
   */
  having?: Expression;

  /**
   * @generated from field: int32 priority = 11;
   */
  priority: number;

  /**
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 14;
   */
  filter?: MetricsViewFilter;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewToplistRequest.
 * Use `create(MetricsViewToplistRequestSchema)` to create a new message.
 */
export const MetricsViewToplistRequestSchema: GenMessage<MetricsViewToplistRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 18);

/**
 * @generated from message rill.runtime.v1.MetricsViewToplistResponse
 */
export type MetricsViewToplistResponse = Message<"rill.runtime.v1.MetricsViewToplistResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewColumn meta = 1;
   */
  meta: MetricsViewColumn[];

  /**
   * Not optional, not null
   *
   * @generated from field: repeated google.protobuf.Struct data = 2;
   */
  data: JsonObject[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewToplistResponse.
 * Use `create(MetricsViewToplistResponseSchema)` to create a new message.
 */
export const MetricsViewToplistResponseSchema: GenMessage<MetricsViewToplistResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 19);

/**
 * Request message for QueryService.MetricsViewComparison
 *
 * @generated from message rill.runtime.v1.MetricsViewComparisonRequest
 */
export type MetricsViewComparisonRequest = Message<"rill.runtime.v1.MetricsViewComparisonRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * Required
   *
   * @generated from field: rill.runtime.v1.MetricsViewAggregationDimension dimension = 3;
   */
  dimension?: MetricsViewAggregationDimension;

  /**
   * Required
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewAggregationMeasure measures = 4;
   */
  measures: MetricsViewAggregationMeasure[];

  /**
   * Measures that should be compared
   * Optional. Defaults to all measures
   *
   * @generated from field: repeated string comparison_measures = 16;
   */
  comparisonMeasures: string[];

  /**
   * Required
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewComparisonSort sort = 5;
   */
  sort: MetricsViewComparisonSort[];

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.TimeRange time_range = 6;
   */
  timeRange?: TimeRange;

  /**
   * Optional, if omitted than the request prepares the toplist without a comparison
   *
   * @generated from field: rill.runtime.v1.TimeRange comparison_time_range = 7;
   */
  comparisonTimeRange?: TimeRange;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 8;
   */
  where?: Expression;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression having = 12;
   */
  having?: Expression;

  /**
   * Optional
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewComparisonMeasureAlias aliases = 15;
   */
  aliases: MetricsViewComparisonMeasureAlias[];

  /**
   * Optional. Defaults to unlimited. Set to 0 to allow the server to pick an appropriate limit
   *
   * @generated from field: int64 limit = 9;
   */
  limit: bigint;

  /**
   * Optional. Defaults to 0
   *
   * @generated from field: int64 offset = 10;
   */
  offset: bigint;

  /**
   * Optional
   *
   * @generated from field: int32 priority = 11;
   */
  priority: number;

  /**
   * Optional, defaults to false
   *
   * @generated from field: bool exact = 13;
   */
  exact: boolean;

  /**
   * Optional
   *
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 14;
   */
  filter?: MetricsViewFilter;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonRequest.
 * Use `create(MetricsViewComparisonRequestSchema)` to create a new message.
 */
export const MetricsViewComparisonRequestSchema: GenMessage<MetricsViewComparisonRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 20);

/**
 * Response message for QueryService.MetricsViewComparison
 *
 * @generated from message rill.runtime.v1.MetricsViewComparisonResponse
 */
export type MetricsViewComparisonResponse = Message<"rill.runtime.v1.MetricsViewComparisonResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewComparisonRow rows = 1;
   */
  rows: MetricsViewComparisonRow[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonResponse.
 * Use `create(MetricsViewComparisonResponseSchema)` to create a new message.
 */
export const MetricsViewComparisonResponseSchema: GenMessage<MetricsViewComparisonResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 21);

/**
 * 2 of the (start, end, iso_duration) should be set
 *
 * @generated from message rill.runtime.v1.TimeRange
 */
export type TimeRange = Message<"rill.runtime.v1.TimeRange"> & {
  /**
   * Optional. Defaults to min
   *
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * Optional. Defaults to max
   *
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  /**
   * Optional, ie PT1M
   *
   * @generated from field: string iso_duration = 3;
   */
  isoDuration: string;

  /**
   * Optional, ie PT1M
   *
   * @generated from field: string iso_offset = 4;
   */
  isoOffset: string;

  /**
   * @generated from field: rill.runtime.v1.TimeGrain round_to_grain = 5;
   */
  roundToGrain: TimeGrain;

  /**
   * Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
   *
   * @generated from field: string time_zone = 6;
   */
  timeZone: string;
};

/**
 * Describes the message rill.runtime.v1.TimeRange.
 * Use `create(TimeRangeSchema)` to create a new message.
 */
export const TimeRangeSchema: GenMessage<TimeRange> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 22);

/**
 * @generated from message rill.runtime.v1.MetricsViewComparisonSort
 */
export type MetricsViewComparisonSort = Message<"rill.runtime.v1.MetricsViewComparisonSort"> & {
  /**
   * Required
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional, defaults to false
   *
   * @generated from field: bool desc = 2;
   */
  desc: boolean;

  /**
   * Deprecated. Present for backwards compatibility for older reports
   *
   * @generated from field: rill.runtime.v1.MetricsViewComparisonSortType type = 3;
   */
  type: MetricsViewComparisonSortType;

  /**
   * @generated from field: rill.runtime.v1.MetricsViewComparisonMeasureType sort_type = 4;
   */
  sortType: MetricsViewComparisonMeasureType;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonSort.
 * Use `create(MetricsViewComparisonSortSchema)` to create a new message.
 */
export const MetricsViewComparisonSortSchema: GenMessage<MetricsViewComparisonSort> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 23);

/**
 * @generated from message rill.runtime.v1.MetricsViewComparisonRow
 */
export type MetricsViewComparisonRow = Message<"rill.runtime.v1.MetricsViewComparisonRow"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Value dimension_value = 1;
   */
  dimensionValue?: Value;

  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewComparisonValue measure_values = 2;
   */
  measureValues: MetricsViewComparisonValue[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonRow.
 * Use `create(MetricsViewComparisonRowSchema)` to create a new message.
 */
export const MetricsViewComparisonRowSchema: GenMessage<MetricsViewComparisonRow> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 24);

/**
 * @generated from message rill.runtime.v1.MetricsViewComparisonValue
 */
export type MetricsViewComparisonValue = Message<"rill.runtime.v1.MetricsViewComparisonValue"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: string measure_name = 1;
   */
  measureName: string;

  /**
   * Can be null
   *
   * @generated from field: google.protobuf.Value base_value = 2;
   */
  baseValue?: Value;

  /**
   * Can be null
   *
   * @generated from field: google.protobuf.Value comparison_value = 3;
   */
  comparisonValue?: Value;

  /**
   * Can be null
   *
   * @generated from field: google.protobuf.Value delta_abs = 4;
   */
  deltaAbs?: Value;

  /**
   * Can be null
   *
   * @generated from field: google.protobuf.Value delta_rel = 5;
   */
  deltaRel?: Value;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonValue.
 * Use `create(MetricsViewComparisonValueSchema)` to create a new message.
 */
export const MetricsViewComparisonValueSchema: GenMessage<MetricsViewComparisonValue> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 25);

/**
 * @generated from message rill.runtime.v1.MetricsViewComparisonMeasureAlias
 */
export type MetricsViewComparisonMeasureAlias = Message<"rill.runtime.v1.MetricsViewComparisonMeasureAlias"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: rill.runtime.v1.MetricsViewComparisonMeasureType type = 2;
   */
  type: MetricsViewComparisonMeasureType;

  /**
   * @generated from field: string alias = 3;
   */
  alias: string;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewComparisonMeasureAlias.
 * Use `create(MetricsViewComparisonMeasureAliasSchema)` to create a new message.
 */
export const MetricsViewComparisonMeasureAliasSchema: GenMessage<MetricsViewComparisonMeasureAlias> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 26);

/**
 * @generated from message rill.runtime.v1.MetricsViewTimeSeriesRequest
 */
export type MetricsViewTimeSeriesRequest = Message<"rill.runtime.v1.MetricsViewTimeSeriesRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: repeated string measure_names = 3;
   */
  measureNames: string[];

  /**
   * Optional. Defaults to min
   *
   * @generated from field: google.protobuf.Timestamp time_start = 4;
   */
  timeStart?: Timestamp;

  /**
   * Optional. Defaults to max
   *
   * @generated from field: google.protobuf.Timestamp time_end = 5;
   */
  timeEnd?: Timestamp;

  /**
   * Required
   *
   * @generated from field: rill.runtime.v1.TimeGrain time_granularity = 6;
   */
  timeGranularity: TimeGrain;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 7;
   */
  where?: Expression;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression having = 11;
   */
  having?: Expression;

  /**
   * Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
   *
   * @generated from field: string time_zone = 10;
   */
  timeZone: string;

  /**
   * @generated from field: int32 priority = 8;
   */
  priority: number;

  /**
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 12;
   */
  filter?: MetricsViewFilter;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTimeSeriesRequest.
 * Use `create(MetricsViewTimeSeriesRequestSchema)` to create a new message.
 */
export const MetricsViewTimeSeriesRequestSchema: GenMessage<MetricsViewTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 27);

/**
 * @generated from message rill.runtime.v1.MetricsViewTimeSeriesResponse
 */
export type MetricsViewTimeSeriesResponse = Message<"rill.runtime.v1.MetricsViewTimeSeriesResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewColumn meta = 1;
   */
  meta: MetricsViewColumn[];

  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.TimeSeriesValue data = 2;
   */
  data: TimeSeriesValue[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTimeSeriesResponse.
 * Use `create(MetricsViewTimeSeriesResponseSchema)` to create a new message.
 */
export const MetricsViewTimeSeriesResponseSchema: GenMessage<MetricsViewTimeSeriesResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 28);

/**
 * @generated from message rill.runtime.v1.MetricsViewTotalsRequest
 */
export type MetricsViewTotalsRequest = Message<"rill.runtime.v1.MetricsViewTotalsRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: repeated string measure_names = 3;
   */
  measureNames: string[];

  /**
   * Optional. Defaults to min
   *
   * @generated from field: google.protobuf.Timestamp time_start = 4;
   */
  timeStart?: Timestamp;

  /**
   * Optional. Defaults to max
   *
   * @generated from field: google.protobuf.Timestamp time_end = 5;
   */
  timeEnd?: Timestamp;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 7;
   */
  where?: Expression;

  /**
   * @generated from field: int32 priority = 8;
   */
  priority: number;

  /**
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 10;
   */
  filter?: MetricsViewFilter;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTotalsRequest.
 * Use `create(MetricsViewTotalsRequestSchema)` to create a new message.
 */
export const MetricsViewTotalsRequestSchema: GenMessage<MetricsViewTotalsRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 29);

/**
 * @generated from message rill.runtime.v1.MetricsViewTotalsResponse
 */
export type MetricsViewTotalsResponse = Message<"rill.runtime.v1.MetricsViewTotalsResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewColumn meta = 1;
   */
  meta: MetricsViewColumn[];

  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Struct data = 2;
   */
  data?: JsonObject;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTotalsResponse.
 * Use `create(MetricsViewTotalsResponseSchema)` to create a new message.
 */
export const MetricsViewTotalsResponseSchema: GenMessage<MetricsViewTotalsResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 30);

/**
 * @generated from message rill.runtime.v1.MetricsViewRowsRequest
 */
export type MetricsViewRowsRequest = Message<"rill.runtime.v1.MetricsViewRowsRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * Optional, defaults to min
   *
   * @generated from field: google.protobuf.Timestamp time_start = 3;
   */
  timeStart?: Timestamp;

  /**
   * Optional, defaults to max
   *
   * @generated from field: google.protobuf.Timestamp time_end = 4;
   */
  timeEnd?: Timestamp;

  /**
   * Optional, doesn't prepend the timestamp rollup column if ommitted
   *
   * @generated from field: rill.runtime.v1.TimeGrain time_granularity = 10;
   */
  timeGranularity: TimeGrain;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 5;
   */
  where?: Expression;

  /**
   * Optional
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewSort sort = 6;
   */
  sort: MetricsViewSort[];

  /**
   * Optional
   *
   * @generated from field: int32 limit = 7;
   */
  limit: number;

  /**
   * Optional
   *
   * @generated from field: int64 offset = 8;
   */
  offset: bigint;

  /**
   * @generated from field: int32 priority = 9;
   */
  priority: number;

  /**
   * Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
   *
   * @generated from field: string time_zone = 11;
   */
  timeZone: string;

  /**
   * Deprecated. should be removed once UI is moved to use new filters
   *
   * @generated from field: rill.runtime.v1.MetricsViewFilter filter = 12;
   */
  filter?: MetricsViewFilter;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewRowsRequest.
 * Use `create(MetricsViewRowsRequestSchema)` to create a new message.
 */
export const MetricsViewRowsRequestSchema: GenMessage<MetricsViewRowsRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 31);

/**
 * @generated from message rill.runtime.v1.MetricsViewRowsResponse
 */
export type MetricsViewRowsResponse = Message<"rill.runtime.v1.MetricsViewRowsResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.MetricsViewColumn meta = 1;
   */
  meta: MetricsViewColumn[];

  /**
   * Not optional, not null
   *
   * @generated from field: repeated google.protobuf.Struct data = 2;
   */
  data: JsonObject[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewRowsResponse.
 * Use `create(MetricsViewRowsResponseSchema)` to create a new message.
 */
export const MetricsViewRowsResponseSchema: GenMessage<MetricsViewRowsResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 32);

/**
 * @generated from message rill.runtime.v1.MetricsViewSort
 */
export type MetricsViewSort = Message<"rill.runtime.v1.MetricsViewSort"> & {
  /**
   * Required
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Optional, defaults to false
   *
   * @generated from field: bool ascending = 2;
   */
  ascending: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSort.
 * Use `create(MetricsViewSortSchema)` to create a new message.
 */
export const MetricsViewSortSchema: GenMessage<MetricsViewSort> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 33);

/**
 * @generated from message rill.runtime.v1.MetricsViewFilter
 */
export type MetricsViewFilter = Message<"rill.runtime.v1.MetricsViewFilter"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewFilter.Cond include = 2;
   */
  include: MetricsViewFilter_Cond[];

  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewFilter.Cond exclude = 3;
   */
  exclude: MetricsViewFilter_Cond[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewFilter.
 * Use `create(MetricsViewFilterSchema)` to create a new message.
 */
export const MetricsViewFilterSchema: GenMessage<MetricsViewFilter> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 34);

/**
 * @generated from message rill.runtime.v1.MetricsViewFilter.Cond
 */
export type MetricsViewFilter_Cond = Message<"rill.runtime.v1.MetricsViewFilter.Cond"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated google.protobuf.Value in = 2;
   */
  in: Value[];

  /**
   * @generated from field: repeated string like = 3;
   */
  like: string[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewFilter.Cond.
 * Use `create(MetricsViewFilter_CondSchema)` to create a new message.
 */
export const MetricsViewFilter_CondSchema: GenMessage<MetricsViewFilter_Cond> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 34, 0);

/**
 * @generated from message rill.runtime.v1.MetricsViewColumn
 */
export type MetricsViewColumn = Message<"rill.runtime.v1.MetricsViewColumn"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Not optional, not null
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Not optional, not null
   *
   * @generated from field: bool nullable = 3;
   */
  nullable: boolean;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewColumn.
 * Use `create(MetricsViewColumnSchema)` to create a new message.
 */
export const MetricsViewColumnSchema: GenMessage<MetricsViewColumn> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 35);

/**
 * @generated from message rill.runtime.v1.InlineMeasure
 */
export type InlineMeasure = Message<"rill.runtime.v1.InlineMeasure"> & {
  /**
   * Required
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required, ie 'count(*)'
   *
   * @generated from field: string expression = 2;
   */
  expression: string;
};

/**
 * Describes the message rill.runtime.v1.InlineMeasure.
 * Use `create(InlineMeasureSchema)` to create a new message.
 */
export const InlineMeasureSchema: GenMessage<InlineMeasure> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 36);

/**
 * @generated from message rill.runtime.v1.MetricsViewTimeRangeRequest
 */
export type MetricsViewTimeRangeRequest = Message<"rill.runtime.v1.MetricsViewTimeRangeRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: int32 priority = 3;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTimeRangeRequest.
 * Use `create(MetricsViewTimeRangeRequestSchema)` to create a new message.
 */
export const MetricsViewTimeRangeRequestSchema: GenMessage<MetricsViewTimeRangeRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 37);

/**
 * @generated from message rill.runtime.v1.MetricsViewTimeRangeResponse
 */
export type MetricsViewTimeRangeResponse = Message<"rill.runtime.v1.MetricsViewTimeRangeResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: rill.runtime.v1.TimeRangeSummary time_range_summary = 1;
   */
  timeRangeSummary?: TimeRangeSummary;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewTimeRangeResponse.
 * Use `create(MetricsViewTimeRangeResponseSchema)` to create a new message.
 */
export const MetricsViewTimeRangeResponseSchema: GenMessage<MetricsViewTimeRangeResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 38);

/**
 * @generated from message rill.runtime.v1.MetricsViewSchemaRequest
 */
export type MetricsViewSchemaRequest = Message<"rill.runtime.v1.MetricsViewSchemaRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: int32 priority = 3;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSchemaRequest.
 * Use `create(MetricsViewSchemaRequestSchema)` to create a new message.
 */
export const MetricsViewSchemaRequestSchema: GenMessage<MetricsViewSchemaRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 39);

/**
 * @generated from message rill.runtime.v1.MetricsViewSchemaResponse
 */
export type MetricsViewSchemaResponse = Message<"rill.runtime.v1.MetricsViewSchemaResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.StructType schema = 1;
   */
  schema?: StructType;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSchemaResponse.
 * Use `create(MetricsViewSchemaResponseSchema)` to create a new message.
 */
export const MetricsViewSchemaResponseSchema: GenMessage<MetricsViewSchemaResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 40);

/**
 * @generated from message rill.runtime.v1.MetricsViewSearchRequest
 */
export type MetricsViewSearchRequest = Message<"rill.runtime.v1.MetricsViewSearchRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string metrics_view_name = 2;
   */
  metricsViewName: string;

  /**
   * @generated from field: repeated string dimensions = 3;
   */
  dimensions: string[];

  /**
   * @generated from field: string search = 4;
   */
  search: string;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.TimeRange time_range = 5;
   */
  timeRange?: TimeRange;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression where = 6;
   */
  where?: Expression;

  /**
   * Optional
   *
   * @generated from field: rill.runtime.v1.Expression having = 7;
   */
  having?: Expression;

  /**
   * Optional
   *
   * @generated from field: int32 limit = 8;
   */
  limit: number;

  /**
   * @generated from field: int32 priority = 9;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSearchRequest.
 * Use `create(MetricsViewSearchRequestSchema)` to create a new message.
 */
export const MetricsViewSearchRequestSchema: GenMessage<MetricsViewSearchRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 41);

/**
 * @generated from message rill.runtime.v1.MetricsViewSearchResponse
 */
export type MetricsViewSearchResponse = Message<"rill.runtime.v1.MetricsViewSearchResponse"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.MetricsViewSearchResponse.SearchResult results = 1;
   */
  results: MetricsViewSearchResponse_SearchResult[];
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSearchResponse.
 * Use `create(MetricsViewSearchResponseSchema)` to create a new message.
 */
export const MetricsViewSearchResponseSchema: GenMessage<MetricsViewSearchResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 42);

/**
 * @generated from message rill.runtime.v1.MetricsViewSearchResponse.SearchResult
 */
export type MetricsViewSearchResponse_SearchResult = Message<"rill.runtime.v1.MetricsViewSearchResponse.SearchResult"> & {
  /**
   * @generated from field: string dimension = 1;
   */
  dimension: string;

  /**
   * @generated from field: google.protobuf.Value value = 2;
   */
  value?: Value;
};

/**
 * Describes the message rill.runtime.v1.MetricsViewSearchResponse.SearchResult.
 * Use `create(MetricsViewSearchResponse_SearchResultSchema)` to create a new message.
 */
export const MetricsViewSearchResponse_SearchResultSchema: GenMessage<MetricsViewSearchResponse_SearchResult> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 42, 0);

/**
 * @generated from message rill.runtime.v1.ColumnRollupIntervalRequest
 */
export type ColumnRollupIntervalRequest = Message<"rill.runtime.v1.ColumnRollupIntervalRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnRollupIntervalRequest.
 * Use `create(ColumnRollupIntervalRequestSchema)` to create a new message.
 */
export const ColumnRollupIntervalRequestSchema: GenMessage<ColumnRollupIntervalRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 43);

/**
 * @generated from message rill.runtime.v1.ColumnRollupIntervalResponse
 */
export type ColumnRollupIntervalResponse = Message<"rill.runtime.v1.ColumnRollupIntervalResponse"> & {
  /**
   * Minimum timestamp
   *
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * Maximum timestamp
   *
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  /**
   * Human friendly time grain that is still bounded by (min, max), ie 'minute' time grain for an hour time range
   *
   * @generated from field: rill.runtime.v1.TimeGrain interval = 3;
   */
  interval: TimeGrain;
};

/**
 * Describes the message rill.runtime.v1.ColumnRollupIntervalResponse.
 * Use `create(ColumnRollupIntervalResponseSchema)` to create a new message.
 */
export const ColumnRollupIntervalResponseSchema: GenMessage<ColumnRollupIntervalResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 44);

/**
 * @generated from message rill.runtime.v1.ColumnTopKRequest
 */
export type ColumnTopKRequest = Message<"rill.runtime.v1.ColumnTopKRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 7;
   */
  connector: string;

  /**
   * @generated from field: string database = 8;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 9;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * default is count(*)
   *
   * @generated from field: string agg = 4;
   */
  agg: string;

  /**
   * default is 50
   *
   * @generated from field: int32 k = 5;
   */
  k: number;

  /**
   * @generated from field: int32 priority = 6;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnTopKRequest.
 * Use `create(ColumnTopKRequestSchema)` to create a new message.
 */
export const ColumnTopKRequestSchema: GenMessage<ColumnTopKRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 45);

/**
 * @generated from message rill.runtime.v1.ColumnTopKResponse
 */
export type ColumnTopKResponse = Message<"rill.runtime.v1.ColumnTopKResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.CategoricalSummary categorical_summary = 1;
   */
  categoricalSummary?: CategoricalSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnTopKResponse.
 * Use `create(ColumnTopKResponseSchema)` to create a new message.
 */
export const ColumnTopKResponseSchema: GenMessage<ColumnTopKResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 46);

/**
 * @generated from message rill.runtime.v1.CategoricalSummary
 */
export type CategoricalSummary = Message<"rill.runtime.v1.CategoricalSummary"> & {
  /**
   * @generated from oneof rill.runtime.v1.CategoricalSummary.case
   */
  case: {
    /**
     * @generated from field: rill.runtime.v1.TopK top_k = 1;
     */
    value: TopK;
    case: "topK";
  } | {
    /**
     * @generated from field: double cardinality = 2;
     */
    value: number;
    case: "cardinality";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.CategoricalSummary.
 * Use `create(CategoricalSummarySchema)` to create a new message.
 */
export const CategoricalSummarySchema: GenMessage<CategoricalSummary> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 47);

/**
 * @generated from message rill.runtime.v1.TopK
 */
export type TopK = Message<"rill.runtime.v1.TopK"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.TopK.Entry entries = 1;
   */
  entries: TopK_Entry[];
};

/**
 * Describes the message rill.runtime.v1.TopK.
 * Use `create(TopKSchema)` to create a new message.
 */
export const TopKSchema: GenMessage<TopK> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 48);

/**
 * @generated from message rill.runtime.v1.TopK.Entry
 */
export type TopK_Entry = Message<"rill.runtime.v1.TopK.Entry"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Value value = 1;
   */
  value?: Value;

  /**
   * Not optional, not null
   *
   * @generated from field: double count = 2;
   */
  count: number;
};

/**
 * Describes the message rill.runtime.v1.TopK.Entry.
 * Use `create(TopK_EntrySchema)` to create a new message.
 */
export const TopK_EntrySchema: GenMessage<TopK_Entry> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 48, 0);

/**
 * @generated from message rill.runtime.v1.ColumnNullCountRequest
 */
export type ColumnNullCountRequest = Message<"rill.runtime.v1.ColumnNullCountRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnNullCountRequest.
 * Use `create(ColumnNullCountRequestSchema)` to create a new message.
 */
export const ColumnNullCountRequestSchema: GenMessage<ColumnNullCountRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 49);

/**
 * @generated from message rill.runtime.v1.ColumnNullCountResponse
 */
export type ColumnNullCountResponse = Message<"rill.runtime.v1.ColumnNullCountResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: double count = 1;
   */
  count: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnNullCountResponse.
 * Use `create(ColumnNullCountResponseSchema)` to create a new message.
 */
export const ColumnNullCountResponseSchema: GenMessage<ColumnNullCountResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 50);

/**
 * @generated from message rill.runtime.v1.ColumnDescriptiveStatisticsRequest
 */
export type ColumnDescriptiveStatisticsRequest = Message<"rill.runtime.v1.ColumnDescriptiveStatisticsRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnDescriptiveStatisticsRequest.
 * Use `create(ColumnDescriptiveStatisticsRequestSchema)` to create a new message.
 */
export const ColumnDescriptiveStatisticsRequestSchema: GenMessage<ColumnDescriptiveStatisticsRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 51);

/**
 * @generated from message rill.runtime.v1.ColumnDescriptiveStatisticsResponse
 */
export type ColumnDescriptiveStatisticsResponse = Message<"rill.runtime.v1.ColumnDescriptiveStatisticsResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.NumericSummary numeric_summary = 1;
   */
  numericSummary?: NumericSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnDescriptiveStatisticsResponse.
 * Use `create(ColumnDescriptiveStatisticsResponseSchema)` to create a new message.
 */
export const ColumnDescriptiveStatisticsResponseSchema: GenMessage<ColumnDescriptiveStatisticsResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 52);

/**
 * @generated from message rill.runtime.v1.NumericSummary
 */
export type NumericSummary = Message<"rill.runtime.v1.NumericSummary"> & {
  /**
   * @generated from oneof rill.runtime.v1.NumericSummary.case
   */
  case: {
    /**
     * @generated from field: rill.runtime.v1.NumericHistogramBins numeric_histogram_bins = 1;
     */
    value: NumericHistogramBins;
    case: "numericHistogramBins";
  } | {
    /**
     * @generated from field: rill.runtime.v1.NumericStatistics numeric_statistics = 2;
     */
    value: NumericStatistics;
    case: "numericStatistics";
  } | {
    /**
     * @generated from field: rill.runtime.v1.NumericOutliers numeric_outliers = 3;
     */
    value: NumericOutliers;
    case: "numericOutliers";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message rill.runtime.v1.NumericSummary.
 * Use `create(NumericSummarySchema)` to create a new message.
 */
export const NumericSummarySchema: GenMessage<NumericSummary> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 53);

/**
 * All fields are not null
 *
 * @generated from message rill.runtime.v1.NumericHistogramBins
 */
export type NumericHistogramBins = Message<"rill.runtime.v1.NumericHistogramBins"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.NumericHistogramBins.Bin bins = 1;
   */
  bins: NumericHistogramBins_Bin[];
};

/**
 * Describes the message rill.runtime.v1.NumericHistogramBins.
 * Use `create(NumericHistogramBinsSchema)` to create a new message.
 */
export const NumericHistogramBinsSchema: GenMessage<NumericHistogramBins> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 54);

/**
 * @generated from message rill.runtime.v1.NumericHistogramBins.Bin
 */
export type NumericHistogramBins_Bin = Message<"rill.runtime.v1.NumericHistogramBins.Bin"> & {
  /**
   * @generated from field: int32 bucket = 1;
   */
  bucket: number;

  /**
   * @generated from field: double low = 2;
   */
  low: number;

  /**
   * @generated from field: double midpoint = 3;
   */
  midpoint: number;

  /**
   * @generated from field: double high = 4;
   */
  high: number;

  /**
   * @generated from field: double count = 5;
   */
  count: number;
};

/**
 * Describes the message rill.runtime.v1.NumericHistogramBins.Bin.
 * Use `create(NumericHistogramBins_BinSchema)` to create a new message.
 */
export const NumericHistogramBins_BinSchema: GenMessage<NumericHistogramBins_Bin> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 54, 0);

/**
 * All fields are not null
 *
 * @generated from message rill.runtime.v1.NumericStatistics
 */
export type NumericStatistics = Message<"rill.runtime.v1.NumericStatistics"> & {
  /**
   * @generated from field: double min = 1;
   */
  min: number;

  /**
   * @generated from field: double max = 2;
   */
  max: number;

  /**
   * @generated from field: double mean = 3;
   */
  mean: number;

  /**
   * @generated from field: double q25 = 4;
   */
  q25: number;

  /**
   * @generated from field: double q50 = 5;
   */
  q50: number;

  /**
   * @generated from field: double q75 = 6;
   */
  q75: number;

  /**
   * @generated from field: double sd = 7;
   */
  sd: number;
};

/**
 * Describes the message rill.runtime.v1.NumericStatistics.
 * Use `create(NumericStatisticsSchema)` to create a new message.
 */
export const NumericStatisticsSchema: GenMessage<NumericStatistics> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 55);

/**
 * All fields are not null
 *
 * @generated from message rill.runtime.v1.NumericOutliers
 */
export type NumericOutliers = Message<"rill.runtime.v1.NumericOutliers"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.NumericOutliers.Outlier outliers = 1;
   */
  outliers: NumericOutliers_Outlier[];
};

/**
 * Describes the message rill.runtime.v1.NumericOutliers.
 * Use `create(NumericOutliersSchema)` to create a new message.
 */
export const NumericOutliersSchema: GenMessage<NumericOutliers> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 56);

/**
 * @generated from message rill.runtime.v1.NumericOutliers.Outlier
 */
export type NumericOutliers_Outlier = Message<"rill.runtime.v1.NumericOutliers.Outlier"> & {
  /**
   * @generated from field: int32 bucket = 1;
   */
  bucket: number;

  /**
   * @generated from field: double low = 2;
   */
  low: number;

  /**
   * @generated from field: double high = 3;
   */
  high: number;

  /**
   * @generated from field: bool present = 4;
   */
  present: boolean;

  /**
   * @generated from field: int32 count = 5;
   */
  count: number;
};

/**
 * Describes the message rill.runtime.v1.NumericOutliers.Outlier.
 * Use `create(NumericOutliers_OutlierSchema)` to create a new message.
 */
export const NumericOutliers_OutlierSchema: GenMessage<NumericOutliers_Outlier> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 56, 0);

/**
 * @generated from message rill.runtime.v1.ColumnTimeGrainRequest
 */
export type ColumnTimeGrainRequest = Message<"rill.runtime.v1.ColumnTimeGrainRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeGrainRequest.
 * Use `create(ColumnTimeGrainRequestSchema)` to create a new message.
 */
export const ColumnTimeGrainRequestSchema: GenMessage<ColumnTimeGrainRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 57);

/**
 * @generated from message rill.runtime.v1.ColumnTimeGrainResponse
 */
export type ColumnTimeGrainResponse = Message<"rill.runtime.v1.ColumnTimeGrainResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.TimeGrain time_grain = 1;
   */
  timeGrain: TimeGrain;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeGrainResponse.
 * Use `create(ColumnTimeGrainResponseSchema)` to create a new message.
 */
export const ColumnTimeGrainResponseSchema: GenMessage<ColumnTimeGrainResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 58);

/**
 * @generated from message rill.runtime.v1.ColumnNumericHistogramRequest
 */
export type ColumnNumericHistogramRequest = Message<"rill.runtime.v1.ColumnNumericHistogramRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 6;
   */
  connector: string;

  /**
   * @generated from field: string database = 7;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 8;
   */
  databaseSchema: string;

  /**
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: rill.runtime.v1.HistogramMethod histogram_method = 4;
   */
  histogramMethod: HistogramMethod;

  /**
   * @generated from field: int32 priority = 5;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnNumericHistogramRequest.
 * Use `create(ColumnNumericHistogramRequestSchema)` to create a new message.
 */
export const ColumnNumericHistogramRequestSchema: GenMessage<ColumnNumericHistogramRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 59);

/**
 * @generated from message rill.runtime.v1.ColumnNumericHistogramResponse
 */
export type ColumnNumericHistogramResponse = Message<"rill.runtime.v1.ColumnNumericHistogramResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.NumericSummary numeric_summary = 1;
   */
  numericSummary?: NumericSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnNumericHistogramResponse.
 * Use `create(ColumnNumericHistogramResponseSchema)` to create a new message.
 */
export const ColumnNumericHistogramResponseSchema: GenMessage<ColumnNumericHistogramResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 60);

/**
 * @generated from message rill.runtime.v1.ColumnRugHistogramRequest
 */
export type ColumnRugHistogramRequest = Message<"rill.runtime.v1.ColumnRugHistogramRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnRugHistogramRequest.
 * Use `create(ColumnRugHistogramRequestSchema)` to create a new message.
 */
export const ColumnRugHistogramRequestSchema: GenMessage<ColumnRugHistogramRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 61);

/**
 * @generated from message rill.runtime.v1.ColumnRugHistogramResponse
 */
export type ColumnRugHistogramResponse = Message<"rill.runtime.v1.ColumnRugHistogramResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.NumericSummary numeric_summary = 1;
   */
  numericSummary?: NumericSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnRugHistogramResponse.
 * Use `create(ColumnRugHistogramResponseSchema)` to create a new message.
 */
export const ColumnRugHistogramResponseSchema: GenMessage<ColumnRugHistogramResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 62);

/**
 * @generated from message rill.runtime.v1.ColumnTimeRangeRequest
 */
export type ColumnTimeRangeRequest = Message<"rill.runtime.v1.ColumnTimeRangeRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeRangeRequest.
 * Use `create(ColumnTimeRangeRequestSchema)` to create a new message.
 */
export const ColumnTimeRangeRequestSchema: GenMessage<ColumnTimeRangeRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 63);

/**
 * @generated from message rill.runtime.v1.ColumnTimeRangeResponse
 */
export type ColumnTimeRangeResponse = Message<"rill.runtime.v1.ColumnTimeRangeResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.TimeRangeSummary time_range_summary = 1;
   */
  timeRangeSummary?: TimeRangeSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeRangeResponse.
 * Use `create(ColumnTimeRangeResponseSchema)` to create a new message.
 */
export const ColumnTimeRangeResponseSchema: GenMessage<ColumnTimeRangeResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 64);

/**
 * @generated from message rill.runtime.v1.TimeRangeSummary
 */
export type TimeRangeSummary = Message<"rill.runtime.v1.TimeRangeSummary"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Timestamp min = 1;
   */
  min?: Timestamp;

  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Timestamp max = 2;
   */
  max?: Timestamp;

  /**
   * Not optional, not null
   *
   * @generated from field: rill.runtime.v1.TimeRangeSummary.Interval interval = 3;
   */
  interval?: TimeRangeSummary_Interval;
};

/**
 * Describes the message rill.runtime.v1.TimeRangeSummary.
 * Use `create(TimeRangeSummarySchema)` to create a new message.
 */
export const TimeRangeSummarySchema: GenMessage<TimeRangeSummary> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 65);

/**
 * @generated from message rill.runtime.v1.TimeRangeSummary.Interval
 */
export type TimeRangeSummary_Interval = Message<"rill.runtime.v1.TimeRangeSummary.Interval"> & {
  /**
   * @generated from field: int32 months = 1;
   */
  months: number;

  /**
   * @generated from field: int32 days = 2;
   */
  days: number;

  /**
   * @generated from field: int64 micros = 3;
   */
  micros: bigint;
};

/**
 * Describes the message rill.runtime.v1.TimeRangeSummary.Interval.
 * Use `create(TimeRangeSummary_IntervalSchema)` to create a new message.
 */
export const TimeRangeSummary_IntervalSchema: GenMessage<TimeRangeSummary_Interval> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 65, 0);

/**
 * @generated from message rill.runtime.v1.ColumnCardinalityRequest
 */
export type ColumnCardinalityRequest = Message<"rill.runtime.v1.ColumnCardinalityRequest"> & {
  /**
   * Required
   *
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Required
   *
   * @generated from field: string column_name = 3;
   */
  columnName: string;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.ColumnCardinalityRequest.
 * Use `create(ColumnCardinalityRequestSchema)` to create a new message.
 */
export const ColumnCardinalityRequestSchema: GenMessage<ColumnCardinalityRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 66);

/**
 * @generated from message rill.runtime.v1.ColumnCardinalityResponse
 */
export type ColumnCardinalityResponse = Message<"rill.runtime.v1.ColumnCardinalityResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: rill.runtime.v1.CategoricalSummary categorical_summary = 1;
   */
  categoricalSummary?: CategoricalSummary;
};

/**
 * Describes the message rill.runtime.v1.ColumnCardinalityResponse.
 * Use `create(ColumnCardinalityResponseSchema)` to create a new message.
 */
export const ColumnCardinalityResponseSchema: GenMessage<ColumnCardinalityResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 67);

/**
 * @generated from message rill.runtime.v1.ColumnTimeSeriesRequest
 */
export type ColumnTimeSeriesRequest = Message<"rill.runtime.v1.ColumnTimeSeriesRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 11;
   */
  connector: string;

  /**
   * @generated from field: string database = 12;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 13;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * Optional. Defaults to [count(*)]
   *
   * @generated from field: repeated rill.runtime.v1.ColumnTimeSeriesRequest.BasicMeasure measures = 3;
   */
  measures: ColumnTimeSeriesRequest_BasicMeasure[];

  /**
   * Required
   *
   * @generated from field: string timestamp_column_name = 4;
   */
  timestampColumnName: string;

  /**
   * Optional. Defaults to [min, max)
   *
   * @generated from field: rill.runtime.v1.TimeSeriesTimeRange time_range = 5;
   */
  timeRange?: TimeSeriesTimeRange;

  /**
   * Optional. Spark is not calculated if ommitted. See http://www.vldb.org/pvldb/vol7/p797-jugel.pdf
   *
   * @generated from field: int32 pixels = 7;
   */
  pixels: number;

  /**
   * Unused
   *
   * @generated from field: int32 sample_size = 8;
   */
  sampleSize: number;

  /**
   * @generated from field: int32 priority = 9;
   */
  priority: number;

  /**
   * Optional. IANA format, ie Europe/Copenhagen. Defaults to UTC
   *
   * @generated from field: string time_zone = 10;
   */
  timeZone: string;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeSeriesRequest.
 * Use `create(ColumnTimeSeriesRequestSchema)` to create a new message.
 */
export const ColumnTimeSeriesRequestSchema: GenMessage<ColumnTimeSeriesRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 68);

/**
 * @generated from message rill.runtime.v1.ColumnTimeSeriesRequest.BasicMeasure
 */
export type ColumnTimeSeriesRequest_BasicMeasure = Message<"rill.runtime.v1.ColumnTimeSeriesRequest.BasicMeasure"> & {
  /**
   * Unused
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Required. IE 'count(*)'
   *
   * @generated from field: string expression = 2;
   */
  expression: string;

  /**
   * Optional. Defaults to 'measure_{i}', ie measure_0
   *
   * @generated from field: string sql_name = 3;
   */
  sqlName: string;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeSeriesRequest.BasicMeasure.
 * Use `create(ColumnTimeSeriesRequest_BasicMeasureSchema)` to create a new message.
 */
export const ColumnTimeSeriesRequest_BasicMeasureSchema: GenMessage<ColumnTimeSeriesRequest_BasicMeasure> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 68, 0);

/**
 * @generated from message rill.runtime.v1.ColumnTimeSeriesResponse
 */
export type ColumnTimeSeriesResponse = Message<"rill.runtime.v1.ColumnTimeSeriesResponse"> & {
  /**
   * @generated from field: rill.runtime.v1.TimeSeriesResponse rollup = 1;
   */
  rollup?: TimeSeriesResponse;
};

/**
 * Describes the message rill.runtime.v1.ColumnTimeSeriesResponse.
 * Use `create(ColumnTimeSeriesResponseSchema)` to create a new message.
 */
export const ColumnTimeSeriesResponseSchema: GenMessage<ColumnTimeSeriesResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 69);

/**
 * Either [start, end] or interval should be specified
 *
 * @generated from message rill.runtime.v1.TimeSeriesTimeRange
 */
export type TimeSeriesTimeRange = Message<"rill.runtime.v1.TimeSeriesTimeRange"> & {
  /**
   * Optional. Defaults to min
   *
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * Optional. Defaults to max
   *
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * Optional. Defaults to the most human friendly for [min, max) range, ie 'minute' for hour range
   *
   * @generated from field: rill.runtime.v1.TimeGrain interval = 4;
   */
  interval: TimeGrain;
};

/**
 * Describes the message rill.runtime.v1.TimeSeriesTimeRange.
 * Use `create(TimeSeriesTimeRangeSchema)` to create a new message.
 */
export const TimeSeriesTimeRangeSchema: GenMessage<TimeSeriesTimeRange> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 70);

/**
 * @generated from message rill.runtime.v1.TimeSeriesResponse
 */
export type TimeSeriesResponse = Message<"rill.runtime.v1.TimeSeriesResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: repeated rill.runtime.v1.TimeSeriesValue results = 1;
   */
  results: TimeSeriesValue[];

  /**
   * Not optional, not null, empty if 'pixels' is not specified
   *
   * @generated from field: repeated rill.runtime.v1.TimeSeriesValue spark = 2;
   */
  spark: TimeSeriesValue[];

  /**
   * Not optional, not null, unused
   *
   * @generated from field: int32 sample_size = 4;
   */
  sampleSize: number;
};

/**
 * Describes the message rill.runtime.v1.TimeSeriesResponse.
 * Use `create(TimeSeriesResponseSchema)` to create a new message.
 */
export const TimeSeriesResponseSchema: GenMessage<TimeSeriesResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 71);

/**
 * @generated from message rill.runtime.v1.TimeSeriesValue
 */
export type TimeSeriesValue = Message<"rill.runtime.v1.TimeSeriesValue"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Timestamp ts = 1;
   */
  ts?: Timestamp;

  /**
   * 0-based. Can be NaN if timestamps are the same. (Used for spark data only.)
   *
   * @generated from field: double bin = 2;
   */
  bin: number;

  /**
   * Not optional, not null
   *
   * @generated from field: google.protobuf.Struct records = 3;
   */
  records?: JsonObject;
};

/**
 * Describes the message rill.runtime.v1.TimeSeriesValue.
 * Use `create(TimeSeriesValueSchema)` to create a new message.
 */
export const TimeSeriesValueSchema: GenMessage<TimeSeriesValue> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 72);

/**
 * @generated from message rill.runtime.v1.TableCardinalityRequest
 */
export type TableCardinalityRequest = Message<"rill.runtime.v1.TableCardinalityRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 4;
   */
  connector: string;

  /**
   * @generated from field: string database = 5;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 6;
   */
  databaseSchema: string;

  /**
   * Required
   *
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: int32 priority = 3;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.TableCardinalityRequest.
 * Use `create(TableCardinalityRequestSchema)` to create a new message.
 */
export const TableCardinalityRequestSchema: GenMessage<TableCardinalityRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 73);

/**
 * @generated from message rill.runtime.v1.TableCardinalityResponse
 */
export type TableCardinalityResponse = Message<"rill.runtime.v1.TableCardinalityResponse"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: int64 cardinality = 1;
   */
  cardinality: bigint;
};

/**
 * Describes the message rill.runtime.v1.TableCardinalityResponse.
 * Use `create(TableCardinalityResponseSchema)` to create a new message.
 */
export const TableCardinalityResponseSchema: GenMessage<TableCardinalityResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 74);

/**
 * @generated from message rill.runtime.v1.TableColumnsRequest
 */
export type TableColumnsRequest = Message<"rill.runtime.v1.TableColumnsRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 4;
   */
  connector: string;

  /**
   * @generated from field: string database = 5;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 6;
   */
  databaseSchema: string;

  /**
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: int32 priority = 3;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.TableColumnsRequest.
 * Use `create(TableColumnsRequestSchema)` to create a new message.
 */
export const TableColumnsRequestSchema: GenMessage<TableColumnsRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 75);

/**
 * @generated from message rill.runtime.v1.TableColumnsResponse
 */
export type TableColumnsResponse = Message<"rill.runtime.v1.TableColumnsResponse"> & {
  /**
   * @generated from field: repeated rill.runtime.v1.ProfileColumn profile_columns = 1;
   */
  profileColumns: ProfileColumn[];

  /**
   * @generated from field: map<string, string> unsupported_columns = 2;
   */
  unsupportedColumns: { [key: string]: string };
};

/**
 * Describes the message rill.runtime.v1.TableColumnsResponse.
 * Use `create(TableColumnsResponseSchema)` to create a new message.
 */
export const TableColumnsResponseSchema: GenMessage<TableColumnsResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 76);

/**
 * @generated from message rill.runtime.v1.ProfileColumn
 */
export type ProfileColumn = Message<"rill.runtime.v1.ProfileColumn"> & {
  /**
   * Not optional, not null
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Not optional, not null
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Unused
   *
   * @generated from field: int32 largest_string_length = 3;
   */
  largestStringLength: number;
};

/**
 * Describes the message rill.runtime.v1.ProfileColumn.
 * Use `create(ProfileColumnSchema)` to create a new message.
 */
export const ProfileColumnSchema: GenMessage<ProfileColumn> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 77);

/**
 * @generated from message rill.runtime.v1.TableRowsRequest
 */
export type TableRowsRequest = Message<"rill.runtime.v1.TableRowsRequest"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string connector = 5;
   */
  connector: string;

  /**
   * @generated from field: string database = 6;
   */
  database: string;

  /**
   * @generated from field: string database_schema = 7;
   */
  databaseSchema: string;

  /**
   * @generated from field: string table_name = 2;
   */
  tableName: string;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  /**
   * @generated from field: int32 priority = 4;
   */
  priority: number;
};

/**
 * Describes the message rill.runtime.v1.TableRowsRequest.
 * Use `create(TableRowsRequestSchema)` to create a new message.
 */
export const TableRowsRequestSchema: GenMessage<TableRowsRequest> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 78);

/**
 * @generated from message rill.runtime.v1.TableRowsResponse
 */
export type TableRowsResponse = Message<"rill.runtime.v1.TableRowsResponse"> & {
  /**
   * @generated from field: repeated google.protobuf.Struct data = 1;
   */
  data: JsonObject[];
};

/**
 * Describes the message rill.runtime.v1.TableRowsResponse.
 * Use `create(TableRowsResponseSchema)` to create a new message.
 */
export const TableRowsResponseSchema: GenMessage<TableRowsResponse> = /*@__PURE__*/
  messageDesc(file_rill_runtime_v1_queries, 79);

/**
 * @generated from enum rill.runtime.v1.BuiltinMeasure
 */
export enum BuiltinMeasure {
  /**
   * @generated from enum value: BUILTIN_MEASURE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BUILTIN_MEASURE_COUNT = 1;
   */
  COUNT = 1,

  /**
   * @generated from enum value: BUILTIN_MEASURE_COUNT_DISTINCT = 2;
   */
  COUNT_DISTINCT = 2,
}

/**
 * Describes the enum rill.runtime.v1.BuiltinMeasure.
 */
export const BuiltinMeasureSchema: GenEnum<BuiltinMeasure> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_queries, 0);

/**
 * Present for backwards compatibility
 *
 * @generated from enum rill.runtime.v1.MetricsViewComparisonSortType
 */
export enum MetricsViewComparisonSortType {
  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_SORT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_SORT_TYPE_BASE_VALUE = 1;
   */
  BASE_VALUE = 1,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_SORT_TYPE_COMPARISON_VALUE = 2;
   */
  COMPARISON_VALUE = 2,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_SORT_TYPE_ABS_DELTA = 3;
   */
  ABS_DELTA = 3,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_SORT_TYPE_REL_DELTA = 4;
   */
  REL_DELTA = 4,
}

/**
 * Describes the enum rill.runtime.v1.MetricsViewComparisonSortType.
 */
export const MetricsViewComparisonSortTypeSchema: GenEnum<MetricsViewComparisonSortType> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_queries, 1);

/**
 * @generated from enum rill.runtime.v1.MetricsViewComparisonMeasureType
 */
export enum MetricsViewComparisonMeasureType {
  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_MEASURE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_MEASURE_TYPE_BASE_VALUE = 1;
   */
  BASE_VALUE = 1,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_MEASURE_TYPE_COMPARISON_VALUE = 2;
   */
  COMPARISON_VALUE = 2,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_MEASURE_TYPE_ABS_DELTA = 3;
   */
  ABS_DELTA = 3,

  /**
   * @generated from enum value: METRICS_VIEW_COMPARISON_MEASURE_TYPE_REL_DELTA = 4;
   */
  REL_DELTA = 4,
}

/**
 * Describes the enum rill.runtime.v1.MetricsViewComparisonMeasureType.
 */
export const MetricsViewComparisonMeasureTypeSchema: GenEnum<MetricsViewComparisonMeasureType> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_queries, 2);

/**
 * @generated from enum rill.runtime.v1.HistogramMethod
 */
export enum HistogramMethod {
  /**
   * @generated from enum value: HISTOGRAM_METHOD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: HISTOGRAM_METHOD_FD = 1;
   */
  FD = 1,

  /**
   * @generated from enum value: HISTOGRAM_METHOD_DIAGNOSTIC = 2;
   */
  DIAGNOSTIC = 2,
}

/**
 * Describes the enum rill.runtime.v1.HistogramMethod.
 */
export const HistogramMethodSchema: GenEnum<HistogramMethod> = /*@__PURE__*/
  enumDesc(file_rill_runtime_v1_queries, 3);

/**
 * @generated from service rill.runtime.v1.QueryService
 */
export const QueryService: GenService<{
  /**
   * Query runs a SQL query against the instance's OLAP datastore.
   *
   * @generated from rpc rill.runtime.v1.QueryService.Query
   */
  query: {
    methodKind: "unary";
    input: typeof QueryRequestSchema;
    output: typeof QueryResponseSchema;
  },
  /**
   * Batch request with different queries
   *
   * @generated from rpc rill.runtime.v1.QueryService.QueryBatch
   */
  queryBatch: {
    methodKind: "server_streaming";
    input: typeof QueryBatchRequestSchema;
    output: typeof QueryBatchResponseSchema;
  },
  /**
   * Export builds a URL to download the results of a query as a file.
   *
   * @generated from rpc rill.runtime.v1.QueryService.Export
   */
  export: {
    methodKind: "unary";
    input: typeof ExportRequestSchema;
    output: typeof ExportResponseSchema;
  },
  /**
   * MetricsViewAggregation is a generic API for running group-by/pivot queries against a metrics view.
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewAggregation
   */
  metricsViewAggregation: {
    methodKind: "unary";
    input: typeof MetricsViewAggregationRequestSchema;
    output: typeof MetricsViewAggregationResponseSchema;
  },
  /**
   *
   * Deprecated - use MetricsViewComparison instead.
   * MetricsViewToplist returns the top dimension values of a metrics view sorted by one or more measures.
   * It's a convenience API for querying a metrics view.
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewToplist
   */
  metricsViewToplist: {
    methodKind: "unary";
    input: typeof MetricsViewToplistRequestSchema;
    output: typeof MetricsViewToplistResponseSchema;
  },
  /**
   *
   * MetricsViewComparison returns a toplist containing comparison data of another toplist (same dimension/measure but a different time range).
   * Returns a toplist without comparison data if comparison time range is omitted.
   *
   * ie. comparsion toplist:
   * | measure1_base | measure1_previous   | measure1__delta_abs | measure1__delta_rel | dimension |
   * |---------------|---------------------|---------------------|--------------------|-----------|
   * | 2             | 2                   | 0                   | 0                  | Safari    |
   * | 1             | 0                   | 1                   | N/A                | Chrome    |
   * | 0             | 4                   | -4                  | -1.0               | Firefox   |
   *
   * ie. toplist:
   * | measure1 | measure2 | dimension |
   * |----------|----------|-----------|
   * | 2        | 45       | Safari    |
   * | 1        | 350      | Chrome    |
   * | 0        | 25       | Firefox   |
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewComparison
   */
  metricsViewComparison: {
    methodKind: "unary";
    input: typeof MetricsViewComparisonRequestSchema;
    output: typeof MetricsViewComparisonResponseSchema;
  },
  /**
   * MetricsViewTimeSeries returns time series for the measures in the metrics view.
   * It's a convenience API for querying a metrics view.
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewTimeSeries
   */
  metricsViewTimeSeries: {
    methodKind: "unary";
    input: typeof MetricsViewTimeSeriesRequestSchema;
    output: typeof MetricsViewTimeSeriesResponseSchema;
  },
  /**
   * MetricsViewTotals returns totals over a time period for the measures in a metrics view.
   * It's a convenience API for querying a metrics view.
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewTotals
   */
  metricsViewTotals: {
    methodKind: "unary";
    input: typeof MetricsViewTotalsRequestSchema;
    output: typeof MetricsViewTotalsResponseSchema;
  },
  /**
   *
   * MetricsViewRows returns the underlying model rows matching a metrics view time range and filter(s).
   *
   * ie. without granularity
   * | column1 | column2 | dimension |
   * |---------|---------|-----------|
   * | 2       | 2       | Safari    |
   * | 1       | 0       | Chrome    |
   * | 0       | 4       | Firefox   |
   *
   * ie. with granularity
   * | timestamp__day0      | column1 | column2 | dimension |
   * |----------------------|---------|---------|-----------|
   * | 2022-01-01T00:00:00Z | 2       | 2       | Safari    |
   * | 2022-01-01T00:00:00Z | 1       | 0       | Chrome    |
   * | 2022-01-01T00:00:00Z | 0       | 4       | Firefox   |
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewRows
   */
  metricsViewRows: {
    methodKind: "unary";
    input: typeof MetricsViewRowsRequestSchema;
    output: typeof MetricsViewRowsResponseSchema;
  },
  /**
   * MetricsViewTimeRange Get the time range summaries (min, max) for time column in a metrics view
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewTimeRange
   */
  metricsViewTimeRange: {
    methodKind: "unary";
    input: typeof MetricsViewTimeRangeRequestSchema;
    output: typeof MetricsViewTimeRangeResponseSchema;
  },
  /**
   * MetricsViewSchema Get the data types of measures and dimensions
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewSchema
   */
  metricsViewSchema: {
    methodKind: "unary";
    input: typeof MetricsViewSchemaRequestSchema;
    output: typeof MetricsViewSchemaResponseSchema;
  },
  /**
   * MetricsViewSearch Get the data types of measures and dimensions
   *
   * @generated from rpc rill.runtime.v1.QueryService.MetricsViewSearch
   */
  metricsViewSearch: {
    methodKind: "unary";
    input: typeof MetricsViewSearchRequestSchema;
    output: typeof MetricsViewSearchResponseSchema;
  },
  /**
   * ColumnRollupInterval returns the minimum time granularity (as well as the time range) for a specified timestamp column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnRollupInterval
   */
  columnRollupInterval: {
    methodKind: "unary";
    input: typeof ColumnRollupIntervalRequestSchema;
    output: typeof ColumnRollupIntervalResponseSchema;
  },
  /**
   * Get TopK elements from a table for a column given an agg function
   * agg function and k are optional, defaults are count(*) and 50 respectively
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnTopK
   */
  columnTopK: {
    methodKind: "unary";
    input: typeof ColumnTopKRequestSchema;
    output: typeof ColumnTopKResponseSchema;
  },
  /**
   * Get the number of nulls in a column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnNullCount
   */
  columnNullCount: {
    methodKind: "unary";
    input: typeof ColumnNullCountRequestSchema;
    output: typeof ColumnNullCountResponseSchema;
  },
  /**
   * Get basic stats for a numeric column like min, max, mean, stddev, etc
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnDescriptiveStatistics
   */
  columnDescriptiveStatistics: {
    methodKind: "unary";
    input: typeof ColumnDescriptiveStatisticsRequestSchema;
    output: typeof ColumnDescriptiveStatisticsResponseSchema;
  },
  /**
   * Estimates the smallest time grain present in the column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnTimeGrain
   */
  columnTimeGrain: {
    methodKind: "unary";
    input: typeof ColumnTimeGrainRequestSchema;
    output: typeof ColumnTimeGrainResponseSchema;
  },
  /**
   * Get the histogram for values in a column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnNumericHistogram
   */
  columnNumericHistogram: {
    methodKind: "unary";
    input: typeof ColumnNumericHistogramRequestSchema;
    output: typeof ColumnNumericHistogramResponseSchema;
  },
  /**
   * Get outliers for a numeric column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnRugHistogram
   */
  columnRugHistogram: {
    methodKind: "unary";
    input: typeof ColumnRugHistogramRequestSchema;
    output: typeof ColumnRugHistogramResponseSchema;
  },
  /**
   * Get the time range summaries (min, max) for a column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnTimeRange
   */
  columnTimeRange: {
    methodKind: "unary";
    input: typeof ColumnTimeRangeRequestSchema;
    output: typeof ColumnTimeRangeResponseSchema;
  },
  /**
   * Get cardinality for a column
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnCardinality
   */
  columnCardinality: {
    methodKind: "unary";
    input: typeof ColumnCardinalityRequestSchema;
    output: typeof ColumnCardinalityResponseSchema;
  },
  /**
   * Generate time series for the given measures (aggregation expressions) along with the sparkline timeseries
   *
   * @generated from rpc rill.runtime.v1.QueryService.ColumnTimeSeries
   */
  columnTimeSeries: {
    methodKind: "unary";
    input: typeof ColumnTimeSeriesRequestSchema;
    output: typeof ColumnTimeSeriesResponseSchema;
  },
  /**
   * TableCardinality returns row count
   *
   * @generated from rpc rill.runtime.v1.QueryService.TableCardinality
   */
  tableCardinality: {
    methodKind: "unary";
    input: typeof TableCardinalityRequestSchema;
    output: typeof TableCardinalityResponseSchema;
  },
  /**
   * TableColumns returns column profiles
   *
   * @generated from rpc rill.runtime.v1.QueryService.TableColumns
   */
  tableColumns: {
    methodKind: "unary";
    input: typeof TableColumnsRequestSchema;
    output: typeof TableColumnsResponseSchema;
  },
  /**
   * TableRows returns table rows
   *
   * @generated from rpc rill.runtime.v1.QueryService.TableRows
   */
  tableRows: {
    methodKind: "unary";
    input: typeof TableRowsRequestSchema;
    output: typeof TableRowsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_rill_runtime_v1_queries, 0);

