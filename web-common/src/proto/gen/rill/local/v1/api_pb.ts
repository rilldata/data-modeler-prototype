// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file rill/local/v1/api.proto (package rill.local.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { GithubPermission, User } from "../../admin/v1/api_pb";
import { file_rill_admin_v1_api } from "../../admin/v1/api_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file rill/local/v1/api.proto.
 */
export const file_rill_local_v1_api: GenFile = /*@__PURE__*/
  fileDesc("ChdyaWxsL2xvY2FsL3YxL2FwaS5wcm90bxINcmlsbC5sb2NhbC52MSINCgtQaW5nUmVxdWVzdCI4CgxQaW5nUmVzcG9uc2USKAoEdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiFAoSR2V0TWV0YWRhdGFSZXF1ZXN0IvABChNHZXRNZXRhZGF0YVJlc3BvbnNlEhMKC2luc3RhbmNlX2lkGAEgASgJEhQKDHByb2plY3RfcGF0aBgCIAEoCRISCgppbnN0YWxsX2lkGAMgASgJEg8KB3VzZXJfaWQYBCABKAkSDwoHdmVyc2lvbhgFIAEoCRIUCgxidWlsZF9jb21taXQYBiABKAkSEgoKYnVpbGRfdGltZRgHIAEoCRIOCgZpc19kZXYYCCABKAgSGQoRYW5hbHl0aWNzX2VuYWJsZWQYCSABKAgSEAoIcmVhZG9ubHkYCiABKAgSEQoJZ3JwY19wb3J0GAsgASgFIhMKEUdldFZlcnNpb25SZXF1ZXN0IjUKEkdldFZlcnNpb25SZXNwb25zZRIPCgdjdXJyZW50GAEgASgJEg4KBmxhdGVzdBgCIAEoCSIZChdEZXBsb3lWYWxpZGF0aW9uUmVxdWVzdCLvBQoYRGVwbG95VmFsaWRhdGlvblJlc3BvbnNlEhgKEGlzX2F1dGhlbnRpY2F0ZWQYASABKAgSEQoJbG9naW5fdXJsGAIgASgJEhsKE2lzX2dpdGh1Yl9jb25uZWN0ZWQYAyABKAgSHwoXZ2l0aHViX2dyYW50X2FjY2Vzc191cmwYBCABKAkSGAoQZ2l0aHViX3VzZXJfbmFtZRgFIAEoCRI/ChZnaXRodWJfdXNlcl9wZXJtaXNzaW9uGAYgASgOMh8ucmlsbC5hZG1pbi52MS5HaXRodWJQZXJtaXNzaW9uEnMKH2dpdGh1Yl9vcmdhbml6YXRpb25fcGVybWlzc2lvbnMYByADKAsySi5yaWxsLmxvY2FsLnYxLkRlcGxveVZhbGlkYXRpb25SZXNwb25zZS5HaXRodWJPcmdhbml6YXRpb25QZXJtaXNzaW9uc0VudHJ5EhYKDmlzX2dpdGh1Yl9yZXBvGAggASgIEh4KFmlzX2dpdGh1Yl9yZW1vdGVfZm91bmQYCSABKAgSJQodaXNfZ2l0aHViX3JlcG9fYWNjZXNzX2dyYW50ZWQYCiABKAgSEgoKZ2l0aHViX3VybBgLIAEoCRIkChdoYXNfdW5jb21taXR0ZWRfY2hhbmdlcxgMIAEoCEgAiAEBEisKI3JpbGxfb3JnX2V4aXN0c19hc19naXRodWJfdXNlcl9uYW1lGA0gASgIEhYKDnJpbGxfdXNlcl9vcmdzGA4gAygJEhoKEmxvY2FsX3Byb2plY3RfbmFtZRgPIAEoCRIbChNkZXBsb3llZF9wcm9qZWN0X2lkGBAgASgJGmUKIkdpdGh1Yk9yZ2FuaXphdGlvblBlcm1pc3Npb25zRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgOMh8ucmlsbC5hZG1pbi52MS5HaXRodWJQZXJtaXNzaW9uOgI4AUIaChhfaGFzX3VuY29tbWl0dGVkX2NoYW5nZXMiNAoTUHVzaFRvR2l0aHViUmVxdWVzdBIPCgdhY2NvdW50GAEgASgJEgwKBHJlcG8YAiABKAkiSQoUUHVzaFRvR2l0aHViUmVzcG9uc2USEgoKZ2l0aHViX3VybBgBIAEoCRIPCgdhY2NvdW50GAIgASgJEgwKBHJlcG8YAyABKAkiSQoURGVwbG95UHJvamVjdFJlcXVlc3QSCwoDb3JnGAEgASgJEhQKDHByb2plY3RfbmFtZRgCIAEoCRIOCgZ1cGxvYWQYAyABKAgiXgoVRGVwbG95UHJvamVjdFJlc3BvbnNlEhEKCWRlcGxveV9pZBgBIAEoCRILCgNvcmcYAiABKAkSDwoHcHJvamVjdBgDIAEoCRIUCgxmcm9udGVuZF91cmwYBCABKAkiPgoWUmVkZXBsb3lQcm9qZWN0UmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJEhAKCHJldXBsb2FkGAIgASgIIi8KF1JlZGVwbG95UHJvamVjdFJlc3BvbnNlEhQKDGZyb250ZW5kX3VybBgBIAEoCSIXChVHZXRDdXJyZW50VXNlclJlcXVlc3QiOwoWR2V0Q3VycmVudFVzZXJSZXNwb25zZRIhCgR1c2VyGAEgASgLMhMucmlsbC5hZG1pbi52MS5Vc2VyMuMFCgxMb2NhbFNlcnZpY2USQQoEUGluZxIaLnJpbGwubG9jYWwudjEuUGluZ1JlcXVlc3QaGy5yaWxsLmxvY2FsLnYxLlBpbmdSZXNwb25zZSIAElYKC0dldE1ldGFkYXRhEiEucmlsbC5sb2NhbC52MS5HZXRNZXRhZGF0YVJlcXVlc3QaIi5yaWxsLmxvY2FsLnYxLkdldE1ldGFkYXRhUmVzcG9uc2UiABJTCgpHZXRWZXJzaW9uEiAucmlsbC5sb2NhbC52MS5HZXRWZXJzaW9uUmVxdWVzdBohLnJpbGwubG9jYWwudjEuR2V0VmVyc2lvblJlc3BvbnNlIgASZQoQRGVwbG95VmFsaWRhdGlvbhImLnJpbGwubG9jYWwudjEuRGVwbG95VmFsaWRhdGlvblJlcXVlc3QaJy5yaWxsLmxvY2FsLnYxLkRlcGxveVZhbGlkYXRpb25SZXNwb25zZSIAElkKDFB1c2hUb0dpdGh1YhIiLnJpbGwubG9jYWwudjEuUHVzaFRvR2l0aHViUmVxdWVzdBojLnJpbGwubG9jYWwudjEuUHVzaFRvR2l0aHViUmVzcG9uc2UiABJcCg1EZXBsb3lQcm9qZWN0EiMucmlsbC5sb2NhbC52MS5EZXBsb3lQcm9qZWN0UmVxdWVzdBokLnJpbGwubG9jYWwudjEuRGVwbG95UHJvamVjdFJlc3BvbnNlIgASYgoPUmVkZXBsb3lQcm9qZWN0EiUucmlsbC5sb2NhbC52MS5SZWRlcGxveVByb2plY3RSZXF1ZXN0GiYucmlsbC5sb2NhbC52MS5SZWRlcGxveVByb2plY3RSZXNwb25zZSIAEl8KDkdldEN1cnJlbnRVc2VyEiQucmlsbC5sb2NhbC52MS5HZXRDdXJyZW50VXNlclJlcXVlc3QaJS5yaWxsLmxvY2FsLnYxLkdldEN1cnJlbnRVc2VyUmVzcG9uc2UiAEKjAQoRY29tLnJpbGwubG9jYWwudjFCCEFwaVByb3RvUAFaLmdpdGh1Yi5jb20vcmlsbGRhdGEvcmlsbC9yaWxsL2xvY2FsL3YxO2xvY2FsdjGiAgNSTFiqAg1SaWxsLkxvY2FsLlYxygINUmlsbFxMb2NhbFxWMeICGVJpbGxcTG9jYWxcVjFcR1BCTWV0YWRhdGHqAg9SaWxsOjpMb2NhbDo6VjFiBnByb3RvMw", [file_google_protobuf_timestamp, file_rill_admin_v1_api]);

/**
 * @generated from message rill.local.v1.PingRequest
 */
export type PingRequest = Message<"rill.local.v1.PingRequest"> & {
};

/**
 * Describes the message rill.local.v1.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 0);

/**
 * @generated from message rill.local.v1.PingResponse
 */
export type PingResponse = Message<"rill.local.v1.PingResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;
};

/**
 * Describes the message rill.local.v1.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema: GenMessage<PingResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 1);

/**
 * @generated from message rill.local.v1.GetMetadataRequest
 */
export type GetMetadataRequest = Message<"rill.local.v1.GetMetadataRequest"> & {
};

/**
 * Describes the message rill.local.v1.GetMetadataRequest.
 * Use `create(GetMetadataRequestSchema)` to create a new message.
 */
export const GetMetadataRequestSchema: GenMessage<GetMetadataRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 2);

/**
 * @generated from message rill.local.v1.GetMetadataResponse
 */
export type GetMetadataResponse = Message<"rill.local.v1.GetMetadataResponse"> & {
  /**
   * @generated from field: string instance_id = 1;
   */
  instanceId: string;

  /**
   * @generated from field: string project_path = 2;
   */
  projectPath: string;

  /**
   * @generated from field: string install_id = 3;
   */
  installId: string;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * @generated from field: string build_commit = 6;
   */
  buildCommit: string;

  /**
   * @generated from field: string build_time = 7;
   */
  buildTime: string;

  /**
   * @generated from field: bool is_dev = 8;
   */
  isDev: boolean;

  /**
   * @generated from field: bool analytics_enabled = 9;
   */
  analyticsEnabled: boolean;

  /**
   * @generated from field: bool readonly = 10;
   */
  readonly: boolean;

  /**
   * @generated from field: int32 grpc_port = 11;
   */
  grpcPort: number;
};

/**
 * Describes the message rill.local.v1.GetMetadataResponse.
 * Use `create(GetMetadataResponseSchema)` to create a new message.
 */
export const GetMetadataResponseSchema: GenMessage<GetMetadataResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 3);

/**
 * @generated from message rill.local.v1.GetVersionRequest
 */
export type GetVersionRequest = Message<"rill.local.v1.GetVersionRequest"> & {
};

/**
 * Describes the message rill.local.v1.GetVersionRequest.
 * Use `create(GetVersionRequestSchema)` to create a new message.
 */
export const GetVersionRequestSchema: GenMessage<GetVersionRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 4);

/**
 * @generated from message rill.local.v1.GetVersionResponse
 */
export type GetVersionResponse = Message<"rill.local.v1.GetVersionResponse"> & {
  /**
   * @generated from field: string current = 1;
   */
  current: string;

  /**
   * @generated from field: string latest = 2;
   */
  latest: string;
};

/**
 * Describes the message rill.local.v1.GetVersionResponse.
 * Use `create(GetVersionResponseSchema)` to create a new message.
 */
export const GetVersionResponseSchema: GenMessage<GetVersionResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 5);

/**
 * @generated from message rill.local.v1.DeployValidationRequest
 */
export type DeployValidationRequest = Message<"rill.local.v1.DeployValidationRequest"> & {
};

/**
 * Describes the message rill.local.v1.DeployValidationRequest.
 * Use `create(DeployValidationRequestSchema)` to create a new message.
 */
export const DeployValidationRequestSchema: GenMessage<DeployValidationRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 6);

/**
 * @generated from message rill.local.v1.DeployValidationResponse
 */
export type DeployValidationResponse = Message<"rill.local.v1.DeployValidationResponse"> & {
  /**
   * if true below fields are relevant after login
   *
   * @generated from field: bool is_authenticated = 1;
   */
  isAuthenticated: boolean;

  /**
   * redirect to this if is_authenticated is false
   *
   * @generated from field: string login_url = 2;
   */
  loginUrl: string;

  /**
   * if true below fields are relevant after github install
   *
   * @generated from field: bool is_github_connected = 3;
   */
  isGithubConnected: boolean;

  /**
   * redirect to this if is_github_connected or is_github_repo_access_granted is false
   *
   * @generated from field: string github_grant_access_url = 4;
   */
  githubGrantAccessUrl: string;

  /**
   * @generated from field: string github_user_name = 5;
   */
  githubUserName: string;

  /**
   * if unspecified then github app not installed on user account
   *
   * @generated from field: rill.admin.v1.GithubPermission github_user_permission = 6;
   */
  githubUserPermission: GithubPermission;

  /**
   * @generated from field: map<string, rill.admin.v1.GithubPermission> github_organization_permissions = 7;
   */
  githubOrganizationPermissions: { [key: string]: GithubPermission };

  /**
   * @generated from field: bool is_github_repo = 8;
   */
  isGithubRepo: boolean;

  /**
   * only applicable when is_github_repo is true
   *
   * @generated from field: bool is_github_remote_found = 9;
   */
  isGithubRemoteFound: boolean;

  /**
   * relevant only when is_github_repo is true and remote found, if false redirect to github_grant_access_url
   *
   * @generated from field: bool is_github_repo_access_granted = 10;
   */
  isGithubRepoAccessGranted: boolean;

  /**
   * only applicable when is_github_repo is true and remote found
   *
   * @generated from field: string github_url = 11;
   */
  githubUrl: string;

  /**
   * only applicable when is_github_repo is true and remote found
   *
   * @generated from field: optional bool has_uncommitted_changes = 12;
   */
  hasUncommittedChanges?: boolean;

  /**
   * only applicable when user does not have any orgs
   *
   * @generated from field: bool rill_org_exists_as_github_user_name = 13;
   */
  rillOrgExistsAsGithubUserName: boolean;

  /**
   * @generated from field: repeated string rill_user_orgs = 14;
   */
  rillUserOrgs: string[];

  /**
   * @generated from field: string local_project_name = 15;
   */
  localProjectName: string;

  /**
   * @generated from field: string deployed_project_id = 16;
   */
  deployedProjectId: string;
};

/**
 * Describes the message rill.local.v1.DeployValidationResponse.
 * Use `create(DeployValidationResponseSchema)` to create a new message.
 */
export const DeployValidationResponseSchema: GenMessage<DeployValidationResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 7);

/**
 * @generated from message rill.local.v1.PushToGithubRequest
 */
export type PushToGithubRequest = Message<"rill.local.v1.PushToGithubRequest"> & {
  /**
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * @generated from field: string repo = 2;
   */
  repo: string;
};

/**
 * Describes the message rill.local.v1.PushToGithubRequest.
 * Use `create(PushToGithubRequestSchema)` to create a new message.
 */
export const PushToGithubRequestSchema: GenMessage<PushToGithubRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 8);

/**
 * @generated from message rill.local.v1.PushToGithubResponse
 */
export type PushToGithubResponse = Message<"rill.local.v1.PushToGithubResponse"> & {
  /**
   * @generated from field: string github_url = 1;
   */
  githubUrl: string;

  /**
   * @generated from field: string account = 2;
   */
  account: string;

  /**
   * @generated from field: string repo = 3;
   */
  repo: string;
};

/**
 * Describes the message rill.local.v1.PushToGithubResponse.
 * Use `create(PushToGithubResponseSchema)` to create a new message.
 */
export const PushToGithubResponseSchema: GenMessage<PushToGithubResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 9);

/**
 * @generated from message rill.local.v1.DeployProjectRequest
 */
export type DeployProjectRequest = Message<"rill.local.v1.DeployProjectRequest"> & {
  /**
   * @generated from field: string org = 1;
   */
  org: string;

  /**
   * @generated from field: string project_name = 2;
   */
  projectName: string;

  /**
   * @generated from field: bool upload = 3;
   */
  upload: boolean;
};

/**
 * Describes the message rill.local.v1.DeployProjectRequest.
 * Use `create(DeployProjectRequestSchema)` to create a new message.
 */
export const DeployProjectRequestSchema: GenMessage<DeployProjectRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 10);

/**
 * @generated from message rill.local.v1.DeployProjectResponse
 */
export type DeployProjectResponse = Message<"rill.local.v1.DeployProjectResponse"> & {
  /**
   * @generated from field: string deploy_id = 1;
   */
  deployId: string;

  /**
   * @generated from field: string org = 2;
   */
  org: string;

  /**
   * @generated from field: string project = 3;
   */
  project: string;

  /**
   * @generated from field: string frontend_url = 4;
   */
  frontendUrl: string;
};

/**
 * Describes the message rill.local.v1.DeployProjectResponse.
 * Use `create(DeployProjectResponseSchema)` to create a new message.
 */
export const DeployProjectResponseSchema: GenMessage<DeployProjectResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 11);

/**
 * @generated from message rill.local.v1.RedeployProjectRequest
 */
export type RedeployProjectRequest = Message<"rill.local.v1.RedeployProjectRequest"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: bool reupload = 2;
   */
  reupload: boolean;
};

/**
 * Describes the message rill.local.v1.RedeployProjectRequest.
 * Use `create(RedeployProjectRequestSchema)` to create a new message.
 */
export const RedeployProjectRequestSchema: GenMessage<RedeployProjectRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 12);

/**
 * @generated from message rill.local.v1.RedeployProjectResponse
 */
export type RedeployProjectResponse = Message<"rill.local.v1.RedeployProjectResponse"> & {
  /**
   * @generated from field: string frontend_url = 1;
   */
  frontendUrl: string;
};

/**
 * Describes the message rill.local.v1.RedeployProjectResponse.
 * Use `create(RedeployProjectResponseSchema)` to create a new message.
 */
export const RedeployProjectResponseSchema: GenMessage<RedeployProjectResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 13);

/**
 * @generated from message rill.local.v1.GetCurrentUserRequest
 */
export type GetCurrentUserRequest = Message<"rill.local.v1.GetCurrentUserRequest"> & {
};

/**
 * Describes the message rill.local.v1.GetCurrentUserRequest.
 * Use `create(GetCurrentUserRequestSchema)` to create a new message.
 */
export const GetCurrentUserRequestSchema: GenMessage<GetCurrentUserRequest> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 14);

/**
 * @generated from message rill.local.v1.GetCurrentUserResponse
 */
export type GetCurrentUserResponse = Message<"rill.local.v1.GetCurrentUserResponse"> & {
  /**
   * @generated from field: rill.admin.v1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message rill.local.v1.GetCurrentUserResponse.
 * Use `create(GetCurrentUserResponseSchema)` to create a new message.
 */
export const GetCurrentUserResponseSchema: GenMessage<GetCurrentUserResponse> = /*@__PURE__*/
  messageDesc(file_rill_local_v1_api, 15);

/**
 * @generated from service rill.local.v1.LocalService
 */
export const LocalService: GenService<{
  /**
   * Ping returns the current time.
   *
   * @generated from rpc rill.local.v1.LocalService.Ping
   */
  ping: {
    methodKind: "unary";
    input: typeof PingRequestSchema;
    output: typeof PingResponseSchema;
  },
  /**
   * GetMetadata returns information about the local Rill instance.
   *
   * @generated from rpc rill.local.v1.LocalService.GetMetadata
   */
  getMetadata: {
    methodKind: "unary";
    input: typeof GetMetadataRequestSchema;
    output: typeof GetMetadataResponseSchema;
  },
  /**
   * GetVersion returns details about the current and latest available Rill versions.
   *
   * @generated from rpc rill.local.v1.LocalService.GetVersion
   */
  getVersion: {
    methodKind: "unary";
    input: typeof GetVersionRequestSchema;
    output: typeof GetVersionResponseSchema;
  },
  /**
   * DeployValidation validates a deploy request.
   *
   * @generated from rpc rill.local.v1.LocalService.DeployValidation
   */
  deployValidation: {
    methodKind: "unary";
    input: typeof DeployValidationRequestSchema;
    output: typeof DeployValidationResponseSchema;
  },
  /**
   * PushToGithub create a Git repo from local project and pushed to users git account.
   *
   * @generated from rpc rill.local.v1.LocalService.PushToGithub
   */
  pushToGithub: {
    methodKind: "unary";
    input: typeof PushToGithubRequestSchema;
    output: typeof PushToGithubResponseSchema;
  },
  /**
   * DeployProject deploys the local project to the Rill cloud.
   *
   * @generated from rpc rill.local.v1.LocalService.DeployProject
   */
  deployProject: {
    methodKind: "unary";
    input: typeof DeployProjectRequestSchema;
    output: typeof DeployProjectResponseSchema;
  },
  /**
   * RedeployProject updates a deployed project.
   *
   * @generated from rpc rill.local.v1.LocalService.RedeployProject
   */
  redeployProject: {
    methodKind: "unary";
    input: typeof RedeployProjectRequestSchema;
    output: typeof RedeployProjectResponseSchema;
  },
  /**
   * User returns the locally logged in user
   *
   * @generated from rpc rill.local.v1.LocalService.GetCurrentUser
   */
  getCurrentUser: {
    methodKind: "unary";
    input: typeof GetCurrentUserRequestSchema;
    output: typeof GetCurrentUserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_rill_local_v1_api, 0);

