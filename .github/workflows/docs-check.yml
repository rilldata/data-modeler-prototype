name: Build and Test docs
on:
  push:
    tags:
      - "*"
    branches:
      - "main"
    paths:
      - ".github/workflows/docs-check.yml"
      - "docs/**"
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/docs-check.yml"
      - "docs/**"
env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: 23baf08e-2d3e-44db-8bd4-938e54467a29

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build docs
        run: |-
          npm install -w docs
          npm run build -w docs
        # https://typicode.github.io/husky/how-to.html#ci-server-and-docker
        env:
          HUSKY: 0

      - name: Deploy Docs to Netlify docs.rilldata.com
        uses: nwtgck/actions-netlify@v3.0
        if: github.event_name == 'pull_request'
        with:
          publish-dir: ./docs/build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Docs ${{ github.ref_name }} deployed to docs.rilldata.com"
          production-deploy: true
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        timeout-minutes: 1

      - name: Algolia crawler creation and crawl
        uses: algolia/algoliasearch-crawler-github-actions@v1.1.10
        id: algolia_crawler
        if: false
        #if: github.event_name != 'pull_request'
        with:
          crawler-name: rilldata
          crawler-user-id: ${{ secrets.CRAWLER_USER_ID }}
          crawler-api-key: ${{ secrets.CRAWLER_API_KEY }}
          algolia-app-id: ${{ secrets.ALGOLIA_APP_ID }}
          algolia-api-key: ${{ secrets.ALGOLIA_API_KEY }}
          site-url: 'https://docs.rilldata.com'

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@v2
        if: false
        #if: github.event_name != 'pull_request'
        with:
          status: ${{ job.status }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}>"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ANNOUNCE_DD }}
