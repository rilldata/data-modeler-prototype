# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 10m
  # Include test files or not.
  # Default: true
  tests: false
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-dirs:
    - sources
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-files:
    - ".*\\.my\\.go$"
  issues-exit-code: 1

# output configuration options
output:
  # Sort results by: filepath, line and column.
  sort-results: false

linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - bidichk
    - decorder
    - containedctx
    - contextcheck
    - depguard
    - dogsled
    - dupl
    - errcheck
    - errchkjson
    - errname
    - execinquery
    - errorlint
    - exportloopref
    - exhaustive
    - goconst
    - godot
    - gocritic
    - gofmt
    - goimports
    - gomnd
    - gocyclo
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ireturn
    - ineffassign
    - misspell
    - nestif
    - nilerr
    - nilnil
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - thelper
    - tagliatelle
    - tparallel
    - testpackage
    - tenv
    - typecheck
    - unconvert
    - usestdlibvars
    - unparam
    - unused
    - varnamelen
    - whitespace
    - wsl

linters-settings:
  errcheck:
    check-type-assertions: true
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
  goimports:
    # ensure placement of imports with this prefix after all other imports
    # corresponds to `goimports -local`
    local-prefixes: github.com/rilldata/rill-developer
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign" checks
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    enable:
      - fieldalignment
  nestif:
    min-complexity: 15
  nolintlint:
    require-explanation: true
    require-specific: true
  tagliatelle:
    case:
      rules:
        json: snake
  varnamelen:
    max-distance: 10
    ignore-decls:
      - t testing.T
      - i int
      - j int
      - ch Change
      - ch *Change
      - c *cli.Context
      - op *Operation

issues:
  fix: true
  exclude-rules:
    - path: _test\.go # disable some linters for test files
      linters:
        - gocyclo
        - gosec
        - dupl
        - varnamelen
    - linters:
        - gosec
      text: "weak cryptographic primitive"
    - linters:
        - stylecheck
      text: "error strings should not be capitalized"

  max-issues-per-linter: 0
  max-same-issues: 0
