<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.rilldata</groupId>
  <artifactId>sql</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <failsafe.useModulePath>false</failsafe.useModulePath>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <calcite.version>1.30.0</calcite.version>
    <avatica.version>1.22.0</avatica.version>
    <fmpp.version>0.9.16</fmpp.version>
    <freemarker.version>2.3.31</freemarker.version>
    <dependency-plugin.version>3.3.0</dependency-plugin.version>
    <resources-plugin.version>3.2.0</resources-plugin.version>
    <antrun-plugin.version>1.8</antrun-plugin.version>
    <javacc-maven-plugin.version>2.6</javacc-maven-plugin.version>
    <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
    <!-- Note: Changing this may require updating .github/workflows/sql-release.yml -->
    <graalvm.version>21.1.0</graalvm.version> 
    <junit.version>5.8.1</junit.version>
    <reflections.version>0.10.2</reflections.version>
    <hsqldb.version>2.3.4</hsqldb.version>
    <protobuf.version>3.21.5</protobuf.version>
  </properties>
  <dependencies>
    <!--calcite-->
    <dependency>
      <groupId>org.apache.calcite</groupId>
      <artifactId>calcite-core</artifactId>
      <version>${calcite.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica</artifactId>
      <version>${avatica.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>

    <!-- Required to run the ant task to inject Parser.jj template with configs -->
    <dependency>
      <groupId>net.sourceforge.fmpp</groupId>
      <artifactId>fmpp</artifactId>
      <version>${fmpp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>
    <!-- End of Parser.jj templating dependencies -->

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
    </dependency>

    <!-- tests -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- GraalVM -->
    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <version>${graalvm.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.nativeimage</groupId>
      <artifactId>svm</artifactId>
      <version>${graalvm.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>${reflections.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
      </plugin>

      <!-- Parser.jj is used to generate the sql parser using javacc

           Parser.jj is present in calcite core and is a free marker template file, default values for the templates
           are also present in default_config.fmpp files present in calcite core
           We are extending it by providing our own config.fmpp

           To get the final parser implementation, following mvn steps will be performed  -
           1. Populates current classpath in maven.compile.classpath property, to be used by Step 4
           2. Extract Parser.jj template and default configs to build directory from calcite core jar
           3. Copy configs we have created to the build directory so that all build artifacts are in one place
           4. Get complete Parser.jj with data injected from our extended configs and default ones
           5. Compile the Parser.jj into java classes using javacc
           6. Add folder of generated classes as sources directory in the project
      -->
      <!-- Step 1 and 2 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>set-classpath-prop-extract-parser-artifcats</id>
            <phase>initialize</phase>
            <goals>
              <goal>build-classpath</goal>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <outputProperty>maven.compile.classpath</outputProperty>
              <pathSeparator>:</pathSeparator>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.calcite</groupId>
                  <artifactId>calcite-core</artifactId>
                  <version>${calcite.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <includes>**/Parser.jj,**/default_config.fmpp</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 3 Copy the templates present in the codegen directory to ${project.build.directory}/codegen -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-fmpp-resources</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/codegen</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/codegen</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 4 Calcite's Parser.jj will be injected with the variables present in config.fmpp and default_config.fmpp.
        We use AntTask.java from https://github.com/freemarker/fmpp to achieve this instead of using maven plugin
        because maven plugin uses old version of this code which fails with newer calcite template (Calcite also uses this)
        This will generate final Parser.jj file in ${project.build.directory}/generated-sources/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${antrun-plugin.version}</version>
        <executions>
          <execution>
            <id>compile-parser-jj-with-configs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef
                    name="fmpp" classname="fmpp.tools.AntTask"
                    classpath="${maven.compile.classpath}"
                />
                <fmpp
                    sourceRoot="${project.build.directory}/codegen/templates"
                    outputRoot="${project.build.directory}/generated-sources"
                    configuration="${project.build.directory}/codegen/config.fmpp"
                    data="tdd(${project.build.directory}/codegen/config.fmpp), default: tdd(${project.build.directory}/codegen/default_config.fmpp)"
                />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 5 Creates a Java class for the custom parser from the Parser.jj

            lookAhead is set to 1 as grammar is simple as of now. If you get a warning like -

            Warning: Choice conflict in ... construct at ...
            Consider using a lookahead of 2 or more for nested expansion.

            Increase this number as suggested but I think anything beyond 2 will degrade the parser performance
            in that case consider writing grammar in a different way so that its less ambiguous
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>${javacc-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <id>compile-java-parser</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.build.directory}/generated-sources/javacc</sourceDirectory>
              <includes>
                <include>**/Parser.jj</include>
              </includes>
              <lookAhead>1</lookAhead>
              <isStatic>false</isStatic>
              <outputDirectory>${project.build.directory}/generated-sources/javacc</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 6 Adds the path of the generated parser to the classpath
        This is just for maven build while running through IntelliJ you can mark the directory
        `target/generated-sources/javacc` as `Generated Sources Root`
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Custom parser generation done -->

      <!-- Generate protobuf builder java classes using protoc. protoc should be installed
      on the build machine. see - http://google.github.io/proto-lens/installing-protoc.html -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <executions>
          <execution>
            <id>Generate protobuf classes</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${project.basedir}/scripts/protoc-java.sh</argument>
                <argument>SqlNodeProto.proto</argument> <!-- proto file name -->
                <argument>${project.build.sourceDirectory}/com/rilldata/protobuf/</argument> <!-- input dir -->
                <argument>${project.build.directory}/generated-sources/annotations/</argument> <!-- output dir -->
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Native image -->
      <plugin>
        <groupId>org.graalvm.nativeimage</groupId>
        <artifactId>native-image-maven-plugin</artifactId>
        <version>${graalvm.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>native-image</goal>
            </goals>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native-lib</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
            <configuration>
              <compilerArgs>
                <arg>-parameters</arg>
              </compilerArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${dependency-plugin.version}</version>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${resources-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${antrun-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>javacc-maven-plugin</artifactId>
            <version>${javacc-maven-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>native-image-maven-plugin</artifactId>
            <version>${graalvm.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>native-image</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <imageName>librillsql</imageName>
              <buildArgs>
                --shared
                --features=com.rilldata.RegisterAtRuntime
                -H:ReflectionConfigurationFiles=../graalcfg/reflect-config.json
                -H:DynamicProxyConfigurationFiles=../graalcfg/proxy-config.json
                -H:ConfigurationFileDirectories=../graalcfg/
                --allow-incomplete-classpath
                --no-fallback
                -H:+ReportExceptionStackTraces
                -H:EnableURLProtocols=http
                -H:EnableURLProtocols=https
                --enable-all-security-services
                -J-Xms2G
                -J-Xmx7G
                --verbose
                --initialize-at-build-time=ch.qos.logback.classic.Logger
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.apache.calcite.avatica.AvaticaJdbc41Factory
                --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
                --initialize-at-build-time=com.google.common.math.IntMath$1
                --initialize-at-build-time=com.google.common.base.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper
                --initialize-at-build-time=com.google.common.collect.ImmutableSortedMap
                --initialize-at-build-time=com.google.common.math.IntMath
                --initialize-at-build-time=com.google.common.collect.RegularImmutableSortedSet
                --initialize-at-build-time=com.google.common.cache.LocalCache
                --initialize-at-build-time=com.google.common.collect.Range
                --initialize-at-build-time=org.apache.commons.codec.language.Soundex
                --initialize-at-build-time=com.google.common.collect.ImmutableRangeSet
                --initialize-at-build-time=org.slf4j.LoggerFactory
                --initialize-at-build-time=com.google.common.collect.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.SettableFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.cache.CacheBuilder
                --initialize-at-build-time=com.google.common.base.Preconditions
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.slf4j.impl.JDK14LoggerAdapter
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnOrigin
                --initialize-at-build-time=io.substrait.isthmus.metadata.LambdaMetadataSupplier
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Size
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$UniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnOrigins
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMemory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$RowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.util.Pair
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MinRowCount
                --initialize-at-build-time=com.google.common.primitives.Primitives
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Selectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Parallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdUniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdParallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Predicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Distribution
                --initialize-at-build-time=org.apache.calcite.config.CalciteSystemProperty
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NonCumulativeCost
                --initialize-at-build-time=org.apache.calcite.util.Util
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdAllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$TableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdNodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdCollation
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSelectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$DistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$AllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdLowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Memory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMinRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$LowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdTableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistribution
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$CumulativeCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Collation
                --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
                --initialize-at-build-time=com.google.common.math.IntMath$1
                --initialize-at-build-time=com.google.common.base.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper
                --initialize-at-build-time=com.google.common.collect.ImmutableSortedMap
                --initialize-at-build-time=com.google.common.math.IntMath
                --initialize-at-build-time=com.google.common.collect.RegularImmutableSortedSet
                --initialize-at-build-time=com.google.common.cache.LocalCache
                --initialize-at-build-time=com.google.common.collect.Range
                --initialize-at-build-time=org.apache.commons.codec.language.Soundex
                --initialize-at-build-time=com.google.common.collect.ImmutableRangeSet
                --initialize-at-build-time=org.slf4j.LoggerFactory
                --initialize-at-build-time=com.google.common.collect.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.SettableFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.cache.CacheBuilder
                --initialize-at-build-time=com.google.common.base.Preconditions
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.slf4j.impl.JDK14LoggerAdapter
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnOrigin
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Size
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$UniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnOrigins
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMemory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$RowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.util.Pair
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MinRowCount
                --initialize-at-build-time=com.google.common.primitives.Primitives
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Selectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Parallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdUniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdParallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Predicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Distribution
                --initialize-at-build-time=org.apache.calcite.config.CalciteSystemProperty
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NonCumulativeCost
                --initialize-at-build-time=org.apache.calcite.util.Util
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdAllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$TableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdNodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdCollation
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSelectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$DistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$AllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdLowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Memory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMinRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$LowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdTableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistribution
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$CumulativeCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Collation
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native-executable</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
            <configuration>
              <compilerArgs>
                <arg>-parameters</arg>
              </compilerArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${dependency-plugin.version}</version>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${resources-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${antrun-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>javacc-maven-plugin</artifactId>
            <version>${javacc-maven-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>native-image-maven-plugin</artifactId>
            <version>${graalvm.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>native-image</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <mainClass>com.rilldata.SqlConverterMain</mainClass>
              <imageName>sql</imageName>
              <buildArgs>
                --features=com.rilldata.RegisterAtRuntime
                -H:ReflectionConfigurationFiles=../graalcfg/reflect-config.json
                -H:DynamicProxyConfigurationFiles=../graalcfg/proxy-config.json
                -H:ConfigurationFileDirectories=../graalcfg/
                --allow-incomplete-classpath
                --no-fallback
                -H:+ReportExceptionStackTraces
                -H:EnableURLProtocols=http
                -H:EnableURLProtocols=https
                --enable-all-security-services
                -J-Xms2G
                -J-Xmx7G
                --verbose
                --initialize-at-build-time=ch.qos.logback.classic.Logger
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.apache.calcite.avatica.AvaticaJdbc41Factory
                --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
                --initialize-at-build-time=com.google.common.math.IntMath$1
                --initialize-at-build-time=com.google.common.base.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper
                --initialize-at-build-time=com.google.common.collect.ImmutableSortedMap
                --initialize-at-build-time=com.google.common.math.IntMath
                --initialize-at-build-time=com.google.common.collect.RegularImmutableSortedSet
                --initialize-at-build-time=com.google.common.cache.LocalCache
                --initialize-at-build-time=com.google.common.collect.Range
                --initialize-at-build-time=org.apache.commons.codec.language.Soundex
                --initialize-at-build-time=com.google.common.collect.ImmutableRangeSet
                --initialize-at-build-time=org.slf4j.LoggerFactory
                --initialize-at-build-time=com.google.common.collect.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.SettableFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.cache.CacheBuilder
                --initialize-at-build-time=com.google.common.base.Preconditions
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.slf4j.impl.JDK14LoggerAdapter
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnOrigin
                --initialize-at-build-time=io.substrait.isthmus.metadata.LambdaMetadataSupplier
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Size
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$UniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnOrigins
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMemory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$RowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.util.Pair
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MinRowCount
                --initialize-at-build-time=com.google.common.primitives.Primitives
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Selectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Parallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdUniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdParallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Predicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Distribution
                --initialize-at-build-time=org.apache.calcite.config.CalciteSystemProperty
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NonCumulativeCost
                --initialize-at-build-time=org.apache.calcite.util.Util
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdAllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$TableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdNodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdCollation
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSelectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$DistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$AllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdLowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Memory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMinRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$LowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdTableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistribution
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$CumulativeCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Collation
                --initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
                --initialize-at-build-time=com.google.common.math.IntMath$1
                --initialize-at-build-time=com.google.common.base.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper
                --initialize-at-build-time=com.google.common.collect.ImmutableSortedMap
                --initialize-at-build-time=com.google.common.math.IntMath
                --initialize-at-build-time=com.google.common.collect.RegularImmutableSortedSet
                --initialize-at-build-time=com.google.common.cache.LocalCache
                --initialize-at-build-time=com.google.common.collect.Range
                --initialize-at-build-time=org.apache.commons.codec.language.Soundex
                --initialize-at-build-time=com.google.common.collect.ImmutableRangeSet
                --initialize-at-build-time=org.slf4j.LoggerFactory
                --initialize-at-build-time=com.google.common.collect.Platform
                --initialize-at-build-time=com.google.common.util.concurrent.SettableFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.util.concurrent.AbstractFuture
                --initialize-at-build-time=com.google.common.cache.CacheBuilder
                --initialize-at-build-time=com.google.common.base.Preconditions
                --initialize-at-build-time=com.google.common.collect.RegularImmutableMap
                --initialize-at-build-time=org.slf4j.impl.JDK14LoggerAdapter
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnOrigin
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Size
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$UniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdColumnOrigins
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMemory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$RowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$PercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.util.Pair
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExpressionLineage
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MinRowCount
                --initialize-at-build-time=com.google.common.primitives.Primitives
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Selectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Parallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdUniqueKeys
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdParallelism
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPercentageOriginalRows
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Predicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Distribution
                --initialize-at-build-time=org.apache.calcite.config.CalciteSystemProperty
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NonCumulativeCost
                --initialize-at-build-time=org.apache.calcite.util.Util
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdAllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$TableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdNodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdCollation
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSelectivity
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$NodeTypes
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$DistinctRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$MaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$AllPredicates
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMaxRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdLowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ExplainVisibility
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$ColumnUniqueness
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdPopulationSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Memory
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdMinRowCount
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdSize
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$LowerBoundCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdTableReferences
                --initialize-at-build-time=org.apache.calcite.rel.metadata.RelMdDistribution
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$CumulativeCost
                --initialize-at-build-time=org.apache.calcite.rel.metadata.BuiltInMetadata$Collation
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <id>bytecode</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
            <configuration>
              <compilerArgs>
                <arg>-parameters</arg>
              </compilerArgs>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${dependency-plugin.version}</version>
          </plugin>

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${resources-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${antrun-plugin.version}</version>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>javacc-maven-plugin</artifactId>
            <version>${javacc-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
