language: node_js
dist: focal
node_js:
  - 16
os: linux

branches:
  only:
  - /^main$/
  - /^v\d+\.\d+(\.\d+)?$/

cache:
  directories:
    - "$HOME/.npm"
    - "$HOME/.cache"
    - "$TRAVIS_BUILD_DIR/data"
    - "node_modules"

addons:
  apt:
    packages:
      - maven

jobs:
  include:

    # Run tests always
    - stage: Test
      name: "Verify build"
      if: false # disabling this

      # in order to achieve npm ci (clean install) delete the travis cache.
      install: &npm-install
        - echo "NPM Install can take up to 15 mins"
        - npm i
        - echo "Disabling telmetry"
        - cat <<< "$(jq -c -M '.analyticsEnabled |= false' ~/.rill/local.json)" > ~/.rill/local.json

    # Publish binaries on the release
    - stage: Release
      name: "Build & Publish Mac os binary"
      if: tag IS present OR type IN (cron)
      os: osx
      osx_image: xcode13.4
      addons:
        homebrew:
          casks:
          - google-cloud-sdk
          packages:
          - jq
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true

      before_install:
        - ./scripts/check_nightly.sh

      install: *npm-install

      script: &build-vercel-pkg
        - echo "Build the entire application"
        - npm run build

        - echo "Cleaning dev dependencies"
        - npm prune --production

        - echo "Building vercel/pkg binary"
        - npm run to-commonjs && npm run build-vercel-pkg
        - ./scripts/upload.sh

      deploy: &deploy-vercel-pkg
        provider: releases
        api_key: ${GITHUB_TOKEN}
        # explicitly mention all types of binaries
        # travis doesnt support folder upload as of now
        file:
          - rilldata/rill-macos-x64
          - rilldata/rill-linux-x64
          - rilldata/rill-win-x64.exe
        skip_cleanup: true
        on:
          tags: true

    - stage: Release
      name: "Build & Publish Linux binary"
      if: tag IS present OR type IN (cron)
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true

      before_install: &python-setup
        - echo "Installing python 3.7.0 needed during npm install"
        - pyenv install 3.7.0
        - pyenv global 3.7.0
        - ./scripts/check_nightly.sh

      install: *npm-install
      script: *build-vercel-pkg
      deploy: *deploy-vercel-pkg

    - stage: Tag
      name: "Cut a new Release"
      if: tag IS NOT present AND type IN (api)
      install: *npm-install
      addons:
        snaps:
        - name: gh
          channel: latest/stable
      script:
        - set -e
        - git remote remove origin
        - git remote add origin https://${GITHUB_TOKEN}@github.com/rilldata/rill-developer
        - git fetch
        - git checkout main
        - git branch --set-upstream-to=origin/main main
        - gh pr status
        - if [[ -z ${BUMP_TYPE} ]]; then
            echo "Please specify the BUMP_TYPE from (major/minor/patch)";
            exit 1;
          fi
        - npm run bump-version -w web-local -- ${BUMP_TYPE}
